File,Line_number,SRC
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,19,import java.util.Map;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,20,import java.util.Collections;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,23,import org.xml.sax.SAXException;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,24,import org.xml.sax.ContentHandler;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,117,&& !(stream instanceof ByteArrayInputStream)) {
tika-core/src/main/java/org/apache/tika/fork/ForkParser.java,178,client = new ForkClient(loader, parser, java);
tika-core/src/main/java/org/apache/tika/fork/ForkServer.java,61,ForkServer server = new ForkServer(System.in, System.out);
tika-core/src/main/java/org/apache/tika/fork/ForkServer.java,100,Thread.sleep(5000);
tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java,56,unmodifiableSet("title", "link", "base", "meta");
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,103,int hash = name.indexOf('#');
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,104,if (hash != -1) {
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,105,name = name.substring(0, hash);
tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java,118,if (XHTML.equals(uri)) {
tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java,119,if ("a".equals(local) || "img".equals(local)) {
tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java,120,links.add(builderStack.removeFirst().getLink(collapseWhitespaceInAnchor));
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,325,metadataBuffer.append(name);
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,326,metadataBuffer.append(": ");
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,327,metadataBuffer.append(md.get(name));
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,328,metadataBuffer.append("\n");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,57,metadata.add(Metadata.CONTENT_TYPE, "application/rtf");
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,108,this(element, new ServiceLoader());
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,113,this(element, new ServiceLoader(loader));
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,85,this(getBuilder().parse(file));
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,253,metadata.add(property, value);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,259,metadata.add(name, value);
tika-core/src/main/java/org/apache/tika/sax/xpath/NodeMatcher.java,33,public boolean matchesAttribute(String namespace, String name) {
tika-core/src/main/java/org/apache/tika/sax/xpath/NodeMatcher.java,34,return true;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,42,private final Map<String, String> prefixes = new HashMap<String, String>();
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,44,public XPathParser() {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,47,public XPathParser(String prefix, String namespace) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,48,addPrefix(prefix, namespace);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,51,public void addPrefix(String prefix, String namespace) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,52,prefixes.put(prefix, namespace);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,63,public Matcher parse(String xpath) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,64,if (xpath.equals("/text()")) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,65,return TextMatcher.INSTANCE;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,67,return NodeMatcher.INSTANCE;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,69,|| xpath.equals("/descendant:node()")) { // for compatibility
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,70,return new CompositeMatcher(
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,71,TextMatcher.INSTANCE,
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,72,new ChildMatcher(new SubtreeMatcher(NodeMatcher.INSTANCE)));
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,74,return AttributeMatcher.INSTANCE;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,76,return ElementMatcher.INSTANCE;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,78,String name = xpath.substring(2);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,79,String prefix = null;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,80,int colon = name.indexOf(':');
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,81,if (colon != -1) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,82,prefix = name.substring(0, colon);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,83,name = name.substring(colon + 1);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,85,if (prefixes.containsKey(prefix)) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,86,return new NamedAttributeMatcher(prefixes.get(prefix), name);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,88,return Matcher.FAIL;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,91,return new ChildMatcher(parse(xpath.substring(2)));
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,93,return Matcher.FAIL;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,95,return new SubtreeMatcher(parse(xpath.substring(1)));
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,97,int slash = xpath.indexOf('/', 1);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,98,if (slash == -1) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,99,slash = xpath.length();
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,101,String name = xpath.substring(1, slash);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,102,String prefix = null;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,103,int colon = name.indexOf(':');
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,104,if (colon != -1) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,105,prefix = name.substring(0, colon);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,106,name = name.substring(colon + 1);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,108,if (prefixes.containsKey(prefix)) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,109,return new NamedElementMatcher(
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,110,prefixes.get(prefix), name,
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,111,parse(xpath.substring(slash)));
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,113,return Matcher.FAIL;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,116,return Matcher.FAIL;
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,312,NodeList nodes = element.getElementsByTagName("parser");
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,313,for (int i = 0; i < nodes.getLength(); i++) {
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,314,Element node = (Element) nodes.item(i);
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,161,String[] cmd = new String[command.length];
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,162,System.arraycopy(command, 0, cmd, 0, command.length);
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,175,Process process;
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,260,new Thread() {
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,279,new Thread() {
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,292,new Thread() {
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,337,int result = process.waitFor();
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParsersConfigReader.java,187,StringTokenizer st = new StringTokenizer(errs);
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParsersConfigReader.java,204,return ExternalParser.check(command, errVals);
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,114,if (!(e.getMessage().equals("Unexpected block type 0!") && type.equals("image/gif"))) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,120,if (e.getMessage().startsWith("No supported documents found")) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,19,import static org.apache.tika.sax.XHTMLContentHandler.XHTML;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,30,import javax.xml.XMLConstants;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,31,import javax.xml.namespace.QName;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,32,import javax.xml.parsers.ParserConfigurationException;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,33,import javax.xml.parsers.SAXParser;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,34,import javax.xml.parsers.SAXParserFactory;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,59,ElementMappingContentHandler {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,60,private final ContentHandler handler;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,61,private final BitSet textNodeStack = new BitSet();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,62,private int nodeDepth = 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,63,private int completelyFiltered = 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,64,private Stack<String> headingStack = new Stack<String>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,66,private OpenDocumentElementMappingContentHandler(ContentHandler handler,
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,67,Map<QName, TargetElement> mappings) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,68,super(handler, mappings);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,69,this.handler = handler;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,74,throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,76,if (completelyFiltered == 0 && nodeDepth > 0
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,77,&& textNodeStack.get(nodeDepth - 1)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,78,super.characters(ch,start,length);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,84,private boolean needsCompleteFiltering(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,85,String namespaceURI, String localName) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,86,if (TEXT_NS.equals(namespaceURI)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,88,|| localName.endsWith("-style");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,97,private String getXHTMLHeaderTagName(Attributes atts) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,98,String depthStr = atts.getValue(TEXT_NS, "outline-level");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,99,if (depthStr == null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,100,return "h1";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,103,int depth = Integer.parseInt(depthStr);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,104,if (depth >= 6) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,105,return "h6";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,107,return "h1";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,109,return "h" + depth;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,116,private boolean isTextNode(String namespaceURI, String localName) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,117,if (TEXT_NS.equals(namespaceURI) && !localName.equals("page-number") && !localName.equals("page-count")) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,118,return true;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,120,if (SVG_NS.equals(namespaceURI)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,121,return "title".equals(localName) ||
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,124,return false;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,128,public void startElement(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,129,String namespaceURI, String localName, String qName,
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,136,assert nodeDepth >= 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,138,textNodeStack.set(nodeDepth++,
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,139,isTextNode(namespaceURI, localName));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,141,assert completelyFiltered >= 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,143,if (needsCompleteFiltering(namespaceURI, localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,144,completelyFiltered++;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,147,if (completelyFiltered == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,150,if (TEXT_NS.equals(namespaceURI) && "h".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,152,handler.startElement(XHTMLContentHandler.XHTML, el, el, EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,161,public void endElement(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,163,throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,165,if (completelyFiltered == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,168,if (TEXT_NS.equals(namespaceURI) && "h".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,169,final String el = headingStack.pop();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,170,handler.endElement(XHTMLContentHandler.XHTML, el, el);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,172,super.endElement(namespaceURI,localName,qName);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,178,|| "tab".equals(localName))) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,179,this.characters(TAB, 0, TAB.length);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,184,if (needsCompleteFiltering(namespaceURI,localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,185,completelyFiltered--;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,187,assert completelyFiltered >= 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,190,nodeDepth--;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,191,assert nodeDepth >= 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,195,public void startPrefixMapping(String prefix, String uri) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,200,public void endPrefixMapping(String prefix) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,205,public static final String TEXT_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,225,protected static final char[] TAB = new char[] { '\t' };
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,235,new HashMap<QName, TargetElement>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,277,final HashMap<QName,QName> aAttsMapping =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,278,new HashMap<QName,QName>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,298,final HashMap<QName,QName> tableCellAttsMapping =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,299,new HashMap<QName,QName>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,329,new XHTMLContentHandler(handler,metadata),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,330,metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,54,private static final String META_NS = "urn:oasis:names:tc:opendocument:xmlns:meta:1.0";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,62,private static final Property TRANSITION_INITIAL_CREATOR_TO_INITIAL_AUTHOR =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,63,Property.composite(Office.INITIAL_AUTHOR,
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,64,new Property[] { Property.externalText("initial-creator") });
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,79,new MatchingContentHandler(new MetadataHandler(md, property), matcher);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,90,new AttributeDependantMetadataHandler(md, "meta:name", Metadata.USER_DEFINED_METADATA_NAME_PREFIX),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,91,matcher);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,98,META_XPATH.parse("//meta:document-statistic/@meta:"+attribute);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,100,new AttributeMetadataHandler(META_NS, attribute, md, name), matcher);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,104,ContentHandler ch, Metadata md, Property property, String attribute) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,105,Matcher matcher =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,106,META_XPATH.parse("//meta:document-statistic/@meta:"+attribute);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,107,ContentHandler branch = new MatchingContentHandler(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,108,new AttributeMetadataHandler(META_NS, attribute, md, property), matcher);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,109,return new TeeContentHandler(ch, branch);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,140,ch = getMeta(ch, md, Property.externalText(MSOffice.EDIT_TIME), "editing-duration");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,149,ch = getStatistic(ch, md, Office.OBJECT_COUNT,  "object-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,150,ch = getStatistic(ch, md, Office.IMAGE_COUNT,   "image-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,151,ch = getStatistic(ch, md, Office.PAGE_COUNT,    "page-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,152,ch = getStatistic(ch, md, PagedText.N_PAGES,    "page-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,153,ch = getStatistic(ch, md, Office.TABLE_COUNT,   "table-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,155,ch = getStatistic(ch, md, Office.WORD_COUNT,      "word-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,160,ch = getStatistic(ch, md, MSOffice.OBJECT_COUNT,  "object-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,161,ch = getStatistic(ch, md, MSOffice.IMAGE_COUNT,   "image-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,162,ch = getStatistic(ch, md, MSOffice.PAGE_COUNT,    "page-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,163,ch = getStatistic(ch, md, MSOffice.TABLE_COUNT,   "table-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,165,ch = getStatistic(ch, md, MSOffice.WORD_COUNT,      "word-count");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,191,if (odfSubject != null && !odfSubject.equals("") &&
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,52,Collections.unmodifiableSet(new HashSet<MediaType>(Arrays.asList(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,53,MediaType.application("vnd.sun.xml.writer"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,54,MediaType.application("vnd.oasis.opendocument.text"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,55,MediaType.application("vnd.oasis.opendocument.graphics"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,56,MediaType.application("vnd.oasis.opendocument.presentation"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,57,MediaType.application("vnd.oasis.opendocument.spreadsheet"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,58,MediaType.application("vnd.oasis.opendocument.chart"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,59,MediaType.application("vnd.oasis.opendocument.image"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,60,MediaType.application("vnd.oasis.opendocument.formula"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,61,MediaType.application("vnd.oasis.opendocument.text-master"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,62,MediaType.application("vnd.oasis.opendocument.text-web"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,63,MediaType.application("vnd.oasis.opendocument.text-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,64,MediaType.application("vnd.oasis.opendocument.graphics-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,65,MediaType.application("vnd.oasis.opendocument.presentation-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,66,MediaType.application("vnd.oasis.opendocument.spreadsheet-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,67,MediaType.application("vnd.oasis.opendocument.chart-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,68,MediaType.application("vnd.oasis.opendocument.image-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,69,MediaType.application("vnd.oasis.opendocument.formula-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,70,MediaType.application("x-vnd.oasis.opendocument.text"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,71,MediaType.application("x-vnd.oasis.opendocument.graphics"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,72,MediaType.application("x-vnd.oasis.opendocument.presentation"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,73,MediaType.application("x-vnd.oasis.opendocument.spreadsheet"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,74,MediaType.application("x-vnd.oasis.opendocument.chart"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,75,MediaType.application("x-vnd.oasis.opendocument.image"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,76,MediaType.application("x-vnd.oasis.opendocument.formula"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,77,MediaType.application("x-vnd.oasis.opendocument.text-master"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,78,MediaType.application("x-vnd.oasis.opendocument.text-web"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,79,MediaType.application("x-vnd.oasis.opendocument.text-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,80,MediaType.application("x-vnd.oasis.opendocument.graphics-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,81,MediaType.application("x-vnd.oasis.opendocument.presentation-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,82,MediaType.application("x-vnd.oasis.opendocument.spreadsheet-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,83,MediaType.application("x-vnd.oasis.opendocument.chart-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,84,MediaType.application("x-vnd.oasis.opendocument.image-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,85,MediaType.application("x-vnd.oasis.opendocument.formula-template"))));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,127,zipFile = new ZipFile(tis.getFile());
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,143,EndDocumentShieldingContentHandler handler =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,144,new EndDocumentShieldingContentHandler(xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,174,if(handler.getEndDocumentWasCalled()) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,175,handler.reallyEndDocument();
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,53,MediaType.application("xhtml+xml"),
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,54,MediaType.application("vnd.wap.xhtml+xml"),
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,55,MediaType.application("x-asp"))));
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,81,MediaType type = new MediaType(MediaType.TEXT_HTML, charset);
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,82,metadata.set(Metadata.CONTENT_TYPE, type.toString());
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,153,return DefaultHtmlMapper.INSTANCE.mapSafeAttribute(elementName,attributeName) ;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,163,metadata.set(Metadata.CONTENT_TYPE, type.toString());
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,165,metadata.set(Metadata.CONTENT_TYPE, value);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,363,String url = text.substring(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,364,text.indexOf('"') + 1,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,366,);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,219,zip.close();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,90,return "covered-table-cell".equals(localName);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,92,return false;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,130,Attributes atts) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,151,final String el = headingStack.push(getXHTMLHeaderTagName(atts));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,154,super.startElement(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,155,namespaceURI, localName, qName, atts);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,246,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,247,new QName(TEXT_NS, "list"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,248,new TargetElement(XHTML, "ul"));
tika-core/src/main/java/org/apache/tika/detect/XmlRootExtractor.java,53,factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
tika-parsers/src/main/java/org/apache/tika/parser/internal/Activator.java,43,new Properties());
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,145,try {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,146,pdfDocument.decrypt(password);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,644,return new OutputStreamWriter(output, "UTF-8");
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,415,IOUtils.copy(stream, writer, "UTF-8");
tika-core/src/main/java/org/apache/tika/config/ServiceLoader.java,314,new BufferedReader(new InputStreamReader(stream, "UTF-8"));
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,122,name = URLDecoder.decode(name, "UTF-8");
tika-core/src/main/java/org/apache/tika/fork/ForkClient.java,266,jar.write(manifest.getBytes("UTF-8"));
tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java,47,private static final String PROFILE_ENCODING = "UTF-8";
tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java,79,new BufferedReader(new InputStreamReader(stream, PROFILE_ENCODING));
tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java,36,import org.apache.tika.exception.TikaException;
tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java,344,BufferedReader reader = new BufferedReader(new InputStreamReader(is, "UTF-8"));
tika-core/src/main/java/org/apache/tika/language/LanguageProfilerBuilder.java,435,os.write(line.getBytes("UTF-8"));
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmConstants.java,24,public static final String DEFAULT_CHARSET = "UTF-8";
tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java,96,String type = IOUtils.toString(zip, "UTF-8");
tika-parsers/src/main/java/org/apache/tika/parser/image/xmp/JempboxExtractor.java,25,import java.util.Iterator;
tika-parsers/src/main/java/org/apache/tika/parser/image/xmp/JempboxExtractor.java,42,private static final String DEFAULT_XMP_CHARSET = "UTF-8";
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,177,return MediaType.parse(IOUtils.toString(stream, "UTF-8"));
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,129,Writer writer = new OutputStreamWriter(outputStream, "UTF-8");
tika-server/src/main/java/org/apache/tika/server/UnpackerResource.java,103,ch = new BodyContentHandler(new RichTextContentHandler(new OutputStreamWriter(text, "UTF-8")));
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,60,private ParseContext context;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,62,private TikaConfig tikaConfig = null;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,68,this.context = context;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,73,public void body(BodyDescriptor body, InputStream is) throws MimeException,
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,74,IOException {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,39,import org.apache.tika.exception.TikaException;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,45,import org.apache.tika.sax.BodyContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,46,import org.apache.tika.sax.EmbeddedContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,101,BodyContentHandler bch = new BodyContentHandler(handler);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,106,throw new MimeException(e);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,78,Parser parser = context.get(AutoDetectParser.class);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,79,if (parser == null) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,80,parser = context.get(Parser.class);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,82,if (parser == null) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,83,if (tikaConfig == null) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,84,tikaConfig = context.get(TikaConfig.class);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,85,if (tikaConfig == null) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,86,tikaConfig = TikaConfig.getDefaultConfig();
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,89,parser = tikaConfig.getParser();
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,102,parser.parse(is, new EmbeddedContentHandler(bch), submd, context);
tika-parsers/src/main/java/org/apache/tika/parser/feed/FeedParser.java,99,xhtml.characters(content.getValue());
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,328,NodeList mimes = node.getElementsByTagName("mime");
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,329,if (mimes.getLength() > 0) {
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,330,Set<MediaType> types = new HashSet<MediaType>();
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,331,for (int j = 0; j < mimes.getLength(); j++) {
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,332,String mime = getText(mimes.item(j));
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,333,MediaType type = MediaType.parse(mime);
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,334,if (type != null) {
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,335,types.add(type);
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,337,throw new TikaException(
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,341,parser = ParserDecorator.withTypes(parser, types);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,395,size = Math.min(size, frameData.length-copyFrom);
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,20,import org.apache.commons.logging.Log;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,21,import org.apache.commons.logging.LogFactory;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,22,import org.apache.poi.extractor.ExtractorFactory;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,23,import org.apache.poi.hwpf.OldWordFileFormatException;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,24,import org.apache.tika.detect.Detector;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,25,import org.apache.tika.exception.EncryptedDocumentException;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,26,import org.apache.tika.exception.TikaException;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,27,import org.apache.tika.io.TikaInputStream;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,28,import org.apache.tika.metadata.Metadata;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,29,import org.apache.tika.metadata.TikaMetadataKeys;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,30,import org.apache.tika.mime.MediaType;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,31,import org.apache.tika.parser.AutoDetectParser;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,32,import org.apache.tika.parser.ParseContext;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,33,import org.apache.tika.parser.Parser;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,34,import org.apache.tika.parser.html.HtmlParser;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,35,import org.apache.tika.sax.BodyContentHandler;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,36,import org.xml.sax.ContentHandler;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,37,import org.xml.sax.SAXException;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,19,import java.net.MalformedURLException;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,20,import java.net.URL;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,21,import java.util.Arrays;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,22,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,23,import java.util.Locale;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,24,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,25,import java.util.regex.Matcher;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,26,import java.util.regex.Pattern;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,168,metadata.set(name, value);
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,17,package org.apache.tika.sax;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,19,import java.io.OutputStream;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,20,import java.io.UnsupportedEncodingException;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,21,import java.util.Arrays;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,22,import java.util.HashSet;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,23,import java.util.Set;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,25,import org.xml.sax.SAXException;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,34,public class ToHTMLContentHandler extends ToXMLContentHandler {
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,36,private static final Set<String> EMPTY_ELEMENTS =
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,37,new HashSet<String>(Arrays.asList(
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,42,throws UnsupportedEncodingException {
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,43,super(stream, encoding);
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,46,public ToHTMLContentHandler() {
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,47,super();
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,51,public void startDocument() throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,56,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,57,if (inStartElement) {
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,58,write('>');
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,59,inStartElement = false;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,61,if (EMPTY_ELEMENTS.contains(localName)) {
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,62,namespaces.clear();
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,63,return;
tika-core/src/main/java/org/apache/tika/sax/ToHTMLContentHandler.java,67,super.endElement(uri, localName, qName);
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,17,package org.apache.tika.sax;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,19,import java.io.IOException;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,20,import java.io.OutputStream;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,21,import java.io.OutputStreamWriter;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,22,import java.io.StringWriter;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,23,import java.io.UnsupportedEncodingException;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,24,import java.io.Writer;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,26,import org.xml.sax.SAXException;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,27,import org.xml.sax.helpers.DefaultHandler;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,36,public class ToTextContentHandler extends DefaultHandler {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,41,private final Writer writer;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,49,public ToTextContentHandler(Writer writer) {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,50,this.writer = writer;
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,59,public ToTextContentHandler(OutputStream stream) {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,72,throws UnsupportedEncodingException {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,73,this(new OutputStreamWriter(stream, encoding));
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,81,public ToTextContentHandler() {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,82,this(new StringWriter());
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,90,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,91,try {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,92,writer.write(ch, start, length);
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,94,throw new SAXException(
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,107,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,108,characters(ch, start, length);
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,119,public void endDocument() throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,120,try {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,121,writer.flush();
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,123,throw new SAXException("Error flushing character output", e);
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,135,public String toString() {
tika-core/src/main/java/org/apache/tika/sax/ToTextContentHandler.java,136,return writer.toString();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,17,package org.apache.tika.sax;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,19,import java.io.OutputStream;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,20,import java.io.UnsupportedEncodingException;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,21,import java.util.Collections;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,22,import java.util.HashMap;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,23,import java.util.Map;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,25,import org.xml.sax.Attributes;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,26,import org.xml.sax.SAXException;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,36,public class ToXMLContentHandler extends ToTextContentHandler {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,38,private static class ElementInfo {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,40,private final ElementInfo parent;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,42,private final Map<String, String> namespaces;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,44,public ElementInfo(ElementInfo parent, Map<String, String> namespaces) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,45,this.parent = parent;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,46,if (namespaces.isEmpty()) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,47,this.namespaces = Collections.emptyMap();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,49,this.namespaces = new HashMap<String, String>(namespaces);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,53,public String getPrefix(String uri) throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,54,String prefix = namespaces.get(uri);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,55,if (prefix != null) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,56,return prefix;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,58,return parent.getPrefix(uri);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,60,return "";
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,62,throw new SAXException("Namespace " + uri + " not declared");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,67,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,68,String prefix = getPrefix(uri);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,69,if (prefix.length() > 0) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,70,return prefix + ":" + localName;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,72,return localName;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,78,private final String encoding;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,80,protected boolean inStartElement = false;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,82,protected final Map<String, String> namespaces =
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,83,new HashMap<String, String>();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,85,private ElementInfo currentElement;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,96,throws UnsupportedEncodingException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,97,super(stream, encoding);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,98,this.encoding = encoding;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,101,public ToXMLContentHandler(String encoding) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,102,super();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,103,this.encoding = encoding;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,106,public ToXMLContentHandler() {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,107,super();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,108,this.encoding = null;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,115,public void startDocument() throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,116,if (encoding != null) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,117,write("<?xml version=\"1.0\" encoding=\"");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,118,write(encoding);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,119,write("\"?>\n");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,122,currentElement = null;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,123,namespaces.clear();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,128,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,129,namespaces.put(uri, prefix);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,133,public void startElement(
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,135,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,136,lazyCloseStartElement();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,138,currentElement = new ElementInfo(currentElement, namespaces);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,140,write('<');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,141,write(currentElement.getQName(uri, localName));
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,143,for (int i = 0; i < atts.getLength(); i++) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,144,write(' ');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,145,write(currentElement.getQName(atts.getURI(i), atts.getLocalName(i)));
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,146,write('=');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,147,write('"');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,148,char[] ch = atts.getValue(i).toCharArray();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,149,writeEscaped(ch, 0, ch.length, true);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,150,write('"');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,153,for (Map.Entry<String, String> entry : namespaces.entrySet()) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,154,write(' ');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,155,write("xmlns");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,156,String prefix = entry.getValue();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,157,if (prefix.length() > 0) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,158,write(':');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,159,write(prefix);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,161,write('=');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,162,write('"');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,163,char[] ch = entry.getKey().toCharArray();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,164,writeEscaped(ch, 0, ch.length, true);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,165,write('"');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,167,namespaces.clear();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,169,inStartElement = true;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,174,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,175,if (inStartElement) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,176,write(" />");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,177,inStartElement = false;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,179,write("</");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,180,write(qName);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,181,write('>');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,184,namespaces.clear();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,189,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,190,lazyCloseStartElement();
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,191,writeEscaped(ch, start, start + length, false);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,194,private void lazyCloseStartElement() throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,195,if (inStartElement) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,196,write('>');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,197,inStartElement = false;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,207,protected void write(char ch) throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,208,super.characters(new char[] { ch }, 0, 1);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,217,protected void write(String string) throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,218,super.characters(string.toCharArray(), 0, string.length());
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,233,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,234,super.characters(ch, from, to - from);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,235,write('&');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,236,write(entity);
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,237,write(';');
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,238,return to + 1;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,252,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,253,int pos = from;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,254,while (pos < to) {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,255,if (ch[pos] == '<') {
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,256,from = pos = writeCharsAndEntity(ch, from, pos, "lt");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,258,from = pos = writeCharsAndEntity(ch, from, pos, "gt");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,260,from = pos = writeCharsAndEntity(ch, from, pos, "amp");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,262,from = pos = writeCharsAndEntity(ch, from, pos, "quot");
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,264,pos++;
tika-core/src/main/java/org/apache/tika/sax/ToXMLContentHandler.java,267,super.characters(ch, from, to - from);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,108,private int getPlaceHolder() {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,109,return placeHolder;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,139,int previous_index = 0;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,141,for (int i = startPmgl; i <= stopPmgl; i++) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,143,+ dir_offset;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,144,if (i == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,145,dir_chunk = new byte[(int) chmItspHeader.getBlock_len()];
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,149,dir_chunk = ChmCommons
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,150,.copyOfRange(getData(), dir_offset,
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,151,(((1 + i) * (int) chmItspHeader
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,152,.getBlock_len()) + dir_offset));
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,153,previous_index = data_copied;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,155,dir_chunk = new byte[(int) chmItspHeader.getBlock_len()];
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,159,dir_chunk = ChmCommons
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,160,.copyOfRange(getData(), previous_index,
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,161,(((1 + i) * (int) chmItspHeader
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,162,.getBlock_len()) + dir_offset));
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,163,previous_index = data_copied;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,210,private void enumerateOneSegment(byte[] dir_chunk) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,211,try {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,214,int indexWorkData = ChmCommons.indexOf(dir_chunk,
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,216,int indexUserData = ChmCommons.indexOf(dir_chunk,
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,220,setPlaceHolder(indexUserData);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,221,else
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,222,setPlaceHolder(indexWorkData);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,224,if (getPlaceHolder() > 0
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,225,&& dir_chunk[getPlaceHolder() - 1] != 115) {// #{
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,226,do {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,227,if (dir_chunk[getPlaceHolder() - 1] > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,228,DirectoryListingEntry dle = new DirectoryListingEntry();
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,233,doNameCheck(dir_chunk, dle);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,239,dle.setName(new String(ChmCommons.copyOfRange(
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,240,dir_chunk, getPlaceHolder(),
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,242,checkControlData(dle);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,243,checkResetTable(dle);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,245,+ dle.getNameLength());
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,248,if (getPlaceHolder() < dir_chunk.length
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,250,dle.setEntryType(ChmCommons.EntryType.UNCOMPRESSED);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,251,else
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,252,dle.setEntryType(ChmCommons.EntryType.COMPRESSED);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,254,setPlaceHolder(getPlaceHolder() + 1);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,255,dle.setOffset(getEncint(dir_chunk));
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,256,dle.setLength(getEncint(dir_chunk));
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,257,getDirectoryListingEntryList().add(dle);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,259,setPlaceHolder(getPlaceHolder() + 1);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,266,e.printStackTrace();
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,278,private void doNameCheck(byte[] dir_chunk, DirectoryListingEntry dle) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,279,if (dir_chunk[getPlaceHolder() - 1] == 0x73) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,280,dle.setNameLength(dir_chunk[getPlaceHolder() - 1] & 0x21);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,282,dle.setNameLength(dir_chunk[getPlaceHolder()]);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,283,setPlaceHolder(getPlaceHolder() + 1);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,285,dle.setNameLength(dir_chunk[getPlaceHolder() - 1]);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,296,private boolean hasNext(byte[] dir_chunk) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,297,while (getPlaceHolder() < dir_chunk.length) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,298,if (dir_chunk[getPlaceHolder()] == 47
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,299,&& dir_chunk[getPlaceHolder() + 1] != ':') {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,300,setPlaceHolder(getPlaceHolder());
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,301,return true;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,303,&& dir_chunk[getPlaceHolder() + 1] == ':') {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,304,setPlaceHolder(getPlaceHolder());
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,305,return true;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,307,setPlaceHolder(getPlaceHolder() + 1);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,309,return false;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,324,if (getPlaceHolder() < data_chunk.length) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,325,while ((ob = data_chunk[getPlaceHolder()]) < 0) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,328,setPlaceHolder(getPlaceHolder() + 1);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,332,setPlaceHolder(getPlaceHolder() + 1);
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,340,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java,379,dest = data[this.getCurrentPlace()]
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java,380,| data[this.getCurrentPlace() + 1] << 8
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java,381,| data[this.getCurrentPlace() + 2] << 16
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItsfHeader.java,382,| data[this.getCurrentPlace() + 3] << 24;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,136,dest = data[this.getCurrentPlace()]
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,137,| data[this.getCurrentPlace() + 1] << 8
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,138,| data[this.getCurrentPlace() + 2] << 16
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,139,| data[this.getCurrentPlace() + 3] << 24;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,150,dest = data[this.getCurrentPlace()]
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,151,| data[this.getCurrentPlace() + 1] << 8
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,152,| data[this.getCurrentPlace() + 2] << 16
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,153,| data[this.getCurrentPlace() + 3] << 24;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmItspHeader.java,546,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java,161,dest = data[this.getCurrentPlace()]
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java,162,| data[this.getCurrentPlace() + 1] << 8
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java,163,| data[this.getCurrentPlace() + 2] << 16
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java,164,| data[this.getCurrentPlace() + 3] << 24;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmLzxcResetTable.java,324,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java,97,dest = data[this.getCurrentPlace()]
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java,98,| data[this.getCurrentPlace() + 1] << 8
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java,99,| data[this.getCurrentPlace() + 2] << 16
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java,100,| data[this.getCurrentPlace() + 3] << 24;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmgiHeader.java,175,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,92,public void setFreeSpace(long free_space) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,116,private int unmarshalInt32(byte[] data, int dest) throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,120,dest = data[this.getCurrentPlace()]
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,121,| data[this.getCurrentPlace() + 1] << 8
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,122,| data[this.getCurrentPlace() + 2] << 16
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,123,| data[this.getCurrentPlace() + 3] << 24;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,130,private long unmarshalUInt32(byte[] data, long dest) throws ChmParsingException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,134,dest = data[this.getCurrentPlace()]
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,135,| data[this.getCurrentPlace() + 1] << 8
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,136,| data[this.getCurrentPlace() + 2] << 16
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,137,| data[this.getCurrentPlace() + 3] << 24;
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,153,chmPmglHeader.setFreeSpace(chmPmglHeader.unmarshalUInt32(data,
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,154,chmPmglHeader.getFreeSpace()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,155,chmPmglHeader.setUnknown0008(chmPmglHeader.unmarshalUInt32(data,
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,156,chmPmglHeader.getUnknown0008()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,157,chmPmglHeader.setBlockPrev(chmPmglHeader.unmarshalInt32(data,
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,158,chmPmglHeader.getBlockPrev()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,159,chmPmglHeader.setBlockNext(chmPmglHeader.unmarshalInt32(data,
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,160,chmPmglHeader.getBlockNext()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmPmglHeader.java,204,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/DirectoryListingEntry.java,152,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmCommons.java,22,import java.util.Iterator;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmCommons.java,369,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,22,import java.util.Iterator;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,264,int i = 0, start = 0, block = 0;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,270,if (getLzxBlocksCache().size() != 0) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,272,lzxBlock = getLzxBlocksCache().get(i);
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,273,for (int j = bb.getIniBlock(); j <= bb
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,274,.getStartBlock(); j++) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,278,block = i;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,281,break;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,286,if (i == getLzxBlocksCache().size() && i == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,299,lzxBlock = getLzxBlocksCache().get(block);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,76,% (int) clcd.getResetInterval());
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,50,ChmLzxBlock prevBlock) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,58,setChmSection(new ChmSection(prevBlock.getContent()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,68,setContent((int) blockLength);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,70,|| getContent().length < (int) getBlockLength()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,138,case ChmCommons.ALIGNED_OFFSET:
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,139,createAlignedTreeTable();
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,140,case ChmCommons.VERBATIM:
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,142,createMainTreeTable();
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,143,createLengthTreeTable();
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,146,break;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,147,case ChmCommons.UNCOMPRESSED:
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,148,getState().setIntelState(IntelState.STARTED);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,150,getChmSection().setSwath(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,151,getChmSection().getSwath() - 1);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,152,getState().setR0(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,154,.reverseByteOrder(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,155,getChmSection().unmarshalBytes(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,156,4))).longValue()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,157,getState().setR1(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,159,.reverseByteOrder(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,160,getChmSection().unmarshalBytes(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,161,4))).longValue()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,162,getState().setR2(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,164,.reverseByteOrder(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,165,getChmSection().unmarshalBytes(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,166,4))).longValue()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,167,break;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,168,default:
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,169,break;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,189,decompressAlignedBlock(tempLen, getChmSection().getData());// prevcontext
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,192,decompressVerbatimBlock(tempLen, getChmSection().getData());
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,196,.getData());
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,276,ChmConstants.LZX_MAINTREE_TABLEBITS,
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,311,border = getChmSection().getDesyncBits(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,312,ChmConstants.LZX_MAINTREE_TABLEBITS, 0);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,314,break;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,316,s = getState().mainTreeTable[getChmSection().getDesyncBits(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,317,ChmConstants.LZX_MAINTREE_TABLEBITS, 0)];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,327,getChmSection().getSyncBits(getState().mainTreeTable[s]);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,335,.getDesyncBits(ChmConstants.LZX_MAINTREE_TABLEBITS,
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,336,0)];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,337,if (matchfooter >= ChmConstants.LZX_MAINTREE_TABLEBITS) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,338,x = ChmConstants.LZX_MAINTREE_TABLEBITS;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,356,long l = getChmSection().getSyncBits(extra);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,357,matchoffset += (l << 3);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,358,int g = getChmSection().getDesyncBits(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,359,ChmConstants.LZX_NUM_PRIMARY_LENGTHS, 0);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,360,int t = getState().getAlignedTreeTable()[g];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,362,x = ChmConstants.LZX_MAINTREE_TABLEBITS;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,371,getState().getAlignedTreeTable()[t]);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,375,ChmConstants.LZX_NUM_PRIMARY_LENGTHS, 0);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,378,x = ChmConstants.LZX_MAINTREE_TABLEBITS;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,387,getState().getAlignedTreeTable()[t]);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,457,ChmConstants.LZX_MAINTREE_TABLEBITS, 0);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,476,.getDesyncBits(ChmConstants.LZX_LENGTH_TABLEBITS, 0)];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,569,ChmConstants.LZX_PRETREE_TABLEBITS, 0)];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,602,ChmConstants.LZX_PRETREE_TABLEBITS, 0)];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,656,int f = getChmSection().getDesyncBits(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,657,ChmConstants.LZX_PRETREE_TABLEBITS, 0);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,691,z = pretreetable[getChmSection().getDesyncBits(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,692,ChmConstants.LZX_PRETREE_TABLEBITS, 0)];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,719,int tablelen = ChmConstants.LZX_BLOCKTYPE_UNCOMPRESSED;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,728,private void createAlignedTreeTable() {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,730,getState().setAlignedLenTable(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,739,int maxsymbol) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,755,leaf = pos;// pos=0
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,758,return null;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,808,return null;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,831,int length = endOffset - startOffset;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,835,startOffset, (startOffset + length)) : new byte[1];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,842,start, (getContent().length + start)) : new byte[1];
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,853,setState(chmPrevLzxBlock.getState());
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,902,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxState.java,23,import org.apache.tika.parser.chm.core.ChmConstants;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxState.java,28,public class ChmLzxState {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxState.java,293,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmSection.java,26,private byte[] data;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmSection.java,32,ChmCommons.assertByteArrayNotNull(data);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmSection.java,33,setData(data);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmSection.java,51,public int getDesyncBits(int bit, int removeBit) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmSection.java,169,private void setData(byte[] data) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmSection.java,170,this.data = data;
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,331,Process process;
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,332,if(checkCmd.length == 1) {
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,333,process = Runtime.getRuntime().exec(checkCmd[0]);
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,335,process = Runtime.getRuntime().exec(checkCmd);
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,301,metadata.add( metadataPatterns.get(p), m.group(1) );
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,384,String datetimeNoTimeZone = DATE_UNSPECIFIED_TZ.format(original); // Same time zone as Metadata Extractor uses
tika-parsers/src/main/java/org/apache/tika/parser/internal/Activator.java,42,new DefaultParser(Activator.class.getClassLoader()),
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,105,stream = new CloseShieldInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,110,ArchiveInputStream ais;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,113,ais = factory.createArchiveInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java,158,root = new NPOIFSFileSystem(new CloseShieldInputStream(tstream)).getRoot();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,23,import org.apache.poi.hslf.model.*;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,230,Calendar modified = info.getModificationDate();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,291,for(XWPFTableCell cell : row.getTableCells()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,292,xhtml.startElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,293,extractIBodyText(cell, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,294,xhtml.endElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,120,ZipFile zipFile;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,147,ZipInputStream zip = new ZipInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,148,ZipEntry entry = zip.getNextEntry();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,149,while (entry != null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,150,if (entry.getName().equals("mimetype")) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,151,String type = IOUtils.toString(zip, "UTF-8");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,152,metadata.set(Metadata.CONTENT_TYPE, type);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,154,meta.parse(zip, new DefaultHandler(), metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,156,if (content instanceof OpenDocumentContentParser) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,157,((OpenDocumentContentParser) content).parseInternal(zip, handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,160,content.parse(zip, handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,163,if (content instanceof OpenDocumentContentParser) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,164,((OpenDocumentContentParser) content).parseInternal(zip, handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,167,content.parse(zip, handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,170,entry = zip.getNextEntry();
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,241,if (titleLevel == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java,81,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java,82,xhtml.endDocument();
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,34,import java.text.NumberFormat;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,35,import java.text.ParsePosition;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,93,import com.google.gson.Gson;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,882,private class NoDocumentJSONMetHandler extends NoDocumentMetHandler {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,883,private NumberFormat formatter;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,884,private Gson gson;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,887,super(metadata, writer);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,889,formatter = NumberFormat.getInstance();
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,890,gson = new Gson();
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,894,public void outputMetadata(String[] names) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,895,writer.print("{ ");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,896,boolean first = true;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,897,for (String name : names) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,898,if(! first) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,899,writer.println(", ");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,901,first = false;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,903,gson.toJson(name, writer);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,904,writer.print(":");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,905,outputValues(metadata.getValues(name));
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,907,writer.print(" }");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,910,public void outputValues(String[] values) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,911,if(values.length > 1) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,912,writer.print("[");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,914,for(int i=0; i<values.length; i++) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,915,String value = values[i];
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,916,if(i > 0) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,917,writer.print(", ");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,920,if(value == null || value.length() == 0) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,921,writer.print("null");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,924,ParsePosition pos = new ParsePosition(0);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,925,formatter.parse(value, pos);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,926,if(value.length() == pos.getIndex()) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,928,value = value.replaceFirst("^0+(\\d)", "$1");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,929,writer.print(value);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,932,gson.toJson(value, writer);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,936,if(values.length > 1) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,937,writer.print("]");
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,168,private MimeType getMimeType(byte[] data) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,173,return rootMimeType;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,177,MimeType result = null;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,179,if (magic.eval(data)) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,180,result = magic.getType();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,185,if (result != null) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,189,|| "text/html".equals(result.getName())) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,190,XmlRootExtractor extractor = new XmlRootExtractor();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,192,QName rootElement = extractor.extractRootElement(data);
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,193,if (rootElement != null) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,194,for (MimeType type : xmls) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,195,if (type.matchesXML(
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,196,rootElement.getNamespaceURI(),
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,197,rootElement.getLocalPart())) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,198,result = type;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,199,break;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,205,result = textMimeType;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,215,return forName(detector.detect(stream, new Metadata()).toString());
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,217,return rootMimeType;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,432,MediaType type = MediaType.OCTET_STREAM;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,439,type = getMimeType(prefix).getType();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,465,MediaType hint = getMimeType(name).getType();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,466,if (registry.isSpecializationOf(hint, type)) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,467,type = hint;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,476,MediaType hint = forName(typeName).getType();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,477,if (registry.isSpecializationOf(hint, type)) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,478,type = hint;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,485,return type;
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,52,Properties properties = new Properties();
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,53,try {
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,56,throw new RuntimeException(e);
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,59,logger.info("Starting Tikaserver "+properties.getProperty("tikaserver.version"));
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,60,logger.info("Starting Tika Server " + new Tika().toString());
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,55,final TextExtractor ert = new TextExtractor(new XHTMLContentHandler(handler, metadata), metadata);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,321,public TextExtractor(XHTMLContentHandler out, Metadata metadata) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,326,private static boolean isHexChar(int ch) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,341,private static int hexValue(int ch) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,372,if (pendingByteCount == pendingBytes.length) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,374,final byte[] newArray = new byte[(int) (pendingBytes.length*1.25)];
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,375,System.arraycopy(pendingBytes, 0, newArray, 0, pendingBytes.length);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,376,pendingBytes = newArray;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,377,pendingByteBuffer = ByteBuffer.wrap(pendingBytes);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,379,pendingBytes[pendingByteCount++] = (byte) b;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,872,if (!groupState.ignore) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,886,int bytesToRead = param;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,887,byte[] tmpArray = new byte[Math.min(1024, bytesToRead)];
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,888,while (bytesToRead > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,889,int r = in.read(tmpArray, 0, Math.min(bytesToRead, tmpArray.length));
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,890,if (r < 0) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,891,throw new TikaException("unexpected end of file: need " + param + " bytes of binary data, found " + (param-bytesToRead));
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,893,bytesToRead -= r;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,1035,groupState.ignore = true;
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,46,options.addOption("h", "help", false, "this help message");
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,214,addMetadata(metadata, TikaCoreProperties.TITLE, info.getTitle());
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,215,addMetadata(metadata, TikaCoreProperties.CREATOR, info.getAuthor());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,324,private int handleSpecialCharacterRuns(Paragraph p, int index, boolean skipStyling,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,549,private PicturesTable picturesTable;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,87,addTextIfAny(xhtml, "header", wordExtractor.getHeaderText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,99,i += handleParagraph(p, 0, r, document, pictures, pictureTable, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,119,addTextIfAny(xhtml, "footer", wordExtractor.getFooterText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,142,private int handleParagraph(Paragraph p, int parentTableLevel, Range r, HWPFDocument document,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,160,handleParagraph(cellP, p.getTableLevel(), cell, document, pictures, pictureTable, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,196,Field field = document.getFields().getFieldByStartOffset(FieldsDocumentPart.MAIN,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,197,cr.getStartOffset());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,362,if(text.startsWith("HYPERLINK") && text.indexOf('"') > -1) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,713,File outputFile = new File(extractDir, name);
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,18,package org.apache.tika.parser.chm;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,20,import java.io.ByteArrayInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,21,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,22,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,23,import java.util.Iterator;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,24,import org.apache.tika.exception.TikaException;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,25,import org.apache.tika.metadata.Metadata;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,26,import org.apache.tika.parser.ParseContext;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,27,import org.apache.tika.parser.chm.accessor.DirectoryListingEntry;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,28,import org.apache.tika.parser.chm.core.ChmExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,29,import org.apache.tika.parser.html.HtmlParser;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,30,import org.apache.tika.sax.BodyContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,31,import org.xml.sax.SAXException;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,153,StringBuilder wBuf = new StringBuilder();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,154,InputStream stream = null;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,155,Metadata metadata = new Metadata();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,156,HtmlParser htmlParser = new HtmlParser();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,157,BodyContentHandler handler = new BodyContentHandler(-1);// -1
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,158,ParseContext parser = new ParseContext();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,159,try {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,176,throw new RuntimeException(e);
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,180,return wBuf.toString();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,64,DirectoryListingEntry entry;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,69,try {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,70,entry = it.next();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,71,if (isRightEntry(entry)) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,73,if (tmp != null) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,74,sb.append(extract(tmp));
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,152,private String extract(byte[][] byteObject) {// throws IOException
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,160,for (int i = 0; i < byteObject.length; i++) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,161,stream = new ByteArrayInputStream(byteObject[i]);
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,162,try {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,163,htmlParser.parse(stream, handler, metadata, parser);
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,165,wBuf.append(new String(byteObject[i]));
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,171,+ System.getProperty("line.separator"));
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,172,stream.close();
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,241,public byte[][] extractChmEntry(DirectoryListingEntry directoryListingEntry) throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,242,byte[][] tmp = null;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,243,byte[] dataSegment = null;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,254,dataSegment = ChmCommons.copyOfRange(getData(), dataOffset,
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,255,dataOffset + directoryListingEntry.getLength());
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,262,tmp = new byte[bb.getEndBlock() - bb.getStartBlock() + 1][];
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,289,dataSegment = ChmCommons.getChmBlockSegment(getData(),
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,304,dataSegment = lzxBlock.getContent(
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,305,bb.getStartOffset(), bb.getEndOffset());
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,306,tmp[0] = dataSegment;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,311,dataSegment = lzxBlock.getContent(bb
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,312,.getStartOffset());
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,313,tmp[0] = dataSegment;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,317,dataSegment = lzxBlock.getContent();
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,318,tmp[i - bb.getStartBlock()] = dataSegment;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,322,dataSegment = lzxBlock.getContent(0,
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,323,bb.getEndOffset());
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,324,tmp[i - bb.getStartBlock()] = dataSegment;
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,359,return (tmp != null) ? tmp : (new byte[1][]);
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,37,public class CHMDocumentInformation {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,39,private ChmExtractor chmExtractor = null;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,51,public static CHMDocumentInformation load(InputStream is) throws TikaException, IOException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,52,CHMDocumentInformation document = new CHMDocumentInformation();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,53,document.setChmExtractor(new ChmExtractor(is));
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,54,return document;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,62,private String getContent() {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,72,byte[][] tmp = getChmExtractor().extractChmEntry(entry);
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,93,private boolean isRightEntry(DirectoryListingEntry entry) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,94,return (entry.getName().endsWith(".html") || entry.getName().endsWith(".htm"));
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,102,private ChmExtractor getChmExtractor() {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,103,return chmExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,111,private void setChmExtractor(ChmExtractor chmExtractor) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,112,this.chmExtractor = chmExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,123,public void getCHMDocInformation(Metadata metadata) throws TikaException,
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,124,IOException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,125,if (getChmExtractor() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,127,metadata.add(Metadata.CONTENT_TYPE, "application/x-chm");
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,129,metadata.add(Metadata.CONTENT_TYPE, "unknown");
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,140,public String getText() throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,141,return getContent();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHMDocumentInformation.java,183,public static void main(String[] args) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/ChmParser.java,48,CHMDocumentInformation chmInfo = CHMDocumentInformation.load(stream);
tika-parsers/src/main/java/org/apache/tika/parser/chm/ChmParser.java,56,chmInfo.getCHMDocInformation(metadata);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,109,while (getContentLength() < getBlockLength()) {// && tempStopLoop
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,280,public void decompressUncompressedBlock(int len, byte[] prevcontent) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,299,public void decompressAlignedBlock(int len, byte[] prevcontent) throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,18,package org.apache.tika.parser.chm;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,20,import org.apache.tika.exception.TikaException;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,21,import org.apache.tika.sax.TextContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,22,import org.xml.sax.ContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,23,import org.xml.sax.SAXException;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,30,public class CHM2XHTML {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,32,public static void process(CHMDocumentInformation chmDoc,
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,33,ContentHandler handler) throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,34,String text = chmDoc.getText();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,35,try {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,36,if (text.length() > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,37,handler.characters(text.toCharArray(), 0, text.length());
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,38,new CHM2XHTML(chmDoc, handler);
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,40,throw new TikaException("Could not extract content");
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,43,throw new RuntimeException(e);
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,48,throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,49,return chmDoc.getText();
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,52,protected TextContentHandler handler;
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,54,public CHM2XHTML(CHMDocumentInformation chmDoc, ContentHandler handler) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/CHM2XHTML.java,55,this.handler = new TextContentHandler(handler);
tika-parsers/src/main/java/org/apache/tika/parser/chm/ChmParser.java,50,extractMetadata(chmInfo, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/chm/ChmParser.java,51,CHM2XHTML.process(chmInfo, handler);
tika-parsers/src/main/java/org/apache/tika/parser/chm/ChmParser.java,54,private void extractMetadata(CHMDocumentInformation chmInfo,
tika-parsers/src/main/java/org/apache/tika/parser/chm/ChmParser.java,55,Metadata metadata) throws TikaException, IOException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/ChmParser.java,38,Collections.singleton(MediaType.application("chm"));
tika-parsers/src/main/java/org/apache/tika/parser/chm/ChmParser.java,49,metadata.set(Metadata.CONTENT_TYPE, "chm");
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,39,import javax.ws.rs.*;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,40,import javax.ws.rs.core.*;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,41,import java.io.*;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,42,import java.util.List;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,43,import java.util.Map;
tika-server/src/main/java/org/apache/tika/server/TikaResource.java,44,import java.util.Set;
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,33,import org.apache.cxf.endpoint.Server;
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,45,options.addOption("p", "port", true, "listen port (default = "+DEFAULT_PORT+ ')');
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,73,if (line.hasOption("help")) {
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,74,HelpFormatter helpFormatter = new HelpFormatter();
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,75,helpFormatter.printHelp("tikaserver", options);
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,76,System.exit(-1);
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,82,List providers = new ArrayList();
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,91,sf.setAddress("http://localhost:" + TikaServerCli.DEFAULT_PORT + "/");
tika-server/src/main/java/org/apache/tika/server/TikaServerCli.java,98,Server server = sf.create();
tika-parsers/src/main/java/org/apache/tika/parser/font/TrueTypeParser.java,61,TikaInputStream tis = TikaInputStream.cast(stream);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,791,InputStream input = socket.getInputStream();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,72,MasterSheet master = slide.getMasterSheet();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,73,if(master != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,74,xhtml.startElement("p", "class", "slide-master-content");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,75,textRunsToText(xhtml, master.getTextRuns(), true );
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,76,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,83,textRunsToText(xhtml, slide.getTextRuns(), false );
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,151,textRunsToText(xhtml, notes.getTextRuns(), false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,166,private void textRunsToText(XHTMLContentHandler xhtml, TextRun[] runs, boolean isMaster) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,175,if (!isMaster || (run.getRunType() != 0 && run.getRunType() != 1)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,176,xhtml.characters(run.getText());
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,61,PDDocument document, ContentHandler handler, Metadata metadata,
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,69,PDF2XHTML pdf2XHTML = new PDF2XHTML(handler, metadata,
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,96,private PDF2XHTML(ContentHandler handler, Metadata metadata,
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,25,import java.util.Map;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,35,import org.apache.pdfbox.pdmodel.PDDocumentCatalog;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,37,import org.apache.pdfbox.pdmodel.PDDocumentNameDictionary;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,38,import org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,39,import org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,40,import org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,43,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,55,import org.apache.tika.sax.EmbeddedContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,153,PDF2XHTML.process(pdfDocument, handler, metadata,
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,157,extractEmbeddedDocuments(context, pdfDocument, handler);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,167,throws IOException, SAXException, TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,168,PDDocumentCatalog catalog = document.getDocumentCatalog();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,169,PDDocumentNameDictionary names = catalog.getNames();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,170,if (names != null) {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,172,PDEmbeddedFilesNameTreeNode embeddedFiles = names.getEmbeddedFiles();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,173,if (embeddedFiles != null) {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,175,EmbeddedDocumentExtractor embeddedExtractor = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,176,if (embeddedExtractor == null) {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,177,embeddedExtractor = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,182,if (embeddedFileNames != null) {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,184,PDComplexFileSpecification spec = (PDComplexFileSpecification) ent.getValue();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,185,PDEmbeddedFile file = spec.getEmbeddedFile();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,187,Metadata metadata = new Metadata();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,189,metadata.set(Metadata.RESOURCE_NAME_KEY, ent.getKey());
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,190,metadata.set(Metadata.CONTENT_TYPE, file.getSubtype());
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,191,metadata.set(Metadata.CONTENT_LENGTH, Long.toString(file.getSize()));
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,193,if (embeddedExtractor.shouldParseEmbedded(metadata)) {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,194,TikaInputStream stream = TikaInputStream.get(file.createInputStream());
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,195,try {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,196,embeddedExtractor.parseEmbedded(
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,197,stream,
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,198,new EmbeddedContentHandler(handler),
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,199,metadata, false);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,201,stream.close();
tika-core/src/main/java/org/apache/tika/detect/MagicDetector.java,65,type.equals("regex"), start, end);
tika-core/src/main/java/org/apache/tika/detect/MagicDetector.java,368,Pattern p = Pattern.compile(new String(this.pattern));
tika-core/src/main/java/org/apache/tika/detect/MagicDetector.java,391,match = (buffer[i + j] & mask[j]) == pattern[j];
tika-core/src/main/java/org/apache/tika/embedder/ExternalEmbedder.java,409,tikaInputStream.getFile().delete();
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,59,private static MimeTypes getDefaultMimeTypes() {
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,60,return MimeTypes.getDefaultMimeTypes();
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,138,this.mimeTypes = getDefaultMimeTypes();
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,169,this.mimeTypes = getDefaultMimeTypes();
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,304,return getDefaultMimeTypes();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,497,if (DEFAULT_TYPES == null) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,499,DEFAULT_TYPES = MimeTypesFactory.create(
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,509,return DEFAULT_TYPES;
tika-core/src/main/java/org/apache/tika/mime/MimeTypesFactory.java,137,ClassLoader cl = MimeTypesReader.class.getClassLoader();
tika-core/src/main/java/org/apache/tika/mime/MimeTypesFactory.java,140,URL coreURL = cl.getResource(classPrefix+coreFilePath);
tika-core/src/main/java/org/apache/tika/mime/MimeTypesFactory.java,142,cl.getResources(classPrefix+extensionFilePath));
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,187,boolean curBold = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,188,boolean curItalic = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,191,for(XWPFRun run : paragraph.getRuns()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,192,if (run.isBold() != curBold) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,193,if (curItalic) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,194,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,195,curItalic = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,197,if (run.isBold()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,198,xhtml.startElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,200,xhtml.endElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,202,curBold = run.isBold();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,205,if (run.isItalic() != curItalic) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,206,if (run.isItalic()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,207,xhtml.startElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,209,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,211,curItalic = run.isItalic();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,214,boolean addedHREF = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,215,if(run instanceof XWPFHyperlinkRun) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,216,XWPFHyperlinkRun linkRun = (XWPFHyperlinkRun)run;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,217,XWPFHyperlink link = linkRun.getHyperlink(document);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,218,if(link != null && link.getURL() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,219,xhtml.startElement("a", "href", link.getURL());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,220,addedHREF = true;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,222,xhtml.startElement("a", "href", "#" + linkRun.getAnchor());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,223,addedHREF = true;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,227,xhtml.characters(run.toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,230,for(XWPFPicture picture : run.getEmbeddedPictures()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,231,if(paragraph.getDocument() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,232,XWPFPictureData data = picture.getPictureData();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,233,if(data != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,234,AttributesImpl attr = new AttributesImpl();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,236,attr.addAttribute("", "src", "src", "CDATA", "embedded:" + data.getFileName());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,237,attr.addAttribute("", "alt", "alt", "CDATA", picture.getDescription());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,239,xhtml.startElement("img", attr);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,240,xhtml.endElement("img");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,245,if (addedHREF) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,246,xhtml.endElement("a");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,251,if (curItalic) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,252,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,253,curItalic = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,255,if (curBold) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,256,xhtml.endElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,257,curBold = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,336,for(XWPFParagraph p : header.getParagraphs()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,337,extractParagraph(p, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,340,for(XWPFTable table : header.getTables()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,341,extractTable(table, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,43,import org.apache.tika.sax.EndDocumentShieldingContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,110,EndDocumentShieldingContentHandler handler =
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,111,new EndDocumentShieldingContentHandler(baseHandler);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,112,extractor.getXHTML(handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,118,handler.reallyEndDocument();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,67,private final List<Boolean> sheetProtected = new ArrayList<Boolean>();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,167,sheetProtected.add(handler.hasProtection);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,349,public MetadataExtractor getMetadataExtractor() {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,350,return new MetadataExtractor(extractor) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,352,public void extract(Metadata metadata) throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,353,super.extract(metadata);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,355,metadata.set(TikaMetadataKeys.PROTECTED, "false");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,356,for(boolean prot : sheetProtected) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,357,if(prot) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,358,metadata.set(TikaMetadataKeys.PROTECTED, "true");
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,175,Property SCENE_CODE = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,409,Property CONTACT_INFO_ADDRESS = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,446,Property CONTACT_INFO_EMAIL = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,463,Property CONTACT_INFO_PHONE = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,496,Property CONTACT_INFO_WEB_URL = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,698,Property IMAGE_SUPPLIER_ID = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,699,PREFIX_PLUS + Metadata.NAMESPACE_PREFIX_DELIMITER + "ImageSupplierId");
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,797,Property COPYRIGHT_OWNER_ID = Property.internalTextBag(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,798,PREFIX_PLUS + Metadata.NAMESPACE_PREFIX_DELIMITER + "CopyrightOwnerId");
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,839,Property IMAGE_CREATOR_ID = Property.internalTextBag(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,840,PREFIX_PLUS + Metadata.NAMESPACE_PREFIX_DELIMITER + "ImageCreatorId");
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,874,Property LICENSOR_ID = Property.internalTextBag(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,875,PREFIX_PLUS + Metadata.NAMESPACE_PREFIX_DELIMITER + "LicensorId");
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1052,Property ARTWORK_OR_OBJECT_DETAIL_COPYRIGHT_NOTICE = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1058,Property ARTWORK_OR_OBJECT_DETAIL_CREATOR = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1066,Property ARTWORK_OR_OBJECT_DETAIL_DATE_CREATED = Property.internalDate(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1073,Property ARTWORK_OR_OBJECT_DETAIL_SOURCE = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1080,Property ARTWORK_OR_OBJECT_DETAIL_SOURCE_INVENTORY_NUMBER = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1086,Property ARTWORK_OR_OBJECT_DETAIL_TITLE = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1093,Property LOCATION_SHOWN_CITY = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1104,Property LOCATION_SHOWN_COUNTRY_CODE = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1111,Property LOCATION_SHOWN_COUNTRY_NAME = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1119,Property LOCATION_SHOWN_PROVINCE_OR_STATE = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1128,Property LOCATION_SHOWN_SUBLOCATION = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1135,Property LOCATION_SHOWN_WORLD_REGION = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1192,Property REGISTRY_ENTRY_CREATED_ITEM_ID = Property.internalText(
tika-core/src/main/java/org/apache/tika/metadata/IPTC.java,1198,Property REGISTRY_ENTRY_CREATED_ORGANISATION_ID = Property.internalText(
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,115,addHtmlMetadata(
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,391,String datetimeNoTimeZone = DATE_UNSPECIFIED_TZ.format(datetime);
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,392,metadata.set(TikaCoreProperties.MODIFIED, datetimeNoTimeZone);
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,394,if (metadata.get(TikaCoreProperties.CREATED) == null) {
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,395,metadata.set(TikaCoreProperties.CREATED, datetimeNoTimeZone);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,140,ais.close();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,143,xhtml.endDocument();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,58,private static final class OpenDocumentElementMappingContentHandler extends
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,208,public static final String TABLE_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,211,public static final String OFFICE_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,214,public static final String SVG_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,217,public static final String PRESENTATION_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,220,public static final String DRAW_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,223,public static final String XLINK_NS = "http://www.w3.org/1999/xlink";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,227,private static final Attributes EMPTY_ATTRIBUTES = new AttributesImpl();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,234,private static final HashMap<QName, TargetElement> MAPPINGS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,237,static {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,239,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,240,new QName(TEXT_NS, "p"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,241,new TargetElement(XHTML, "p"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,243,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,244,new QName(TEXT_NS, "line-break"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,245,new TargetElement(XHTML, "br"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,249,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,250,new QName(TEXT_NS, "list-item"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,251,new TargetElement(XHTML, "li"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,252,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,253,new QName(TEXT_NS, "note"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,255,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,256,new QName(OFFICE_NS, "annotation"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,258,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,259,new QName(PRESENTATION_NS, "notes"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,261,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,262,new QName(DRAW_NS, "object"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,263,new TargetElement(XHTML, "object"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,264,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,265,new QName(DRAW_NS, "text-box"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,266,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,267,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,268,new QName(SVG_NS, "title"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,269,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,270,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,271,new QName(SVG_NS, "desc"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,272,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,273,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,274,new QName(TEXT_NS, "span"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,275,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,279,aAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,280,new QName(XLINK_NS, "href"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,281,new QName("href"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,282,aAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,283,new QName(XLINK_NS, "title"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,284,new QName("title"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,285,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,286,new QName(TEXT_NS, "a"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,287,new TargetElement(XHTML, "a", aAttsMapping));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,290,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,291,new QName(TABLE_NS, "table"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,292,new TargetElement(XHTML, "table"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,294,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,295,new QName(TABLE_NS, "table-row"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,296,new TargetElement(XHTML, "tr"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,300,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,301,new QName(TABLE_NS, "number-columns-spanned"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,302,new QName("colspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,303,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,304,new QName(TABLE_NS, "number-rows-spanned"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,305,new QName("rowspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,312,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,313,new QName(TABLE_NS, "number-columns-repeated"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,314,new QName("colspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,315,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,316,new QName(TABLE_NS, "table-cell"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,317,new TargetElement(XHTML, "td", tableCellAttsMapping));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,338,DefaultHandler dh = new OpenDocumentElementMappingContentHandler(handler, MAPPINGS);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,112,protected ContentHandler getContentHandler(ContentHandler ch, Metadata md, ParseContext context) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,115,ch = new TeeContentHandler(super.getContentHandler(ch, md, context),
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,96,while ((bytesRead = reader.read(buffer, 0, Math.min(max, 1024))) >= 0) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,296,DocumentInputStream documentInputStream = root.createDocumentInputStream(WORKBOOK_ENTRY);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java,227,return XLS;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,168,metadata.set(tag.getTagName(), tag.getDescription());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java,232,names.contains("EncryptionInfo") &&
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java,233,names.contains("\u0006DataSpaces")) {
tika-core/src/main/java/org/apache/tika/fork/InputStreamResource.java,40,return e;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,558,if (!inParagraph) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,580,if (inParagraph) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,591,start("p");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,1247,out.endElement("a");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,966,if (!groupState.ignore && (equals("par") || equals("pard") || equals("sect") || equals("sectd") || equals("plain") || equals("ltrch") || equals("rtlch"))) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,64,private boolean curStrikeThrough;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,65,private boolean curBold;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,66,private boolean curItalic;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,125,private static IWORKDocumentType detectType(InputStream stream) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,73,InputStream shield = new CloseShieldInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,78,MediaType type = ZipContainerDetector.detectOfficeOpenXML(pkg);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,41,import org.apache.tika.exception.TikaException;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,43,import org.apache.tika.io.TemporaryResources;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,67,TemporaryResources tmp = new TemporaryResources();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,69,TikaInputStream tis = TikaInputStream.get(input, tmp);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,71,byte[] prefix = new byte[1024]; // enough for all known formats
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,72,int length = tis.peek(prefix);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,74,MediaType type = detectArchiveFormat(prefix, length);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,77,return detectZipFormat(tis);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,79,return type;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,81,return detectCompressorFormat(prefix, length);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,84,try {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,85,tmp.dispose();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,128,private static MediaType detectZipFormat(TikaInputStream tis) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,153,try {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,154,zip.close();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,190,try {
tika-core/src/main/java/org/apache/tika/parser/ParsingReader.java,257,if (throwable instanceof IOException) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,67,xhtml.startDocument();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,73,CompositeTagHandler tag = new CompositeTagHandler(audioAndTags.tags);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,75,metadata.set(TikaCoreProperties.TITLE, tag.getTitle());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,76,metadata.set(TikaCoreProperties.CREATOR, tag.getArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,77,metadata.set(XMPDM.ARTIST, tag.getArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,78,metadata.set(XMPDM.COMPOSER, tag.getComposer());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,79,metadata.set(XMPDM.ALBUM, tag.getAlbum());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,80,metadata.set(XMPDM.RELEASE_DATE, tag.getYear());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,81,metadata.set(XMPDM.GENRE, tag.getGenre());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,83,List<String> comments = new ArrayList<String>();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,84,for (ID3Comment comment : tag.getComments()) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,85,StringBuffer cmt = new StringBuffer();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,86,if (comment.getLanguage() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,87,cmt.append(comment.getLanguage());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,88,cmt.append(" - ");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,90,if (comment.getDescription() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,91,cmt.append(comment.getDescription());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,92,if (comment.getText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,93,cmt.append("\n");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,96,if (comment.getText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,97,cmt.append(comment.getText());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,100,comments.add(cmt.toString());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,101,metadata.add(XMPDM.LOG_COMMENT.getName(), cmt.toString());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,104,xhtml.element("h1", tag.getTitle());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,105,xhtml.element("p", tag.getArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,116,for (String comment : comments) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,117,xhtml.element("p", comment);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,120,if (audioAndTags.audio != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,121,metadata.set("samplerate", String.valueOf(audioAndTags.audio.getSampleRate()));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,122,metadata.set("channels", String.valueOf(audioAndTags.audio.getChannels()));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,123,metadata.set("version", audioAndTags.audio.getVersion());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,125,metadata.set(
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,126,XMPDM.AUDIO_SAMPLE_RATE,
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,127,Integer.toString(audioAndTags.audio.getSampleRate()));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,128,if(audioAndTags.audio.getChannels() == 1) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,129,metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, "Mono");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,131,metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, "Stereo");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,133,metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, "5.1");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,135,metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, "7.1");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,19,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,20,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,29,import org.apache.tika.exception.TikaException;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,83,extractContent(slideLayout.getShapes(), true, xhtml, null);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,86,XSLFSheet slideMaster = slideLayout.getMasterSheet();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,87,extractContent(slideMaster.getShapes(), true, xhtml, null);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,91,if (slideNotes != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,92,extractContent(slideNotes.getShapes(), false, xhtml, slideDesc);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,58,import org.xml.sax.InputSource;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,61,import org.xml.sax.XMLReader;
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,20,import java.util.ArrayList;
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,21,import java.util.BitSet;
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,22,import java.util.List;
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,194,elements = new ArrayList<RecordedElement>();
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,295,for (char[] chars : element.getCharacters()) {
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,298,if (validCharacterRuns.get(curCharsIndex)) {
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,49,new HashMap<MediaType, MediaType>();
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,77,SortedSet<MediaType> aliases = new TreeSet<MediaType>();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,99,private final Map<MediaType, MimeType> types =
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,100,new HashMap<MediaType, MimeType>();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,19,import java.io.ByteArrayInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,20,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,21,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,23,import java.util.regex.Pattern;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,37,import org.apache.poi.openxml4j.opc.PackageAccess;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,194,OPCPackage pkg = OPCPackage.open(stream.getFile().getPath(), PackageAccess.READ);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,195,stream.setOpenContainer(pkg);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,203,return null;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,207,return null;
tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java,131,super.startElement(XHTML, "html", "html", EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,547,while (currentRow < entry.getKey().y) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,548,handler.endElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,549,handler.endElement("tr");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,550,handler.startElement("tr");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,551,handler.startElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,552,currentRow++;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,76,&& TikaInputStream.isTikaInputStream(input)) {
tika-core/src/main/java/org/apache/tika/fork/ClassLoaderProxy.java,115,return defineClass(name, data, 0, data.length);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,61,protected ChmBlockInfo getChmBlockInfo(DirectoryListingEntry dle,
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,62,int bytesPerBlock, ChmLzxcControlData clcd,
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,63,ChmBlockInfo chmBlockInfo) throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,65,throw new ChmParsingException("Please check you parameters");
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,67,chmBlockInfo.setStartBlock(dle.getOffset() / bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,69,/ bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,70,chmBlockInfo.setStartOffset(dle.getOffset() % bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,72,% bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,74,chmBlockInfo
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,77,return chmBlockInfo;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,82,ChmLzxcControlData clcd) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,111,private boolean validateParameters(DirectoryListingEntry dle,
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,259,ChmBlockInfo bb = ChmBlockInfo.getChmBlockInfoInstance(
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,261,.getBlockLen(), getChmLzxcControlData());
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,287,start = bb.getIniBlock();
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,302,for (i = start; i <= bb.getEndBlock();) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,303,if (i == bb.getStartBlock() && i == bb.getEndBlock()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,310,if (i == bb.getStartBlock()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,316,if (i > bb.getStartBlock() && i < bb.getEndBlock()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,321,if (i == bb.getEndBlock()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,40,private static ChmBlockInfo chmBlockInfo = null;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,42,private ChmBlockInfo() {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,83,setChmBlockInfo(new ChmBlockInfo());
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,84,getChmBlockInfo().setStartBlock(dle.getOffset() / bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,85,getChmBlockInfo().setEndBlock(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,87,getChmBlockInfo().setStartOffset(dle.getOffset() % bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,88,getChmBlockInfo().setEndOffset(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,91,getChmBlockInfo().setIniBlock(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,94,return getChmBlockInfo();
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,224,public static void setChmBlockInfo(ChmBlockInfo chmBlockInfo) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,225,ChmBlockInfo.chmBlockInfo = chmBlockInfo;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,228,public static ChmBlockInfo getChmBlockInfo() {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,229,return chmBlockInfo;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,19,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,20,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,59,private XHTMLContentHandler handler;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,61,private Metadata metadata;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,64,private boolean inPart = false;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,66,MailContentHandler(XHTMLContentHandler xhtml, Metadata metadata, ParseContext context, boolean strictParsing) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,139,inPart = false;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,155,if (inPart) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,256,inPart = true;
tika-parsers/src/main/java/org/apache/tika/parser/mail/RFC822Parser.java,71,xhtml, metadata, context, config.isStrictParsing());
tika-parsers/src/main/java/org/apache/tika/parser/mail/RFC822Parser.java,67,MimeStreamParser parser = new MimeStreamParser(config);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,90,fRawLength = in.length;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,124,int remainingLength = kBufSize;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,128,if (bytesRead <= 0) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,132,remainingLength -= bytesRead;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,134,fInputStream.reset();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,120,fRawInput = new byte[kBufSize];   // Always make a new buffer because the
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,123,fRawLength = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,131,fRawLength += bytesRead;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,136,MungeInput();                     // Strip html markup, collect byte stats.
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,137,return this;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,58,Locale locale = context.get(Locale.class, Locale.getDefault());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,102,extractor = new XWPFWordExtractorDecorator(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,58,public XSLFPowerPointExtractorDecorator(ParseContext context, XSLFPowerPointExtractor extractor) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,62,public XWPFWordExtractorDecorator(ParseContext context, XWPFWordExtractor extractor) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,132,MediaType type = detectOpenDocument(zip);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,133,if (type == null) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,191,if (zip.getEntry("_rels/.rels") != null
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,192,|| zip.getEntry("[Content_Types].xml") != null) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,200,return null;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,26,import org.apache.commons.compress.archivers.ArchiveInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,27,import org.apache.commons.compress.archivers.ArchiveStreamFactory;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,28,import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,109,ArchiveStreamFactory factory = new ArchiveStreamFactory();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,110,ArchiveInputStream ais = factory.createArchiveInputStream(
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,111,new ByteArrayInputStream(prefix, 0, length));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,112,try {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,114,&& !TarArchiveInputStream.matches(prefix, length)) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,116,return MediaType.OCTET_STREAM;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,118,return PackageParser.getMediaType(ais);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,121,IOUtils.closeQuietly(ais);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,118,MediaType type = getMediaType(ais);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,119,if (!type.equals(MediaType.OCTET_STREAM)) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,120,metadata.set(CONTENT_TYPE, type.toString());
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,135,parseEntry(ais, entry, extractor, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,175,xhtml.element("p", name);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,254,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,257,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,260,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/feed/FeedParser.java,120,StringBuffer buf = new StringBuffer();
tika-core/src/main/java/org/apache/tika/detect/AutoDetectReader.java,95,BufferedInputStream stream, Metadata metadata,
tika-core/src/main/java/org/apache/tika/detect/AutoDetectReader.java,104,this(new BufferedInputStream(stream), metadata,
tika-core/src/main/java/org/apache/tika/detect/AutoDetectReader.java,111,this(new BufferedInputStream(stream), metadata, DEFAULT_LOADER);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,191,mediaType = "application/x-emf";
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,200,mediaType = "application/x-msmetafile";
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,52,private static final MediaType CANONICAL_BMP_TYPE = MediaType.image("x-ms-bmp");
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,53,private static final MediaType JAVA_BMP_TYPE = MediaType.image("bmp");
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,19,import java.io.BufferedInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,20,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,21,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,22,import java.util.Arrays;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,23,import java.util.Collections;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,24,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,25,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,68,InputStream buffered = new BufferedInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,70,Sequence sequence = MidiSystem.getSequence(buffered);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,128,MediaType type = detector.detect(stream, new Metadata());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,108,handleEmbeddedParts(handler);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,132,URI sourceURI = rel.getSourceURI();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,133,String sourceDesc;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,134,if (sourceURI != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,135,sourceDesc = getJustFileName(sourceURI.getPath());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,136,if (sourceDesc.startsWith("slide")) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,142,sourceDesc = "";
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,144,if (rel.getTargetMode() == TargetMode.INTERNAL) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,145,PackagePart target;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,147,try {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,148,target = source.getRelatedPart(rel);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,150,continue;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,153,String type = rel.getRelationshipType();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,155,&& TYPE_OLE_OBJECT.equals(target.getContentType())) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,156,handleEmbeddedOLE(target, handler, sourceDesc + rel.getId());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,160,|| RELATION_OLE_OBJECT.equals(type)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,161,handleEmbeddedFile(target, handler, sourceDesc + rel.getId());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,176,POIFSFileSystem fs = new POIFSFileSystem(part.getInputStream());
tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java,36,import org.apache.tika.sax.XHTMLContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java,56,final XHTMLContentHandler xhtml =
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,38,import org.apache.tika.config.TikaConfig;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,42,import org.apache.tika.parser.AutoDetectParser;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,44,import org.apache.tika.parser.Parser;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,32,import org.apache.tika.extractor.EmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,33,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,47,private final EmbeddedDocumentExtractor extractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,48,private TikaConfig tikaConfig;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,49,private MimeTypes mimeTypes;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,50,private Detector detector;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,53,EmbeddedDocumentExtractor ex = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,56,this.extractor = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,58,this.extractor = ex;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,192,if (extractor.shouldParseEmbedded(metadata)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,201,extractor.parseEmbedded(embedded, xhtml, metadata, true);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/TNEFParser.java,33,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,36,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,71,EmbeddedDocumentExtractor ex = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,74,embeddedExtractor = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,76,embeddedExtractor = ex;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java,36,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java,132,EmbeddedDocumentExtractor extractor = context.get(
tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java,133,EmbeddedDocumentExtractor.class,
tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java,134,new ParsingEmbeddedDocumentExtractor(context));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,36,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,124,EmbeddedDocumentExtractor extractor = context.get(
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,125,EmbeddedDocumentExtractor.class,
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,126,new ParsingEmbeddedDocumentExtractor(context));
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,21,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,31,import java.io.ByteArrayInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,32,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,33,import java.util.Collections;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,34,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,46,EmbeddedDocumentExtractor ex = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,48,if (ex == null) {
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,49,ex = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,52,return new BinaryElementsDataHandler(ex, handler);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,207,handleEmbeddedResource(
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,90,metadata.add(Metadata.CONTENT_TYPE, PE_EXE.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,324,metadata.add(Metadata.CONTENT_TYPE, ELF_OBJECT.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,328,metadata.add(Metadata.CONTENT_TYPE, ELF_EXECUTABLE.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,332,metadata.add(Metadata.CONTENT_TYPE, ELF_SHAREDLIB.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,336,metadata.add(Metadata.CONTENT_TYPE, ELF_COREDUMP.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,340,metadata.add(Metadata.CONTENT_TYPE, ELF_GENERAL.toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,96,extractContent(notesMaster.getShapes(), true, xhtml, null);
tika-parsers/src/main/java/org/apache/tika/parser/txt/TXTParser.java,75,MediaType type = new MediaType(MediaType.TEXT_PLAIN, charset);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java,123,addProperty(metadata, OfficeOpenXMLExtended.TOTAL_TIME, propsHolder.getTotalTime());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java,148,addProperty(metadata, Metadata.TOTAL_TIME, propsHolder.getTotalTime());
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,130,ChmItspHeader chmItspHeader) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmCommons.java,340,public static byte[] copyOfRange(byte[] original, int from, int to) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,830,public byte[] getContent(int startOffset, int endOffset) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,838,public byte[] getContent(int start) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,12,import java.nio.charset.Charset;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,75,setCanonicalDeclaredEncoding(encoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,92,MungeInput();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,190,CharsetRecognizer csr;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,194,ArrayList<CharsetMatch> matches = new ArrayList<CharsetMatch>();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,199,csr = fCSRecognizers.get(i);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,200,detectResults = csr.match(this);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,201,confidence = detectResults & 0x000000ff;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,202,if (confidence > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,204,confidence = Math.min(confidence, MAX_CONFIDENCE);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,207,if ((fDeclaredEncoding != null) && (fDeclaredEncoding.equalsIgnoreCase(csr.getName()))) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,213,matches.add(m);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,248,setCanonicalDeclaredEncoding(declaredEncoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,282,setCanonicalDeclaredEncoding(declaredEncoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,351,private void setCanonicalDeclaredEncoding(String encoding) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,352,Charset cs = Charset.forName(encoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,353,if (cs != null) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,354,fDeclaredEncoding = cs.name();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,90,StringBuffer sb = new StringBuffer();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,173,public int getMatchType() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,175,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,194,return fRecognizer.getName();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,205,return fRecognizer.getLanguage();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,236,public boolean equals(Object o) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,237,if (o instanceof CharsetMatch) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,238,CharsetMatch that = (CharsetMatch) o;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,239,return (this.fConfidence == that.fConfidence);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,242,return false;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,249,public int hashCode() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,250,return fConfidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,285,public String toString() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,121,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,135,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,161,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,23,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,53,if (numInvalid > 5) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,54,break;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,56,trailBytes = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,96,return confidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,26,abstract int match(CharsetDetector det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,40,return 100;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,44,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,70,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,90,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,122,return confidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,8,package org.apache.tika.parser.txt;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,10,import java.nio.ByteBuffer;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,42,abstract int match(CharsetDetector det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,49,private int byteIndex = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,53,private byte[] byteMap;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,58,private byte spaceChar;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,145,this.spaceChar = spaceCh;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,201,protected static byte[] byteMap = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,244,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,253,return "da";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,258,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,264,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,273,return "de";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,278,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,284,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,293,return "en";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,298,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,304,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,313,return "es";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,318,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,324,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,333,return "fr";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,338,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,344,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,353,return "it";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,358,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,364,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,373,return "nl";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,378,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,384,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,393,return "no";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,398,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,404,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,413,return "pt";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,418,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,424,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,433,return "sv";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,438,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,487,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,496,return "cs";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,501,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,507,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,516,return "hu";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,521,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,527,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,536,return "pl";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,541,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,547,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,556,return "ro";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,561,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,624,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,687,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,750,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,818,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,838,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,901,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,961,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,967,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,975,private static byte[] byteMap = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1017,return "ru";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1022,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1082,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1142,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1235,protected static byte[] unshapeMap = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1262,byte bb[] = unshape(det.fInputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1263,det.setText(bb);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1273,private byte[] unshape(byte[] inputBytes) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1274,byte resultByteArr[] = unshapeLamAlef(inputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1279,return resultByteArr;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1282,private byte[] unshapeLamAlef(byte[] inputBytes) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1284,ByteBuffer resultBuffer;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1290,resultBigBuffer.put(unshapedLamAlef);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1291,else
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1294,resultBuffer = ByteBuffer.allocate(resultBigBuffer.position());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1296,return resultBuffer.array();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1299,private boolean isLamAlef(byte b) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1308,protected void matchFinish(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1310,det.setText(prev_fInputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1329,matchInit(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1331,matchFinish(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1332,return result;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1351,matchInit(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1353,matchFinish(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1354,return result;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1413,return match(det, CharsetRecog_8859_1_en.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1425,return match(det, CharsetRecog_8859_1_de.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1433,return "fr";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1437,return match(det, CharsetRecog_8859_1_fr.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1445,return "es";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1449,return match(det, CharsetRecog_8859_1_es.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1457,return "it";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1461,return match(det, CharsetRecog_8859_1_it.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1473,return match(det, CharsetRecog_8859_1_nl.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,250,this.formatListener = new FormatTrackingHSSFListener(this, locale);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,188,metadata.set(Metadata.RESOURCE_NAME_KEY, dir.getName() + '.' + type.getExtension());
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,194,metadata.set(TikaCoreProperties.CREATED, dateField.getDate());
