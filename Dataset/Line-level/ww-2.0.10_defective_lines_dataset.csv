File,Line_number,SRC
core/src/main/java/org/apache/struts2/components/Set.java,94,if (body != null && !body.equals("")) {
core/src/main/java/org/apache/struts2/components/Set.java,95,o = body;
core/src/main/java/org/apache/struts2/components/Set.java,97,o = findValue("top");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,158,new PreResultListener() {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,159,public void beforeResult(ActionInvocation inv, String result) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,160,printContext();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,166,new PreResultListener() {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,167,public void beforeResult(ActionInvocation inv, String actionResult) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,168,String xml = "";
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,169,if (enableXmlWithConsole) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,170,StringWriter writer = new StringWriter();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,171,printContext(new PrettyPrintWriter(writer));
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,172,xml = writer.toString();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,173,xml = xml.replaceAll("&", "&amp;");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,174,xml = xml.replaceAll(">", "&gt;");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,175,xml = xml.replaceAll("<", "&lt;");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,177,ActionContext.getContext().put("debugXML", xml);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,182,result.setLocation("/org/apache/struts2/interceptor/debugging/console.ftl");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,183,result.setParse(false);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,184,try {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,185,result.execute(inv);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,297,ServletActionContext.getResponse().getWriter());
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,154,String type = getParameter(DEBUG_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,155,ctx.getParameters().remove(DEBUG_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,156,if (XML_MODE.equals(type)) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,157,inv.addPreResultListener(
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,164,consoleEnabled = true;
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,165,inv.addPreResultListener(
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,193,ValueStack stack = (ValueStack) ctx.getSession().get(SESSION_KEY);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,194,if (stack == null) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,196,stack = (ValueStack) ctx.get(ActionContext.VALUE_STACK);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,197,ctx.getSession().put(SESSION_KEY, stack);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,199,String cmd = getParameter(EXPRESSION_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,201,ServletActionContext.getRequest().setAttribute("decorator", "none");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,202,HttpServletResponse res = ServletActionContext.getResponse();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,203,res.setContentType("text/plain");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,208,writer.print(stack.findValue(cmd));
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,211,ex.printStackTrace();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,213,cont = false;
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,215,actionOnly = true;
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,216,inv.addPreResultListener(
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,217,new PreResultListener() {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,218,public void beforeResult(ActionInvocation inv, String actionResult) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,219,String rootObjectExpression = getParameter(OBJECT_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,221,rootObjectExpression = "#context";
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,222,String decorate = getParameter(DECORATE_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,223,ValueStack stack = (ValueStack) ctx.get(ActionContext.VALUE_STACK);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,224,Object rootObject = stack.findValue(rootObjectExpression);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,228,ObjectToHTMLWriter htmlWriter = new ObjectToHTMLWriter(writer);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,230,String html = writer.toString();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,231,writer.close();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,233,stack.set("debugHtml", html);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,238,ServletActionContext.getRequest().setAttribute("decorator", "none");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,240,FreemarkerResult result = new FreemarkerResult();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,241,result.setFreemarkerManager(freemarkerManager);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,242,result.setContentType("text/html");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,243,result.setLocation("/org/apache/struts2/interceptor/debugging/browser.ftl");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,244,result.execute(inv);
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,29,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,61,ValueStack stack = invocationContext.invocation.getStack();
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,62,ActionContext.getContext().setValueStack(stack);
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,113,ActionInvocation invocation;
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,35,protected Object action;
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,36,protected ActionInvocation invocation;
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,38,protected Exception exception;
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,48,public BackgroundProcess(String threadName, final ActionInvocation invocation, int threadPriority) {
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,50,this.action = invocation.getAction();
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,79,protected void beforeInvocation() throws Exception {
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,89,protected void afterInvocation() throws Exception {
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,98,return action;
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,385,return new ServletURIResolver(
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,386,ServletActionContext.getServletContext());
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,133,synchronized (session) {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,264,throw new IllegalArgumentException("Null location");
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,334,else
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,420,throws IllegalAccessException, InstantiationException {
core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java,99,Object val = invocation.getInvocationContext().getParameters().get(profilingKey);
core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java,100,if (val != null) {
core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java,101,String sval = (val instanceof String ? (String)val : ((String[])val)[0]);
core/src/main/java/org/apache/struts2/interceptor/ScopeInterceptor.java,300,if (ActionContext.getContext().getParameters().get(sessionReset) != null) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,209,public Collection<String> getErrors() {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,218,protected void addError(String anErrorMessage) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,224,validation.addActionError(error);
core/src/main/java/org/apache/struts2/components/Param.java,121,component.addParameter(findString(name), body);
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,187,paramName = URLDecoder.decode(st.nextToken(), "UTF-8");
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,190,paramValue = URLDecoder.decode(st.nextToken(), "UTF-8");
core/src/main/java/org/apache/struts2/dispatcher/mapper/RestfulActionMapper.java,95,paramName = URLDecoder.decode(st.nextToken(), "UTF-8");
core/src/main/java/org/apache/struts2/dispatcher/mapper/RestfulActionMapper.java,98,paramValue = URLDecoder.decode(st.nextToken(), "UTF-8");
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,219,if ((var != null) && (currentValue != null)) {
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,263,if (action instanceof ValidationAware) {
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,265,Map session = (Map) invocation.getInvocationContext().get(ActionContext.SESSION);
core/src/main/java/org/apache/struts2/components/Component.java,390,stack.setValue(key, entry.getValue());
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,69,super(request);
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,72,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,88,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,108,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,160,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,179,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,198,synchronized (session) {
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,45,Iterator iterator;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,46,ValueStack valueStack;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,47,boolean firstTimeThrough = true;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,105,return new ValueStackDataSource(this.valueStack, expression);
core/src/main/java/org/apache/struts2/interceptor/validation/AnnotationValidationInterceptor.java,53,Method method;
core/src/main/java/org/apache/struts2/interceptor/validation/AnnotationValidationInterceptor.java,63,throw e;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,160,if (!locationArg.startsWith("/")) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,163,String base = ResourceUtil.getResourceBase(req);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,164,locationArg = base + "/" + locationArg;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,167,Template template = configuration.getTemplate(locationArg, deduceLocale());
core/src/main/java/org/apache/struts2/components/UIBean.java,935,addParameter("id", tryId);
core/src/main/java/org/apache/struts2/components/UIBean.java,936,addParameter("escapedId", escape(tryId));
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,113,Class clazz = objectFactory.getClassInstance(getConfig().getClassName());
core/src/main/java/org/apache/struts2/components/UIBean.java,600,addParameter("templateDir", getTemplateDir());
core/src/main/java/org/apache/struts2/components/UIBean.java,601,addParameter("theme", getTheme());
core/src/main/java/org/apache/struts2/util/AttributeMap.java,28,import javax.servlet.jsp.PageContext;
core/src/main/java/org/apache/struts2/util/AttributeMap.java,30,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/impl/StrutsActionProxyFactory.java,25,import java.util.Map;
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,31,public class DefaultPropertiesProvider extends LegacyPropertiesConfigurationProvider {
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,40,throws ConfigurationException {
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,42,Settings defaultSettings = null;
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,44,defaultSettings = new PropertiesSettings("org/apache/struts2/default");
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,49,loadSettings(props, defaultSettings);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,29,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,40,public class DefaultSettings extends Settings {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,50,Settings delegate;
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,69,log.warn("DefaultSettings: Could not find or error in struts.properties", e);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,72,Settings[] settings = new Settings[list.size()];
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,73,delegate = new DelegatingSettings(list.toArray(settings));
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,76,try {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,77,StringTokenizer customProperties = new StringTokenizer(delegate.getImpl(StrutsConstants.STRUTS_CUSTOM_PROPERTIES), ",");
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,85,log.error("DefaultSettings: Could not find " + name + ".properties. Skipping.");
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,89,settings = new Settings[list.size()];
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,90,delegate = new DelegatingSettings(list.toArray(settings));
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,100,public void setImpl(String name, String value) throws IllegalArgumentException, UnsupportedOperationException {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,101,delegate.setImpl(name, value);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,105,public String getImpl(String aName) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,106,return delegate.getImpl(aName);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,110,public boolean isSetImpl(String aName) {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,111,return delegate.isSetImpl(aName);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,115,public Iterator listImpl() {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,116,return delegate.listImpl();
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,38,class DelegatingSettings extends Settings {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,43,Settings[] delegates;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,50,public DelegatingSettings(Settings[] delegates) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,55,public void setImpl(String name, String value) throws IllegalArgumentException, UnsupportedOperationException {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,56,IllegalArgumentException e = null;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,59,try {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,60,delegate.getImpl(name); // Throws exception if not found
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,61,delegate.setImpl(name, value); // Found it
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,62,return; // Done
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,64,e = ex;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,70,throw e;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,74,public String getImpl(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,76,IllegalArgumentException e = null;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,78,for (Settings delegate : delegates) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,79,try {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,80,return delegate.getImpl(name);  // Throws exception if not found
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,82,e = ex;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,88,throw e;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,92,public boolean isSetImpl(String aName) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,93,for (Settings delegate : delegates) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,94,if (delegate.isSetImpl(aName)) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,95,return true;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,99,return false;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,103,public Iterator listImpl() {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,111,Iterator list = delegate.listImpl();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,21,package org.apache.struts2.config;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,36,import com.opensymphony.xwork2.config.Configuration;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,37,import com.opensymphony.xwork2.config.ConfigurationException;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,38,import com.opensymphony.xwork2.config.ConfigurationProvider;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,39,import com.opensymphony.xwork2.inject.ContainerBuilder;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,40,import com.opensymphony.xwork2.inject.Context;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,41,import com.opensymphony.xwork2.inject.Factory;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,43,import com.opensymphony.xwork2.util.location.LocatableProperties;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,45,public class LegacyPropertiesConfigurationProvider implements ConfigurationProvider {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,47,public void destroy() {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,48,Settings.reset();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,52,throws ConfigurationException {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,53,Settings.reset();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,57,throws ConfigurationException {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,60,public boolean needsReload() {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,61,return false;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,65,throws ConfigurationException {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,67,final Settings settings = Settings.getInstance();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,69,loadSettings(props, settings);
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,75,return locale;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,84,protected void loadSettings(LocatableProperties props, final Settings settings) {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,86,for (Iterator i = settings.listImpl(); i.hasNext(); ) {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,87,String name = (String) i.next();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,88,props.setProperty(name, settings.getImpl(name), settings.getLocationImpl(name));
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,42,class PropertiesSettings extends Settings {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,44,LocatableProperties settings;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,91,public void setImpl(String aName, String aValue) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,92,settings.setProperty(aName, aValue);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,100,public String getImpl(String aName) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,101,String setting = settings.getProperty(aName);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,103,if (setting == null) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,104,throw new IllegalArgumentException("No such setting:" + aName);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,107,return setting;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,115,public Location getLocationImpl(String aName) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,116,Location loc = settings.getPropertyLocation(aName);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,118,if (loc == null) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,119,if (!settings.containsKey(aName)) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,120,throw new IllegalArgumentException("No such setting:" + aName);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,124,return loc;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,132,public boolean isSetImpl(String aName) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,133,if (settings.get(aName) != null) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,134,return true;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,136,return false;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,145,public Iterator listImpl() {
core/src/main/java/org/apache/struts2/config/Settings.java,60,class Settings {
core/src/main/java/org/apache/struts2/config/Settings.java,67,static Settings settingsImpl;
core/src/main/java/org/apache/struts2/config/Settings.java,73,static Settings defaultImpl;
core/src/main/java/org/apache/struts2/config/Settings.java,80,static Locale locale;
core/src/main/java/org/apache/struts2/config/Settings.java,96,public static void setInstance(Settings config) throws IllegalStateException {
core/src/main/java/org/apache/struts2/config/Settings.java,97,settingsImpl = config;
core/src/main/java/org/apache/struts2/config/Settings.java,98,locale = null;
core/src/main/java/org/apache/struts2/config/Settings.java,108,public static Settings getInstance() {
core/src/main/java/org/apache/struts2/config/Settings.java,109,return (settingsImpl == null) ? getDefaultInstance() : settingsImpl;
core/src/main/java/org/apache/struts2/config/Settings.java,125,public static Locale getLocale() {
core/src/main/java/org/apache/struts2/config/Settings.java,148,return locale;
core/src/main/java/org/apache/struts2/config/Settings.java,160,public static boolean isSet(String name) {
core/src/main/java/org/apache/struts2/config/Settings.java,161,return getInstance().isSetImpl(name);
core/src/main/java/org/apache/struts2/config/Settings.java,174,public static String get(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/Settings.java,175,return getInstance().getImpl(name);
core/src/main/java/org/apache/struts2/config/Settings.java,190,public static Location getLocation(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/Settings.java,191,return getInstance().getLocationImpl(name);
core/src/main/java/org/apache/struts2/config/Settings.java,199,public static Iterator list() {
core/src/main/java/org/apache/struts2/config/Settings.java,200,return getInstance().listImpl();
core/src/main/java/org/apache/struts2/config/Settings.java,210,public boolean isSetImpl(String name) {
core/src/main/java/org/apache/struts2/config/Settings.java,213,return false;
core/src/main/java/org/apache/struts2/config/Settings.java,227,public static void set(String name, String value) throws IllegalArgumentException, UnsupportedOperationException {
core/src/main/java/org/apache/struts2/config/Settings.java,228,getInstance().setImpl(name, value);
core/src/main/java/org/apache/struts2/config/Settings.java,240,public void setImpl(String name, String value) throws IllegalArgumentException, UnsupportedOperationException {
core/src/main/java/org/apache/struts2/config/Settings.java,241,throw new UnsupportedOperationException("Settings: This implementation does not support setting a value.");
core/src/main/java/org/apache/struts2/config/Settings.java,252,public String getImpl(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/Settings.java,253,return null;
core/src/main/java/org/apache/struts2/config/Settings.java,264,public Location getLocationImpl(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/Settings.java,265,return null;
core/src/main/java/org/apache/struts2/config/Settings.java,274,public Iterator listImpl() {
core/src/main/java/org/apache/struts2/config/Settings.java,275,throw new UnsupportedOperationException("Settings: This implementation does not support listing the registered settings");
core/src/main/java/org/apache/struts2/config/Settings.java,286,private static Settings getDefaultInstance() {
core/src/main/java/org/apache/struts2/config/Settings.java,287,if (defaultImpl == null) {
core/src/main/java/org/apache/struts2/config/Settings.java,296,try {
core/src/main/java/org/apache/struts2/config/Settings.java,308,return defaultImpl;
core/src/main/java/org/apache/struts2/config/Settings.java,314,public static void reset() {
core/src/main/java/org/apache/struts2/config/Settings.java,316,settingsImpl = null;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/StrutsConfigRetriever.java,34,import org.apache.struts2.config.LegacyPropertiesConfigurationProvider;
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,165,if ("true".equalsIgnoreCase(props.getProperty(StrutsConstants.STRUTS_DEVMODE))) {
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,166,props.setProperty(StrutsConstants.STRUTS_I18N_RELOAD, "true");
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,167,props.setProperty(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, "true");
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,168,props.setProperty(StrutsConstants.STRUTS_FREEMARKER_TEMPLATES_CACHE, "false");
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,80,private List<String> allowedRoles = new ArrayList<String>();
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,81,private List<String> disallowedRoles = new ArrayList<String>();
core/src/main/java/org/apache/struts2/components/Param.java,23,import java.io.Writer;
core/src/main/java/org/apache/struts2/components/Param.java,28,import org.apache.struts2.StrutsException;
core/src/main/java/org/apache/struts2/components/Param.java,30,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,141,private static final long serialVersionUID = 4491997514314242420L;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,38,import org.apache.struts2.dispatcher.ServletRedirectResult;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,172,protected static final String REDIRECT_PREFIX = "redirect:";
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,210,mapping.setName(name);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,214,put(REDIRECT_PREFIX, new ParameterAction() {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,215,public void execute(String key, ActionMapping mapping) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,216,ServletRedirectResult redirect = new ServletRedirectResult();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,217,container.inject(redirect);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,218,redirect.setLocation(key.substring(REDIRECT_PREFIX
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,219,.length()));
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,220,mapping.setResult(redirect);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,224,put(REDIRECT_ACTION_PREFIX, new ParameterAction() {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,225,public void execute(String key, ActionMapping mapping) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,226,String location = key.substring(REDIRECT_ACTION_PREFIX
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,227,.length());
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,228,ServletRedirectResult redirect = new ServletRedirectResult();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,229,container.inject(redirect);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,230,String extension = getDefaultExtension();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,231,if (extension != null && extension.length() > 0) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,232,location += "." + extension;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,234,redirect.setLocation(location);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,235,mapping.setResult(redirect);
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,28,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,29,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,31,import com.opensymphony.xwork2.ActionInvocation;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,32,import com.opensymphony.xwork2.interceptor.AbstractInterceptor;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,34,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,94,String result = null;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,111,return Collections.EMPTY_LIST;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,20,import com.opensymphony.xwork2.*;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,23,import com.opensymphony.xwork2.config.entities.ResultConfig;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,26,import org.apache.struts.Globals;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,27,import org.apache.struts.action.*;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,28,import org.apache.struts.config.*;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,30,import java.util.Iterator;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,32,import java.util.Map;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,34,import javax.servlet.ServletContext;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,120,ActionMessage error = null;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,121,String field = null;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,122,String msg = null;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,123,Object[] values = null;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,125,field = (String) i.next();
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,127,error = (ActionMessage) it.next();
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,128,msg = error.getKey();
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,130,values = error.getValues();
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,137,if (vaction != null) {
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,138,if (field == errors.GLOBAL_MESSAGE) {
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,139,vaction.addActionError(msg);
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,141,vaction.addFieldError(field, msg);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,411,mapping.setName(name);
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,26,import java.util.Iterator;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,27,import java.util.Locale;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,73,builder.factory(Locale.class, new Factory() {
core/src/main/java/org/apache/struts2/config/Settings.java,23,import java.util.Iterator;
core/src/main/java/org/apache/struts2/config/Settings.java,24,import java.util.Locale;
core/src/main/java/org/apache/struts2/config/Settings.java,25,import java.util.StringTokenizer;
core/src/main/java/org/apache/struts2/config/Settings.java,29,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/config/Settings.java,289,defaultImpl = new DefaultSettings();
core/src/main/java/org/apache/struts2/config/Settings.java,292,try {
core/src/main/java/org/apache/struts2/config/Settings.java,293,String className = get(StrutsConstants.STRUTS_CONFIGURATION);
core/src/main/java/org/apache/struts2/config/Settings.java,295,if (!className.equals(defaultImpl.getClass().getName())) {
core/src/main/java/org/apache/struts2/config/Settings.java,298,defaultImpl = (Settings) ObjectFactory.getObjectFactory().buildBean(Thread.currentThread().getContextClassLoader().loadClass(className), null);
core/src/main/java/org/apache/struts2/config/Settings.java,300,LOG.error("Settings: Could not instantiate the struts.configuration object, substituting the default implementation.", e);
core/src/main/java/org/apache/struts2/config/Settings.java,315,defaultImpl = null;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,128,Map context = stack.getContext();
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,23,import java.io.Serializable;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,24,import java.util.HashMap;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,25,import java.util.Map;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,64,return invocationContext.invocation;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,75,InvocationContext invocationContext = new InvocationContext(invocation, token);
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,45,protected String requiredposition;
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,158,public void setRequiredposition(String requiredPosition) {
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,159,this.requiredposition = requiredPosition;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,94,protected Container container;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,96,protected List<ActionMapper> actionMappers = new ArrayList<ActionMapper>();
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,100,this.container = container;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,104,public void setActionMappers(String list) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,332,public void handleSpecialParameters(HttpServletRequest request,
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,367,protected void parseNameAndNamespace(String uri, ActionMapping mapping,
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,403,if (!allowSlashesInActionNames && name != null) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,292,public ActionMapping getMapping(HttpServletRequest request,
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,307,return null;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,23,import java.util.ArrayList;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,27,import java.util.List;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,29,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,33,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,99,public void setContainer(Container container) {
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,23,import java.util.Map;
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,25,import javax.faces.application.NavigationHandler;
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,26,import javax.faces.context.FacesContext;
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,47,protected String required;
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,166,public void setRequired(String required) {
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,167,this.required = required;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,103,if (MakeIterator.isIterable(value)) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,833,return config.getContainer();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,489,String params = "";
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,491,params = name.substring(name.indexOf('?'));
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,496,if (null != mapping.getMethod() && !"".equals(mapping.getMethod())) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,497,uri.append("!").append(mapping.getMethod());
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,501,if (extension != null) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,503,if (extension.length() == 0 || (extension.length() > 0 && uri.indexOf('.' + extension) == -1)) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,504,if (extension.length() > 0) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,505,uri.append(".").append(extension);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,513,return uri.toString();
core/src/main/java/org/apache/struts2/components/UIBean.java,436,protected String requiredposition;
core/src/main/java/org/apache/struts2/components/UIBean.java,438,protected String required;
core/src/main/java/org/apache/struts2/components/UIBean.java,634,if (requiredposition != null) {
core/src/main/java/org/apache/struts2/components/UIBean.java,635,addParameter("requiredposition", findString(requiredposition));
core/src/main/java/org/apache/struts2/components/UIBean.java,638,if (required != null) {
core/src/main/java/org/apache/struts2/components/UIBean.java,639,addParameter("required", findValue(required, Boolean.class));
core/src/main/java/org/apache/struts2/components/UIBean.java,1009,public void setRequiredposition(String requiredposition) {
core/src/main/java/org/apache/struts2/components/UIBean.java,1010,this.requiredposition = requiredposition;
core/src/main/java/org/apache/struts2/components/UIBean.java,1019,public void setRequired(String required) {
core/src/main/java/org/apache/struts2/components/UIBean.java,1020,this.required = required;
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,95,uiBean.setRequiredposition(requiredposition);
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,97,uiBean.setRequired(required);
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,23,import java.io.Writer;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,24,import java.util.Iterator;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,28,import org.apache.struts2.util.MakeIterator;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,31,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/dispatcher/ActionContextCleanUp.java,23,import java.io.IOException;
core/src/main/java/org/apache/struts2/dispatcher/ActionContextCleanUp.java,37,import com.opensymphony.xwork2.ActionContext;
core/src/main/java/org/apache/struts2/dispatcher/ActionContextCleanUp.java,39,import com.opensymphony.xwork2.util.profiling.UtilTimerStack;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,713,response.setContentType("text/html");
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,733,template.process(data, response.getWriter());
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,737,response.sendError(code, "Unable to show problem report: " + exp);
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,23,import java.util.Map;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,25,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,26,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,28,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,29,import org.apache.struts2.util.InvocationSessionStore;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,30,import org.apache.struts2.util.TokenHelper;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,137,synchronized (context) {
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,138,result.execute(savedInvocation);
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,160,return (url.indexOf(':') == -1);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,710,public void sendError(HttpServletRequest request, HttpServletResponse response,
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,711,ServletContext ctx, int code, Exception e) {
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,27,import org.apache.struts2.ServletActionContext;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,29,import org.apache.struts2.views.freemarker.FreemarkerResult;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,30,import org.apache.tiles.context.TilesRequestContext;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,31,import org.apache.tiles.context.TilesRequestContextWrapper;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,75,public StrutsTilesRequestContext(TilesRequestContext context,
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,76,String mask) {
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,82,if (include.endsWith(mask)) {
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,23,import java.util.LinkedHashMap;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,24,import java.util.Map;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,26,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,27,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,31,import org.apache.struts2.views.annotations.StrutsTag;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,32,import org.apache.struts2.views.annotations.StrutsTagAttribute;
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,258,public List getErrors() {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequest.java,119,public List getErrors();
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,58,Collection<String> errors;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,59,MultiPartRequest multi;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,68,public MultiPartRequestWrapper(MultiPartRequest multiPartRequest, HttpServletRequest request, String saveDir) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,74,for (Object o : multi.getErrors()) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,75,String error = (String) o;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,79,addError("Cannot parse request: "+e.toString());
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,201,return !((errors == null) || errors.isEmpty());
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,219,if (errors == null) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,220,errors = new ArrayList<String>();
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,223,errors.add(anErrorMessage);
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,102,public Enumeration getParameterNames() {
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,113,List values = new ArrayList();
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,116,values.add(enumeration.nextElement());
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,119,return (String[]) values.toArray(new String[values.size()]);
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,122,public List getErrors() {
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,123,return Collections.EMPTY_LIST;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,46,import com.opensymphony.xwork2.util.LocalizedTextUtil;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,167,private static final String DEFAULT_MESSAGE = "no.message.found";
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,364,private String getTextMessage(String messageKey, Object[] args, Locale locale) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,365,if (args == null || args.length == 0) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,368,return LocalizedTextUtil.findText(this.getClass(), messageKey, locale, DEFAULT_MESSAGE, args);
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,31,import com.opensymphony.xwork2.util.LocalizedTextUtil;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,151,String errorMessage = LocalizedTextUtil.findText(this.getClass(), "struts.messages.invalid.token",
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,152,invocation.getInvocationContext().getLocale(),
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,170,props.setProperty("devMode", "true");
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,172,props.setProperty("devMode", "false");
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequest.java,28,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,32,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,36,import org.apache.struts2.dispatcher.StrutsRequestWrapper;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,117,Charset charset = null;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,118,if (charSet != null) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,119,if (Charset.isSupported(charSet)) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,120,charset = Charset.forName(charSet);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,122,else {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,124,charset = null;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,129,ServletContext servletContext = (ServletContext) invocation.getInvocationContext().get(SERVLET_CONTEXT);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,132,if (charset != null) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,133,response.setContentType("text/plain; charset="+charSet);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,135,else {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,136,response.setContentType("text/plain");
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,138,response.setHeader("Content-Disposition", "inline");
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,154,char[] buffer = new char[BUFFER_SIZE];
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,156,while((charRead = reader.read(buffer)) != -1) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,157,writer.write(buffer, 0, charRead);
core/src/main/java/org/apache/struts2/interceptor/CreateSessionInterceptor.java,25,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/interceptor/CreateSessionInterceptor.java,91,ServletActionContext.getRequest().getSession(true);
core/src/main/java/org/apache/struts2/components/Bean.java,23,import java.io.Writer;
core/src/main/java/org/apache/struts2/components/Bean.java,27,import org.apache.struts2.views.annotations.StrutsTag;
core/src/main/java/org/apache/struts2/components/Bean.java,28,import org.apache.struts2.views.annotations.StrutsTagAttribute;
core/src/main/java/org/apache/struts2/components/Bean.java,31,import com.opensymphony.xwork2.util.ClassLoaderUtil;
core/src/main/java/org/apache/struts2/components/Bean.java,120,String beanName = findString(name, "name", "Bean name is required. Example: com.acme.FooBean");
core/src/main/java/org/apache/struts2/components/Bean.java,121,bean = objectFactory.buildBean(ClassLoaderUtil.loadClass(beanName, getClass()), stack.getContext());
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,27,import java.util.Iterator;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,33,import org.apache.struts2.dispatcher.Dispatcher;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,34,import org.apache.struts2.util.ClassLoaderUtils;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,36,import com.opensymphony.xwork2.config.Configuration;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,37,import com.opensymphony.xwork2.config.entities.ActionConfig;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,38,import com.opensymphony.xwork2.inject.Inject;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,39,import com.opensymphony.xwork2.util.ClassLoaderUtil;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,40,import com.opensymphony.xwork2.util.ResolverUtil;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,54,public Set getNamespaces() {
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,55,Set namespaces = Collections.EMPTY_SET;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,56,Map allActionConfigs = configuration.getRuntimeConfiguration().getActionConfigs();
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,63,public Set getActionNames(String namespace) {
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,64,Set actionNames = Collections.EMPTY_SET;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,65,Map allActionConfigs = configuration.getRuntimeConfiguration().getActionConfigs();
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,67,Map actionMappings = (Map) allActionConfigs.get(namespace);
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,77,Map allActionConfigs = configuration.getRuntimeConfiguration().getActionConfigs();
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,79,Map actionMappings = (Map) allActionConfigs.get(namespace);
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,81,config = (ActionConfig) actionMappings.get(actionName);
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,23,import java.beans.PropertyDescriptor;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,24,import java.util.Set;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,25,import java.util.TreeSet;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,49,private Set actionNames;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,110,actionNames =
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,111,new TreeSet(configHelper.getActionNames(namespace));
apps/showcase/src/main/java/org/apache/struts2/showcase/UITagExample.java,31,import org.apache.struts2.ServletActionContext;
apps/showcase/src/main/java/org/apache/struts2/showcase/UITagExample.java,33,import com.opensymphony.xwork2.ActionSupport;
apps/showcase/src/main/java/org/apache/struts2/showcase/UITagExample.java,34,import com.opensymphony.xwork2.Validateable;
apps/showcase/src/main/java/org/apache/struts2/showcase/UITagExample.java,35,import com.opensymphony.xwork2.util.ValueStack;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,23,import java.io.ByteArrayOutputStream;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,24,import java.io.FileWriter;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,25,import java.io.IOException;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,26,import java.io.InputStream;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,27,import java.io.Writer;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,121,StrutsConfigRetriever.setConfiguration(configDir, views.split("[, ]+"));
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,23,import java.io.File;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,24,import java.io.IOException;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,25,import java.io.InputStream;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,34,import javax.servlet.GenericServlet;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,35,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,36,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,37,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,38,import javax.servlet.http.HttpSession;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,42,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,43,import org.apache.struts2.views.JspSupportServlet;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,44,import org.apache.struts2.views.TagLibrary;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,46,import org.apache.struts2.views.util.ContextUtil;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,54,import freemarker.cache.FileTemplateLoader;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,55,import freemarker.cache.MultiTemplateLoader;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,56,import freemarker.cache.TemplateLoader;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,57,import freemarker.cache.WebappTemplateLoader;
core/src/main/java/org/apache/struts2/interceptor/StrutsConversionErrorInterceptor.java,82,return "'" + stack.findValue("top", String.class) + "'";
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,109,response.getWriter().print("/* {} */");
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,125,sb.append("/* { ");
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,154,sb.append("} */");
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,23,import java.io.InputStreamReader;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,24,import java.io.PrintWriter;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,25,import java.nio.charset.Charset;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,27,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,28,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,145,reader = new InputStreamReader(servletContext.getResourceAsStream(finalLocation), charset);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,147,else {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,148,reader = new InputStreamReader(servletContext.getResourceAsStream(finalLocation));
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,150,if (reader == null) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,153,else {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,155,int charRead = 0;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,161,finally {
apps/showcase/src/main/java/org/apache/struts2/showcase/person/EditPersonAction.java,27,import org.apache.struts2.config.Result;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/EditPersonAction.java,28,import org.apache.struts2.config.Results;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/EditPersonAction.java,29,import org.apache.struts2.dispatcher.ServletRedirectResult;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/ListPeopleAction.java,26,import org.apache.struts2.config.Result;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/ListPeopleAction.java,27,import org.apache.struts2.views.freemarker.FreemarkerResult;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/NewPersonAction.java,23,import org.apache.struts2.config.ParentPackage;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/NewPersonAction.java,24,import org.apache.struts2.config.Result;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/NewPersonAction.java,25,import org.apache.struts2.config.Results;
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,153,public void execute(ActionInvocation invocation) throws Exception {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,155,if (namespace == null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,160,if (method == null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,163,else {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,195,public void setActionName(String actionName) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,204,public void setNamespace(String namespace) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,213,public void setMethod(String method) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,99,public void setActionMapper(ActionMapper mapper) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,109,public void setPrependServletContext(boolean prependServletContext) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,120,protected void doExecute(String finalLocation, ActionInvocation invocation) throws Exception {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,125,if (isPathUrl(finalLocation)) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,126,if (!finalLocation.startsWith("/")) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,127,ActionMapping mapping = actionMapper.getMapping(
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,128,request, Dispatcher.getInstance().getConfigurationManager());
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,130,if (mapping != null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,134,if ((namespace != null) && (namespace.length() > 0) && (!"/".equals(namespace))) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,142,if (prependServletContext && (request.getContextPath() != null) && (request.getContextPath().length() > 0)) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,156,private static boolean isPathUrl(String url) {
core/src/main/java/org/apache/struts2/components/Include.java,103,private static String encoding;
core/src/main/java/org/apache/struts2/components/Include.java,104,private static boolean encodingDefined = true;
core/src/main/java/org/apache/struts2/components/Include.java,163,include(result, writer, req, res);
core/src/main/java/org/apache/struts2/components/Include.java,240,public static void include(String aResult, Writer writer, ServletRequest request, HttpServletResponse response) throws ServletException, IOException {
core/src/main/java/org/apache/struts2/components/Include.java,241,String resourcePath = getContextRelativePath(request, aResult);
core/src/main/java/org/apache/struts2/components/Include.java,251,rd.include((HttpServletRequest) request, pageResponse);
core/src/main/java/org/apache/struts2/components/Include.java,254,String encoding = getEncoding();
core/src/main/java/org/apache/struts2/components/Include.java,261,pageResponse.getContent().writeTo(writer, null);
core/src/main/java/org/apache/struts2/components/Include.java,281,private static String getEncoding() {
core/src/main/java/org/apache/struts2/components/Include.java,282,if (encodingDefined) {
core/src/main/java/org/apache/struts2/components/Include.java,283,try {
core/src/main/java/org/apache/struts2/components/Include.java,284,encoding = defaultEncoding;
core/src/main/java/org/apache/struts2/components/Include.java,286,encoding = System.getProperty("file.encoding");
core/src/main/java/org/apache/struts2/components/Include.java,287,encodingDefined = false;
core/src/main/java/org/apache/struts2/components/Include.java,291,return encoding;
core/src/main/java/org/apache/struts2/components/template/JspTemplateEngine.java,56,pageContext.getRequest(), (HttpServletResponse) pageContext.getResponse());
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,23,import java.io.CharArrayWriter;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,24,import java.io.IOException;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,25,import java.io.Writer;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,26,import java.util.Locale;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,28,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,29,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,30,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,32,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,33,import org.apache.struts2.dispatcher.StrutsResultSupport;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,34,import org.apache.struts2.views.util.ResourceUtil;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,23,import java.util.Map;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,25,import org.apache.struts2.util.TokenHelper;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,27,import com.opensymphony.xwork2.ActionContext;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,138,return handleValidToken(invocation);
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,24,import java.io.OutputStreamWriter;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,25,import java.io.Writer;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,27,import javax.portlet.ActionResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,30,import javax.servlet.Servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,31,import javax.servlet.ServletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,32,import javax.servlet.http.HttpServletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,33,import javax.servlet.http.HttpServletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,34,import javax.servlet.jsp.JspFactory;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,35,import javax.servlet.jsp.PageContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,50,import com.opensymphony.xwork2.ActionContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,51,import com.opensymphony.xwork2.ActionInvocation;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,52,import com.opensymphony.xwork2.inject.Inject;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,53,import com.opensymphony.xwork2.util.ValueStack;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,166,JspFactory jspFactory = null;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,178,jspFactory = JspFactory.getDefaultFactory();
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,23,import java.io.OutputStreamWriter;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,24,import java.io.Writer;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,26,import javax.servlet.Servlet;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,27,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,28,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,29,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,30,import javax.servlet.jsp.JspFactory;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,31,import javax.servlet.jsp.PageContext;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,43,import com.opensymphony.xwork2.ActionContext;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,44,import com.opensymphony.xwork2.ActionInvocation;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,45,import com.opensymphony.xwork2.inject.Inject;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,46,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,126,JspFactory jspFactory = null;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,136,jspFactory = JspFactory.getDefaultFactory();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,268,String result = invocation.invoke();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,271,fileParameterNames = multiWrapper.getFileParameterNames();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,272,while (fileParameterNames != null && fileParameterNames.hasMoreElements()) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,273,String inputValue = (String) fileParameterNames.nextElement();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,279,if ((currentFile != null) && currentFile.isFile()) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,285,return result;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ActionNamesAction.java,23,import java.util.Set;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ActionNamesAction.java,24,import java.util.TreeSet;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ActionNamesAction.java,26,import org.apache.struts2.StrutsConstants;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ActionNamesAction.java,29,import com.opensymphony.xwork2.ObjectFactory;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ActionNamesAction.java,30,import com.opensymphony.xwork2.config.Configuration;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ActionNamesAction.java,81,extension = "action";
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java,23,import java.util.Collections;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java,24,import java.util.List;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java,26,import org.apache.struts2.util.ClassLoaderUtils;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ListValidatorsAction.java,42,List validators = Collections.EMPTY_LIST;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,23,import java.text.CharacterIterator;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,24,import java.text.StringCharacterIterator;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,25,import java.util.Collection;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,26,import java.util.List;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,27,import java.util.Map;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,29,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,30,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,34,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,92,String jsonEnabled = request.getParameter(VALIDATE_JSON_PARAM);
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,94,if (jsonEnabled != null && "true".equals(jsonEnabled)) {
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,100,response.setStatus(validationFailedStatus);
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,101,response.getWriter().print(buildResponse(validationAware));
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,102,return Action.NONE;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,106,String validateOnly = request.getParameter(VALIDATE_ONLY_PARAM);
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,107,if (validateOnly != null && "true".equals(validateOnly)) {
core/src/main/java/org/apache/struts2/components/Reset.java,23,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/components/Reset.java,24,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/components/Reset.java,29,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/components/Reset.java,67,protected String action;
core/src/main/java/org/apache/struts2/components/Reset.java,68,protected String method;
core/src/main/java/org/apache/struts2/components/Reset.java,69,protected String align;
core/src/main/java/org/apache/struts2/components/Reset.java,70,protected String type;
core/src/main/java/org/apache/struts2/components/Reset.java,80,public void evaluateParams() {
core/src/main/java/org/apache/struts2/views/jsp/ui/ResetTag.java,23,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/views/jsp/ui/ResetTag.java,24,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/views/jsp/ui/ResetTag.java,29,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,258,builder.append(name);
core/src/main/java/org/apache/struts2/views/jsp/ActionTag.java,23,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/views/jsp/ActionTag.java,24,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/views/jsp/ActionTag.java,29,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,34,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,41,import com.opensymphony.xwork2.config.Configuration;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,42,import com.opensymphony.xwork2.config.ConfigurationManager;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,43,import com.opensymphony.xwork2.config.entities.PackageConfig;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,44,import com.opensymphony.xwork2.inject.Inject;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,45,import com.opensymphony.xwork2.inject.Container;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,184,protected List<String> extensions = new ArrayList<String>() {{ add("action"); add("");}};
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,293,ConfigurationManager configManager) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,333,ActionMapping mapping) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,368,ConfigurationManager configManager) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,507,if (params.length() > 0) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,508,uri.append(params);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,517,public boolean isSlashesInActionNames() {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,518,return allowSlashesInActionNames;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,186,TaglibFactory taglibs = new TaglibFactory(servletContext);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,187,servletContext.setAttribute(ATTR_JSP_TAGLIBS_MODEL, taglibs);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,193,model.put(KEY_JSP_TAGLIBS, (TemplateModel) servletContext.getAttribute(ATTR_JSP_TAGLIBS_MODEL));
core/src/main/java/org/apache/struts2/dispatcher/ServletDispatcherResult.java,135,if (!response.isCommitted() && (request.getAttribute("javax.servlet.include.servlet_path") == null)) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,27,import java.util.Collections;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,28,import java.util.HashMap;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,30,import java.util.Map;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,31,import java.util.Properties;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,32,import java.util.Set;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,64,import freemarker.template.ObjectWrapper;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,65,import freemarker.template.SimpleHash;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,66,import freemarker.template.TemplateException;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,67,import freemarker.template.TemplateExceptionHandler;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,68,import freemarker.template.TemplateModel;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,119,public static final String KEY_APPLICATION = "Application";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,120,public static final String KEY_REQUEST_MODEL = "Request";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,121,public static final String KEY_SESSION_MODEL = "Session";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,122,public static final String KEY_JSP_TAGLIBS = "JspTaglibs";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,123,public static final String KEY_REQUEST_PARAMETER_MODEL = "Parameters";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,156,freemarker.template.Configuration config = (freemarker.template.Configuration) servletContext.getAttribute(CONFIG_SERVLET_CONTEXT_KEY);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,159,config = createConfiguration(servletContext);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,165,config.setWhitespaceStripping(true);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,199,model.put(KEY_SESSION_MODEL, new HttpSessionHashModel(session, wrapper));
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,213,model.put(KEY_REQUEST_MODEL, requestModel);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,222,model.put(KEY_REQUEST_PARAMETER_MODEL, reqParametersModel);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,227,protected void populateContext(ScopesHashModel model, ValueStack stack, Object action, HttpServletRequest request, HttpServletResponse response) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,229,Map standard = ContextUtil.getStandardContext(stack, request, response);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,230,model.putAll(standard);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,233,Throwable exception = (Throwable) request.getAttribute("javax.servlet.error.exception");
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,235,if (exception == null) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,236,exception = (Throwable) request.getAttribute("javax.servlet.error.JspException");
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,239,if (exception != null) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,240,model.put(KEY_EXCEPTION, exception);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,244,protected BeansWrapper getObjectWrapper() {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,260,protected TemplateLoader getTemplateLoader(ServletContext servletContext) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,262,FileTemplateLoader templatePathLoader = null;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,264,String templatePath = servletContext.getInitParameter("TemplatePath");
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,265,if (templatePath == null) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,266,templatePath = servletContext.getInitParameter("templatePath");
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,269,if (templatePath != null) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,270,try {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,271,templatePathLoader = new FileTemplateLoader(new File(templatePath));
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,273,LOG.error("Invalid template path specified: " + e.getMessage(), e);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,279,return templatePathLoader != null ?
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,280,new MultiTemplateLoader(new TemplateLoader[]{
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,281,templatePathLoader,
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,282,new WebappTemplateLoader(servletContext),
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,285,: new MultiTemplateLoader(new TemplateLoader[]{
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,286,new WebappTemplateLoader(servletContext),
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,304,protected freemarker.template.Configuration createConfiguration(ServletContext servletContext) throws TemplateException {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,305,freemarker.template.Configuration configuration = new freemarker.template.Configuration();
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,307,configuration.setTemplateLoader(getTemplateLoader(servletContext));
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,309,configuration.setTemplateExceptionHandler(TemplateExceptionHandler.HTML_DEBUG_HANDLER);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,311,configuration.setObjectWrapper(getObjectWrapper());
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,313,if (encoding != null) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,314,configuration.setDefaultEncoding(encoding);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,317,loadSettings(servletContext, configuration);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,319,return configuration;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,327,protected void loadSettings(ServletContext servletContext, freemarker.template.Configuration configuration) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,336,configuration.setSettings(p);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,353,public SimpleHash buildTemplateModel(ValueStack stack, Object action, ServletContext servletContext, HttpServletRequest request, HttpServletResponse response, ObjectWrapper wrapper) {
core/src/main/java/org/apache/struts2/views/freemarker/ScopesHashModel.java,42,public class ScopesHashModel extends SimpleHash {
core/src/main/java/org/apache/struts2/views/freemarker/StrutsBeanWrapper.java,34,import freemarker.template.TemplateBooleanModel;
core/src/main/java/org/apache/struts2/views/freemarker/StrutsBeanWrapper.java,38,import freemarker.template.TemplateModelException;
core/src/main/java/org/apache/struts2/views/freemarker/StrutsBeanWrapper.java,58,StrutsBeanWrapper(boolean altMapWrapper) {
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,103,public VelocityManager() {
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,125,if (instance == null) {
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,126,String classname = VelocityManager.class.getName();
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,128,if (Settings.isSet(StrutsConstants.STRUTS_VELOCITY_MANAGER_CLASSNAME)) {
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,129,classname = Settings.get(StrutsConstants.STRUTS_VELOCITY_MANAGER_CLASSNAME).trim();
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,132,if (!classname.equals(VelocityManager.class.getName())) {
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,133,try {
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,134,log.info("Instantiating VelocityManager!, " + classname);
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,136,instance = (VelocityManager) ObjectFactory.getObjectFactory().buildBean(classname, null);
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,138,log.fatal("Fatal exception occurred while trying to instantiate a VelocityManager instance, " + classname, e);
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,139,instance = new VelocityManager();
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,142,instance = new VelocityManager();
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,146,return instance;
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,195,return chained;
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,197,return context;
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,421,if (toolBoxLocation != null) {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,23,import java.io.IOException;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,24,import java.util.Locale;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,26,import javax.servlet.ServletContext;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,27,import javax.servlet.ServletException;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,28,import javax.servlet.http.HttpServletRequest;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,29,import javax.servlet.http.HttpServletResponse;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,35,import com.opensymphony.module.sitemesh.Decorator;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,36,import com.opensymphony.module.sitemesh.HTMLPage;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,37,import com.opensymphony.module.sitemesh.Page;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,38,import com.opensymphony.xwork2.ActionContext;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,39,import com.opensymphony.xwork2.ActionInvocation;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,40,import com.opensymphony.xwork2.LocaleProvider;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,41,import com.opensymphony.xwork2.inject.Inject;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,42,import com.opensymphony.xwork2.util.profiling.UtilTimerStack;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,44,import freemarker.template.Configuration;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,45,import freemarker.template.SimpleHash;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,46,import freemarker.template.Template;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,108,public class FreeMarkerPageFilter extends TemplatePageFilter {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,111,private static FreemarkerManager freemarkerManager;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,115,freemarkerManager = mgr;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,128,protected void applyDecorator(Page page, Decorator decorator,
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,129,HttpServletRequest req, HttpServletResponse res,
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,131,throws ServletException, IOException {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,133,String timerKey = "FreemarkerPageFilter_applyDecorator: ";
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,134,if (freemarkerManager == null) {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,135,throw new ServletException("Missing freemarker dependency");
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,138,try {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,139,UtilTimerStack.push(timerKey);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,142,Configuration config = freemarkerManager.getConfiguration(servletContext);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,143,Template template = config.getTemplate(decorator.getPage(), getLocale(ctx.getActionInvocation(), config)); // WW-1181
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,146,SimpleHash model = freemarkerManager.buildTemplateModel(ctx.getValueStack(), null, servletContext, req, res, config.getObjectWrapper());
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,149,model.put("page", page);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,150,if (page instanceof HTMLPage) {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,151,HTMLPage htmlPage = ((HTMLPage) page);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,152,model.put("head", htmlPage.getHead());
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,154,model.put("title",page.getTitle());
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,155,model.put("body",page.getBody());
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,156,model.put("page.properties", new SimpleHash(page.getProperties()));
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,159,template.process(model, res.getWriter());
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,161,String msg = "Error applying decorator: " + e.getMessage();
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,162,LOG.error(msg, e);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,163,throw new ServletException(msg, e);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,165,finally {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,166,UtilTimerStack.pop(timerKey);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,175,protected Locale getLocale(ActionInvocation invocation, Configuration configuration) {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,176,if (invocation.getAction() instanceof LocaleProvider) {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,177,return ((LocaleProvider) invocation.getAction()).getLocale();
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreeMarkerPageFilter.java,179,return configuration.getLocale();
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,23,import java.io.IOException;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,24,import java.io.PrintWriter;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,26,import javax.servlet.ServletContext;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,27,import javax.servlet.ServletException;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,28,import javax.servlet.http.HttpServletRequest;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,29,import javax.servlet.http.HttpServletResponse;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,35,import org.apache.velocity.Template;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,36,import org.apache.velocity.context.Context;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,38,import com.opensymphony.module.sitemesh.Decorator;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,39,import com.opensymphony.module.sitemesh.HTMLPage;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,40,import com.opensymphony.module.sitemesh.Page;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,41,import com.opensymphony.xwork2.ActionContext;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,42,import com.opensymphony.xwork2.inject.Inject;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,49,public class VelocityPageFilter extends TemplatePageFilter {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,52,private static VelocityManager velocityManager;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,56,velocityManager = mgr;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,69,protected void applyDecorator(Page page, Decorator decorator,
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,70,HttpServletRequest req, HttpServletResponse res,
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,72,throws ServletException, IOException {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,74,if (velocityManager == null) {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,75,throw new ServletException("Missing freemarker dependency");
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,78,try {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,81,velocityManager.init(servletContext);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,84,String encoding = getEncoding();
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,87,Template template = velocityManager.getVelocityEngine().getTemplate(decorator.getPage(), encoding);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,88,Context context = velocityManager.createContext(ctx.getValueStack(), req, res);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,91,context.put("page", page);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,92,if (page instanceof HTMLPage) {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,93,HTMLPage htmlPage = ((HTMLPage) page);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,94,context.put("head", htmlPage.getHead());
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,96,context.put("title",page.getTitle());
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,97,context.put("body",page.getBody());
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,100,PrintWriter writer = res.getWriter();
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,101,template.merge(context, writer);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,102,writer.flush();
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,104,String msg = "Error applying decorator: " + e.getMessage();
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,105,LOG.error(msg, e);
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/VelocityPageFilter.java,106,throw new ServletException(msg, e);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,298,if (attrContentType != null) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,299,ServletActionContext.getResponse().setContentType(attrContentType.toString());
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,301,String contentType = getContentType();
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,303,if (contentType == null) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,304,contentType = "text/html";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,307,String encoding = template.getEncoding();
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,309,if (encoding != null) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,310,contentType = contentType + "; charset=" + encoding;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,313,ServletActionContext.getResponse().setContentType(contentType);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,161,ActionContext ctx = invocation.getInvocationContext();
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,162,HttpServletRequest req = (HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,176,CharArrayWriter charArrayWriter = new CharArrayWriter();
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,178,template.process(model, charArrayWriter);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,179,charArrayWriter.flush();
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,180,charArrayWriter.writeTo(writer);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,183,charArrayWriter.close();
core/src/main/java/org/apache/struts2/dispatcher/StreamResult.java,196,oResponse.setContentType(conditionalParse(contentType, invocation));
plugins/jfreechart/src/main/java/org/apache/struts2/dispatcher/ChartResult.java,188,OutputStream os = ServletActionContext.getResponse().getOutputStream();
core/src/main/java/org/apache/struts2/views/xslt/AdapterFactory.java,231,public Node adaptNullValue(BeanAdapter parent, String propertyName) {
core/src/main/java/org/apache/struts2/views/xslt/CollectionAdapter.java,49,Node childAdapter = getAdapterFactory().adaptNode(this, "item", value);
core/src/main/java/org/apache/struts2/util/ContainUtil.java,92,if (value.equals(obj2)) {
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,118,Map params = ac.getParameters();
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,119,params.remove(tokenName);
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,120,params.remove(TokenHelper.TOKEN_NAME_FIELD);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,193,mapping
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,194,.setMethod(key
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,195,.substring(METHOD_PREFIX.length()));
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,174,protected static final String REDIRECT_ACTION_PREFIX = "redirect-action:";
core/src/main/java/org/apache/struts2/components/Date.java,276,ValueStack stack = getStack();
core/src/main/java/org/apache/struts2/components/ElseIf.java,91,return answer != null && answer.booleanValue();
core/src/main/java/org/apache/struts2/components/Param.java,111,throw new StrutsException("No name found for following expression: " + name);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,625,multipartSaveDir.mkdir();
core/src/main/java/org/apache/struts2/dispatcher/mapper/RestfulActionMapper.java,118,String base = mapping.getNamespace() + mapping.getName();
core/src/main/java/org/apache/struts2/dispatcher/mapper/RestfulActionMapper.java,123,base = base + "/" + entry.getValue();
core/src/main/java/org/apache/struts2/dispatcher/mapper/RestfulActionMapper.java,128,return base;
core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java,64,Set<String> keys = parameters.keySet();
core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java,65,for (Iterator<String> iterator = keys.iterator(); iterator.hasNext();) {
core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java,66,String key = iterator.next();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,280,currentFile.delete();
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,154,public static String fieldErrorsSessionKey = "__MessageStoreInterceptor_FieldErrors_SessionKey";
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,155,public static String actionErrorsSessionKey = "__MessageStoreInterceptor_ActionErrors_SessionKey";
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,156,public static String actionMessagesSessionKey = "__MessageStoreInterceptor_ActionMessages_SessionKey";
core/src/main/java/org/apache/struts2/util/DateFormatter.java,59,this.date = date;
core/src/main/java/org/apache/struts2/views/jsp/IteratorStatus.java,58,return ((state.index + 1) % 2) == 1;
plugins/portlet/src/main/java/org/apache/struts2/views/freemarker/PortletFreemarkerResult.java,53,public class PortletFreemarkerResult extends StrutsResultSupport {
plugins/portlet/src/main/java/org/apache/struts2/views/freemarker/PortletFreemarkerResult.java,123,res.setRenderParameter("location", location);
core/src/main/java/org/apache/struts2/components/DoubleSelect.java,63,addParameter("onchange", getParameters().get("id") + "Redirect(this.options.selectedIndex)");
core/src/main/java/org/apache/struts2/components/DoubleListUIBean.java,194,addParameter("doubleId", form.getParameters().get("id") + "_" +escape(this.doubleName));
core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java,249,results.put(WAIT, rc);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,284,serviceAction(request, response, getActionMapping(request),
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,285,getRequestMap(request), getParameterMap(request),
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,309,serviceAction(request, response, getActionMapping(request),
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,310,getRequestMap(request), getParameterMap(request),
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,344,PortletResponse response, PortletConfig portletConfig, Integer phase) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,347,HttpServletResponse dummyResponse = new PortletServletResponse(response);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,348,HttpServletRequest dummyRequest = new PortletServletRequest(request, getPortletContext());
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,349,ServletContext dummyServletContext = new PortletServletContext(getPortletContext());
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,350,if(EVENT_PHASE.equals(phase)) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,351,dummyRequest = dispatcherUtils.wrapRequest(dummyRequest, dummyServletContext);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,356,extraContext.put(StrutsStatics.HTTP_REQUEST, dummyRequest);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,357,extraContext.put(StrutsStatics.HTTP_RESPONSE, dummyResponse);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,358,extraContext.put(StrutsStatics.SERVLET_CONTEXT, dummyServletContext);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,411,public void serviceAction(PortletRequest request, PortletResponse response,
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,416,String actionName = mapping.getName();
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,417,String namespace = mapping.getNamespace();
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,421,sessionMap, applicationMap, request, response,
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,422,getPortletConfig(), phase);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,462,protected ActionMapping getActionMapping(final PortletRequest request) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,465,if (resetAction(request)) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,466,mapping = (ActionMapping) actionMap.get(request.getPortletMode());
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,468,actionPath = request.getParameter(ACTION_PARAM);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,470,mapping = (ActionMapping) actionMap.get(request
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,477,PortletServletRequest httpRequest = new PortletServletRequest(request, getPortletContext());
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,478,mapping = actionMapper.getMapping(httpRequest, dispatcherUtils.getConfigurationManager());
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,125,private Map<String, String> requestParameters = new LinkedHashMap<String, String>();
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,146,protected List<String> prohibitedResultParam = Arrays.asList(new String[] {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,147,DEFAULT_PARAM, "namespace", "method", "encode", "parse", "location",
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,167,String resultCode = invocation.getResultCode();
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,168,if (resultCode != null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,169,ResultConfig resultConfig = invocation.getProxy().getConfig().getResults().get(
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,170,resultCode);
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,171,Map resultConfigParams = resultConfig.getParams();
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,172,for (Iterator i = resultConfigParams.entrySet().iterator(); i.hasNext(); ) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,173,Map.Entry e = (Map.Entry) i.next();
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,174,if (! prohibitedResultParam.contains(e.getKey())) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,175,requestParameters.put(e.getKey().toString(),
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,176,e.getValue() == null ? "":
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,177,conditionalParse(e.getValue().toString(), invocation));
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,183,UrlHelper.buildParametersString(requestParameters, tmpLocation, "&");
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,223,public ServletActionRedirectResult addParameter(String key, Object value) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,224,requestParameters.put(key, String.valueOf(value));
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,225,return this;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,80,public class ServletRedirectResult extends StrutsResultSupport {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,146,finalLocation = response.encodeRedirectURL(finalLocation);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,502,if (stack != null) {
core/src/main/java/org/apache/struts2/views/velocity/VelocityManager.java,193,ChainedContext chained = new ChainedContext(context, req, res, ctx);
core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java,228,synchronized (session) {
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,131,Map session = ActionContext.getContext().getSession();
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,197,public static String buildResourceUrl(String value, Map params) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,206,Iterator it = params.keySet().iterator();
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,209,String key = (String)it.next();
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,210,String val = (String)params.get(key);
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,212,sb.append(URLEncoder.encode(key, ENCODING)).append("=");
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,213,sb.append(URLEncoder.encode(val, ENCODING));
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,234,public static Map ensureParamsAreStringArrays(Map params) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,235,Map result = null;
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,237,result = new LinkedHashMap(params.size());
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,238,Iterator it = params.keySet().iterator();
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,240,Object key = it.next();
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,241,Object val = params.get(key);
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,243,result.put(key, val);
plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java,245,result.put(key, new String[] { val.toString() });
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,113,private static final String ATTR_APPLICATION_MODEL = ".freemarker.Application";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,114,private static final String ATTR_JSP_TAGLIBS_MODEL = ".freemarker.JspTaglibs";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,115,private static final String ATTR_REQUEST_MODEL = ".freemarker.Request";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,116,private static final String ATTR_REQUEST_PARAMETERS_MODEL = ".freemarker.RequestParameters";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,125,private String encoding;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,126,private boolean altMapWrapper;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,127,private boolean cacheBeanWrapper;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,128,private Map<String,TagLibrary> tagLibraries;
core/src/main/java/org/apache/struts2/components/UIBean.java,498,LOG.error("error when rendering", e);
core/src/main/java/org/apache/struts2/components/template/FreemarkerTemplateEngine.java,150,if (bodyContent != null && bodyContent.isAssignableFrom(writer.getClass())) {
core/src/main/java/org/apache/struts2/components/template/FreemarkerTemplateEngine.java,151,final Writer wrapped = writer;
core/src/main/java/org/apache/struts2/components/template/FreemarkerTemplateEngine.java,152,writer = new Writer() {
core/src/main/java/org/apache/struts2/components/template/FreemarkerTemplateEngine.java,153,public void write(char cbuf[], int off, int len) throws IOException {
core/src/main/java/org/apache/struts2/components/template/FreemarkerTemplateEngine.java,154,wrapped.write(cbuf, off, len);
core/src/main/java/org/apache/struts2/components/template/FreemarkerTemplateEngine.java,157,public void flush() throws IOException {
core/src/main/java/org/apache/struts2/components/template/FreemarkerTemplateEngine.java,161,public void close() throws IOException {
core/src/main/java/org/apache/struts2/components/template/FreemarkerTemplateEngine.java,162,wrapped.close();
core/src/main/java/org/apache/struts2/views/jsp/ui/SubmitTag.java,34,public class SubmitTag extends AbstractUITag {
core/src/main/java/org/apache/struts2/components/FormButton.java,33,public abstract class FormButton extends UIBean {
core/src/main/java/org/apache/struts2/components/Submit.java,56,final public static String TEMPLATE = "submit";
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,143,sb.append(fieldError.getKey());
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,549,extraContext.put(ServletActionContext.ACTION_MAPPING, mapping);
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,200,protected String determinePath(String prefix, String ns) {
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,201,if (ns == null || "/".equals(ns)) {
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,202,ns = "";
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,204,if (ns.length() > 0) {
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,205,if (ns.charAt(0) == '/') {
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,206,ns = ns.substring(1);
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,208,if (ns.charAt(ns.length() - 1) != '/') {
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,209,ns += "/";
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,212,return prefix + ns;
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,222,template = ClassLoaderUtils.getResource(path, getClass());
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,224,LOG.debug("Loaded template '" + path + "' from class path.");
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,226,Container container = dispatcherUtils.getContainer();
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,342,public HashMap createContextMap(Map requestMap, Map parameterMap,
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,343,Map sessionMap, Map applicationMap, PortletRequest request,
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,354,HashMap<String,Object> extraContext = new HashMap<String,Object>();
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,412,ActionMapping mapping, Map requestMap, Map parameterMap,
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,413,Map sessionMap, Map applicationMap, String portletNamespace,
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,420,HashMap extraContext = createContextMap(requestMap, parameterMap,
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,526,protected Map getParameterMap(PortletRequest request) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/Jsr168Dispatcher.java,527,return new HashMap(request.getParameterMap());
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletResult.java,139,res.setRenderParameter(ACTION_PARAM, "renderDirect");
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,142,res.setRenderParameter(PortletActionConstants.ACTION_PARAM,
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,338,private void init_MethodConfigurationProvider() {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,341,com.opensymphony.xwork2.inject.DependencyException: com.opensymphony.xwork2.inject.ContainerImpl$MissingDependencyException: No mapping found for dependency [type=org.apache.struts2.dispatcher.mapper.ActionMapper, name='default'] in public static void org.apache.struts2.dispatcher.FilterDispatcher.setActionMapper(org.apache.struts2.dispatcher.mapper.ActionMapper).
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,356,Caused by: com.opensymphony.xwork2.inject.ContainerImpl$MissingDependencyException: No mapping found for dependency [type=org.apache.struts2.dispatcher.mapper.ActionMapper, name='default'] in public static void org.apache.struts2.dispatcher.FilterDispatcher.setActionMapper(org.apache.struts2.dispatcher.mapper.ActionMapper).
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,363,... 26 more
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,365,MethodConfigurationProvider provider = new MethodConfigurationProvider();
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,366,provider.init(configurationManager.getConfiguration());
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,367,provider.loadPackages();
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,442,init_MethodConfigurationProvider();
core/src/main/java/org/apache/struts2/impl/StrutsObjectFactory.java,89,public Result buildResult(ResultConfig resultConfig, Map extraContext) throws Exception {
core/src/main/java/org/apache/struts2/impl/StrutsObjectFactory.java,90,String resultClassName = resultConfig.getClassName();
core/src/main/java/org/apache/struts2/impl/StrutsObjectFactory.java,92,return null;
core/src/main/java/org/apache/struts2/impl/StrutsObjectFactory.java,94,Object result = buildBean(resultClassName, extraContext);
core/src/main/java/org/apache/struts2/impl/StrutsObjectFactory.java,98,return (Result) result;
core/src/main/java/org/apache/struts2/impl/StrutsObjectFactory.java,104,throw new ConfigurationException(result.getClass().getName() + " does not implement Result.");
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,24,import java.util.Collection;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,25,import java.util.Collections;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,26,import java.util.Enumeration;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,27,import java.util.HashSet;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,28,import java.util.Iterator;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,29,import java.util.Locale;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,30,import java.util.Map;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,31,import java.util.Set;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,32,import java.util.StringTokenizer;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,249,if (files != null) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,253,parameters.put(inputName, files);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,254,parameters.put(inputName + "ContentType", contentType);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,255,parameters.put(inputName + "FileName", fileName);
core/src/main/java/org/apache/struts2/interceptor/validation/AnnotationValidationInterceptor.java,42,SkipValidation skip = (SkipValidation) method.getAnnotation(SkipValidation.class);
core/src/main/java/org/apache/struts2/interceptor/validation/AnnotationValidationInterceptor.java,43,if (skip != null) {
core/src/main/java/org/apache/struts2/views/jsp/ActionTag.java,57,action.start(pageContext.getOut());
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,330,if(queryParams.containsKey(paramName)) {
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,338,List paramList = new ArrayList(Arrays
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,339,.asList(currentParamValues));
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,340,paramList.add(translatedParamValue);
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,341,String newParamValues[] = new String[paramList
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,342,.size()];
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,343,queryParams.put(paramName, paramList
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,344,.toArray(newParamValues));
core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java,63,Map<String, String> newParams = new HashMap<String, String>();
core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java,76,newParams.put(name, uncheckedValue);
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,72,final Locale locale = settings.getLocale();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,74,public Object create(Context context) throws Exception {
core/src/main/java/org/apache/struts2/config/Settings.java,126,if (locale == null) {
core/src/main/java/org/apache/struts2/config/Settings.java,127,try {
core/src/main/java/org/apache/struts2/config/Settings.java,128,StringTokenizer localeTokens = new StringTokenizer(get(StrutsConstants.STRUTS_LOCALE), "_");
core/src/main/java/org/apache/struts2/config/Settings.java,129,String lang = null;
core/src/main/java/org/apache/struts2/config/Settings.java,130,String country = null;
core/src/main/java/org/apache/struts2/config/Settings.java,132,if (localeTokens.hasMoreTokens()) {
core/src/main/java/org/apache/struts2/config/Settings.java,133,lang = localeTokens.nextToken();
core/src/main/java/org/apache/struts2/config/Settings.java,136,if (localeTokens.hasMoreTokens()) {
core/src/main/java/org/apache/struts2/config/Settings.java,137,country = localeTokens.nextToken();
core/src/main/java/org/apache/struts2/config/Settings.java,140,locale = new Locale(lang, country);
core/src/main/java/org/apache/struts2/config/Settings.java,143,LOG.warn("Settings: Could not parse struts.locale setting, substituting default VM locale");
core/src/main/java/org/apache/struts2/config/Settings.java,144,locale = Locale.getDefault();
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,47,import com.opensymphony.xwork2.config.entities.ActionConfig;
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,48,import com.opensymphony.xwork2.config.entities.PackageConfig;
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,49,import com.opensymphony.xwork2.config.entities.ResultConfig;
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,50,import com.opensymphony.xwork2.config.entities.ResultTypeConfig;
plugins/codebehind/src/main/java/org/apache/struts2/codebehind/CodebehindUnknownHandler.java,131,PackageConfig pkg = configuration.getPackageConfig(defaultPackageName);
core/src/main/java/org/apache/struts2/components/URL.java,179,if (value != null) {
core/src/main/java/org/apache/struts2/components/URL.java,180,value = findString(value);
core/src/main/java/org/apache/struts2/components/URL.java,185,try {
core/src/main/java/org/apache/struts2/components/URL.java,187,String includeParams = (urlIncludeParams != null ? urlIncludeParams.toLowerCase() : GET);
core/src/main/java/org/apache/struts2/components/URL.java,189,if (this.includeParams != null) {
core/src/main/java/org/apache/struts2/components/URL.java,190,includeParams = findString(this.includeParams);
core/src/main/java/org/apache/struts2/components/URL.java,193,if (NONE.equalsIgnoreCase(includeParams)) {
core/src/main/java/org/apache/struts2/components/URL.java,194,mergeRequestParameters(value, parameters, Collections.EMPTY_MAP);
core/src/main/java/org/apache/struts2/components/URL.java,196,mergeRequestParameters(value, parameters, req.getParameterMap());
core/src/main/java/org/apache/struts2/components/URL.java,199,includeGetParameters();
core/src/main/java/org/apache/struts2/components/URL.java,200,includeExtraParameters();
core/src/main/java/org/apache/struts2/components/URL.java,202,includeGetParameters();
core/src/main/java/org/apache/struts2/components/URL.java,203,includeExtraParameters();
core/src/main/java/org/apache/struts2/components/URL.java,205,LOG.warn("Unknown value for includeParams parameter to URL tag: " + includeParams);
core/src/main/java/org/apache/struts2/components/URL.java,208,LOG.warn("Unable to put request parameters (" + req.getQueryString() + ") into parameter map.", e);
core/src/main/java/org/apache/struts2/components/URL.java,215,private void includeExtraParameters() {
core/src/main/java/org/apache/struts2/components/URL.java,216,if (extraParameterProvider != null) {
core/src/main/java/org/apache/struts2/components/URL.java,217,mergeRequestParameters(value, parameters, extraParameterProvider.getExtraParameters());
core/src/main/java/org/apache/struts2/components/URL.java,220,private void includeGetParameters() {
core/src/main/java/org/apache/struts2/components/URL.java,221,String query = extractQueryString();
core/src/main/java/org/apache/struts2/components/URL.java,222,mergeRequestParameters(value, parameters, UrlHelper.parseQueryString(query));
core/src/main/java/org/apache/struts2/components/URL.java,225,private String extractQueryString() {
core/src/main/java/org/apache/struts2/components/URL.java,227,String query = req.getQueryString();
core/src/main/java/org/apache/struts2/components/URL.java,228,if (query == null) {
core/src/main/java/org/apache/struts2/components/URL.java,229,query = (String) req.getAttribute("javax.servlet.forward.query_string");
core/src/main/java/org/apache/struts2/components/URL.java,232,if (query != null) {
core/src/main/java/org/apache/struts2/components/URL.java,234,int idx = query.lastIndexOf('#');
core/src/main/java/org/apache/struts2/components/URL.java,236,if (idx != -1) {
core/src/main/java/org/apache/struts2/components/URL.java,237,query = query.substring(0, idx);
core/src/main/java/org/apache/struts2/components/URL.java,240,return query;
core/src/main/java/org/apache/struts2/components/URL.java,335,protected void mergeRequestParameters(String value, Map parameters, Map contextParameters){
core/src/main/java/org/apache/struts2/components/URL.java,337,Map mergedParams = new LinkedHashMap(contextParameters);
core/src/main/java/org/apache/struts2/components/URL.java,343,if (value != null && value.trim().length() > 0 && value.indexOf("?") > 0) {
core/src/main/java/org/apache/struts2/components/URL.java,344,mergedParams = new LinkedHashMap();
core/src/main/java/org/apache/struts2/components/URL.java,346,String queryString = value.substring(value.indexOf("?")+1);
core/src/main/java/org/apache/struts2/components/URL.java,348,mergedParams = UrlHelper.parseQueryString(queryString);
core/src/main/java/org/apache/struts2/components/URL.java,349,for (Iterator iterator = contextParameters.entrySet().iterator(); iterator.hasNext();) {
core/src/main/java/org/apache/struts2/components/URL.java,350,Map.Entry entry = (Map.Entry) iterator.next();
core/src/main/java/org/apache/struts2/components/URL.java,351,Object key = entry.getKey();
core/src/main/java/org/apache/struts2/components/URL.java,353,if (!mergedParams.containsKey(key)) {
core/src/main/java/org/apache/struts2/components/URL.java,354,mergedParams.put(key, entry.getValue());
core/src/main/java/org/apache/struts2/components/URL.java,366,for (Iterator iterator = mergedParams.entrySet().iterator(); iterator.hasNext();) {
core/src/main/java/org/apache/struts2/components/URL.java,367,Map.Entry entry = (Map.Entry) iterator.next();
core/src/main/java/org/apache/struts2/components/URL.java,368,Object key = entry.getKey();
core/src/main/java/org/apache/struts2/components/URL.java,370,if (!parameters.containsKey(key)) {
core/src/main/java/org/apache/struts2/components/URL.java,371,parameters.put(key, entry.getValue());
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,280,public String getMatchingPattern() {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,281,return matchingPattern;
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,284,public void setMatchingPattern(String matchingPattern) {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,285,this.matchingPattern = matchingPattern;
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,288,public String getExcludingPattern() {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,289,return excludingPattern;
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,292,public void setExcludingPattern(String excludingPattern) {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,293,this.excludingPattern = excludingPattern;
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,62,ActionConfig config = ctx.getActionInvocation().getProxy().getConfig();
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,63,Map results = config.getResults();
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,65,ResultConfig resultConfig = null;
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,67,synchronized (config) {
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,68,try {
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,69,resultConfig = (ResultConfig) results.get(outcome);
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,72,if (resultConfig == null) {
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,74,resultConfig = (ResultConfig) results.get("*");
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,77,if (resultConfig != null) {
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,78,ctx.getActionInvocation().setResultCode(outcome);
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,81,parent.handleNavigation(facesContext, fromAction, outcome);
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,318,Writer writer = response.getWriter();
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,352,PrintWriter out = response.getWriter();
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,355,transformer.transform(xmlSource, new StreamResult(out));
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,357,out.close(); // ...and flush...
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,363,writer.flush();
core/src/main/java/org/apache/struts2/components/I18n.java,99,ResourceBundle bundle = (ResourceBundle) findValue("texts('" + name + "')");
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,131,sb.append(buildArray(validationAware.getActionErrors()));
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,132,sb.append(",");
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,125,int lastSlashPos = actionName.lastIndexOf('/');
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,142,String id = actionName.substring(lastSlashPos+1);
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,161,if (idParameterName != null) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,162,if (mapping.getParams() == null) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,163,mapping.setParams(new HashMap());
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,165,mapping.getParams().put(idParameterName, id);
core/src/main/java/org/apache/struts2/components/OptGroup.java,77,description="Renders a Select Tag's OptGroup Tag",
core/src/main/java/org/apache/struts2/components/Text.java,119,description="Render a I18n text message",
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,23,import java.io.IOException;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,24,import java.io.OutputStream;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,25,import java.io.RandomAccessFile;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,26,import java.io.Writer;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,43,private LinkedList buffers;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,47,private byte[] buffer;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,50,private boolean closed;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,51,private int blockSize;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,61,public FastByteArrayOutputStream(int aSize) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,62,blockSize = aSize;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,63,buffer = new byte[blockSize];
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,67,public int getSize() {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,68,return size + index;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,71,public void close() {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,72,closed = true;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,75,public byte[] toByteArray() {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,76,byte[] data = new byte[getSize()];
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,79,int pos = 0;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,82,Iterator iter = buffers.iterator();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,84,while (iter.hasNext()) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,85,byte[] bytes = (byte[]) iter.next();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,86,System.arraycopy(bytes, 0, data, pos, blockSize);
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,87,pos += blockSize;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,92,System.arraycopy(buffer, 0, data, pos, index);
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,94,return data;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,97,public String toString() {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,98,return new String(toByteArray());
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,102,public void write(int datum) throws IOException {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,103,if (closed) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,104,throw new IOException("Stream closed");
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,106,if (index == blockSize) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,107,addBuffer();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,111,buffer[index++] = (byte) datum;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,115,public void write(byte[] data, int offset, int length) throws IOException {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,116,if (data == null) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,117,throw new NullPointerException();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,119,throw new IndexOutOfBoundsException();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,121,throw new IOException("Stream closed");
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,123,if ((index + length) > blockSize) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,124,int copyLength;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,126,do {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,127,if (index == blockSize) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,128,addBuffer();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,131,copyLength = blockSize - index;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,133,if (length < copyLength) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,134,copyLength = length;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,137,System.arraycopy(data, offset, buffer, index, copyLength);
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,138,offset += copyLength;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,139,index += copyLength;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,140,length -= copyLength;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,144,System.arraycopy(data, offset, buffer, index, length);
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,145,index += length;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,151,public void writeTo(OutputStream out) throws IOException {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,153,if (buffers != null) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,154,Iterator iter = buffers.iterator();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,156,while (iter.hasNext()) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,157,byte[] bytes = (byte[]) iter.next();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,158,out.write(bytes, 0, blockSize);
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,163,out.write(buffer, 0, index);
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,166,public void writeTo(RandomAccessFile out) throws IOException {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,168,if (buffers != null) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,169,Iterator iter = buffers.iterator();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,171,while (iter.hasNext()) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,172,byte[] bytes = (byte[]) iter.next();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,173,out.write(bytes, 0, blockSize);
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,178,out.write(buffer, 0, index);
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,181,public void writeTo(Writer out, String encoding) throws IOException {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,183,if (buffers != null) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,184,Iterator iter = buffers.iterator();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,186,while (iter.hasNext()) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,187,byte[] bytes = (byte[]) iter.next();
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,189,if (encoding != null) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,190,out.write(new String(bytes, encoding));
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,192,out.write(new String(bytes));
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,198,if (encoding != null) {
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,199,out.write(new String(buffer, 0, index, encoding));
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,201,out.write(new String(buffer, 0, index));
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,211,buffers = new LinkedList();
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ActionNamesAction.java,47,ConfigurationHelper configHelper;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,74,public void setConfigurationHelper(ConfigurationHelper cfg) {
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,75,this.configHelper = cfg;
core/src/main/java/org/apache/struts2/components/Anchor.java,77,addParameter("href", findString(href));
core/src/main/java/org/apache/struts2/components/UIBean.java,834,return name.replaceAll("[\\.\\[\\]]", "_");
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,147,public JasperReportsResult setImageServletUrl(final String imageServletUrl) {
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,149,return this;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,152,public JasperReportsResult setDataSource(String dataSource) {
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,154,return this;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,157,public JasperReportsResult setFormat(String format) {
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,159,return this;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,162,public JasperReportsResult setDocumentName(String documentName) {
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,164,return this;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,167,public JasperReportsResult setContentDisposition(String contentDisposition) {
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,169,return this;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,172,public JasperReportsResult setDelimiter(String delimiter) {
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,174,return this;
core/src/main/java/org/apache/struts2/components/UIBean.java,555,templateDir = (String) stack.findValue("#attr.templateDir");
core/src/main/java/org/apache/struts2/components/UIBean.java,588,theme = (String) stack.findValue("#attr.theme");
core/src/main/java/org/apache/struts2/components/ActionComponent.java,227,int exclamation = actualName.lastIndexOf("!");
core/src/main/java/org/apache/struts2/components/ActionComponent.java,228,if (exclamation != -1) {
core/src/main/java/org/apache/struts2/components/ActionComponent.java,229,actionName = actualName.substring(0, exclamation);
core/src/main/java/org/apache/struts2/components/ActionComponent.java,230,methodName = actualName.substring(exclamation + 1);
core/src/main/java/org/apache/struts2/components/ActionComponent.java,232,actionName = actualName;
core/src/main/java/org/apache/struts2/components/ActionComponent.java,233,methodName = null;
core/src/main/java/org/apache/struts2/components/Form.java,106,protected boolean enableDynamicMethodInvocation = true;
core/src/main/java/org/apache/struts2/components/Form.java,128,public void setEnableDynamicMethodInvocation(String enable) {
core/src/main/java/org/apache/struts2/components/Form.java,129,enableDynamicMethodInvocation = "true".equals(enable);
core/src/main/java/org/apache/struts2/components/FormButton.java,73,name = "action:" + findString(action);
core/src/main/java/org/apache/struts2/components/FormButton.java,76,name += "!" + findString(method);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,484,uri.append(mapping.getNamespace());
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,485,if (!"/".equals(mapping.getNamespace())) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,486,uri.append("/");
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,500,String extension = getDefaultExtension();
core/src/main/java/org/apache/struts2/validators/DWRValidator.java,94,Configuration cfg = du.getConfigurationManager().getConfiguration();
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,190,String result;
core/src/main/java/org/apache/struts2/views/util/UrlHelper.java,193,result = encodeResult ? response.encodeURL(link.toString()) : link.toString();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,334,serializeIt(ctx.getSession(), "request", writer, new ArrayList<Object>());
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,70,multi = new ServletMultipartRequest(servletRequest, saveDir);
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,156,alias(TextProvider.class, StrutsConstants.STRUTS_XWORKTEXTPROVIDER, builder, props);
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,186,if (bundles != null && bundles.length() > 0) {
core/src/main/java/org/apache/struts2/components/ComboBox.java,140,addParameter("listValue", "value");
core/src/main/java/org/apache/struts2/components/ComboBox.java,142,Iterator i = MakeIterator.convert(value);
core/src/main/java/org/apache/struts2/components/ComboBox.java,143,addParameter("list", i);
core/src/main/java/org/apache/struts2/components/ComboBox.java,144,if (listKey != null) {
core/src/main/java/org/apache/struts2/components/ComboBox.java,145,addParameter("listKey", listKey);
core/src/main/java/org/apache/struts2/components/ComboBox.java,147,if (listValue != null) {
core/src/main/java/org/apache/struts2/components/ComboBox.java,148,addParameter("listValue", listValue);
core/src/main/java/org/apache/struts2/impl/StrutsObjectFactory.java,48,params.putAll(refParams);
core/src/main/java/org/apache/struts2/views/jsp/iterator/IteratorGeneratorTag.java,199,if (countObj instanceof Integer) {
core/src/main/java/org/apache/struts2/views/jsp/iterator/IteratorGeneratorTag.java,200,count = ((Integer)countObj).intValue();
core/src/main/java/org/apache/struts2/views/jsp/iterator/IteratorGeneratorTag.java,202,else if (countObj instanceof Float) {
core/src/main/java/org/apache/struts2/views/jsp/iterator/IteratorGeneratorTag.java,203,count = ((Float)countObj).intValue();
core/src/main/java/org/apache/struts2/views/jsp/iterator/IteratorGeneratorTag.java,205,else if (countObj instanceof Long) {
core/src/main/java/org/apache/struts2/views/jsp/iterator/IteratorGeneratorTag.java,206,count = ((Long)countObj).intValue();
core/src/main/java/org/apache/struts2/views/jsp/iterator/IteratorGeneratorTag.java,208,else if (countObj instanceof Double) {
core/src/main/java/org/apache/struts2/views/jsp/iterator/SubsetIteratorTag.java,216,if (countObj instanceof Integer) {
core/src/main/java/org/apache/struts2/views/jsp/iterator/SubsetIteratorTag.java,217,count = ((Integer)countObj).intValue();
core/src/main/java/org/apache/struts2/views/jsp/iterator/SubsetIteratorTag.java,219,else if (countObj instanceof Float) {
core/src/main/java/org/apache/struts2/views/jsp/iterator/SubsetIteratorTag.java,220,count = ((Float)countObj).intValue();
core/src/main/java/org/apache/struts2/views/jsp/iterator/SubsetIteratorTag.java,222,else if (countObj instanceof Long) {
core/src/main/java/org/apache/struts2/views/jsp/iterator/SubsetIteratorTag.java,223,count = ((Long)countObj).intValue();
core/src/main/java/org/apache/struts2/views/jsp/iterator/SubsetIteratorTag.java,225,else if (countObj instanceof Double) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,25,import java.net.MalformedURLException;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,26,import java.net.URL;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,111,private static boolean devMode;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,116,private static String defaultEncoding;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,121,private static String defaultLocale;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,126,private static String multipartSaveDir;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,200,public  Dispatcher(ServletContext servletContext, Map<String, String> initParams) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,531,Map params = null;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,532,if (mapping != null) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,533,params = mapping.getParams();
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,535,Map requestParams = new HashMap(request.getParameterMap());
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,536,if (params != null) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,537,params.putAll(requestParams);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,539,params = requestParams;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/FormExampleModelDriven.java,21,package org.apache.struts2.portlet.example;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/FormExampleModelDriven.java,23,import org.apache.struts2.portlet.example.model.Name;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/FormExampleModelDriven.java,25,import com.opensymphony.xwork2.ActionSupport;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/FormExampleModelDriven.java,26,import com.opensymphony.xwork2.ModelDriven;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/FormExampleModelDriven.java,30,public class FormExampleModelDriven extends ActionSupport implements ModelDriven<Name> {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/FormExampleModelDriven.java,32,private Name name = new Name();
apps/portlet/src/main/java/org/apache/struts2/portlet/example/FormExampleModelDriven.java,34,public Name getModel() {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/FormExampleModelDriven.java,35,return name;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,21,package org.apache.struts2.portlet.example.fileupload;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,23,import java.io.File;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,25,import org.apache.struts2.dispatcher.DefaultActionSupport;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,31,public class FileUploadAction extends DefaultActionSupport {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,33,private static final long serialVersionUID = 5156288255337069381L;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,35,private String contentType;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,36,private File upload;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,37,private String fileName;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,38,private String caption;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,42,public String getUploadFileName() {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,43,return fileName;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,45,public void setUploadFileName(String fileName) {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,46,this.fileName = fileName;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,52,public String getUploadContentType() {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,53,return contentType;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,55,public void setUploadContentType(String contentType) {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,56,this.contentType = contentType;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,62,public File getUpload() {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,63,return upload;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,65,public void setUpload(File upload) {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,66,this.upload = upload;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,70,public String getCaption() {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,71,return caption;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,73,public void setCaption(String caption) {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,74,this.caption = caption;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,77,public String upload() throws Exception  {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/fileupload/FileUploadAction.java,78,return SUCCESS;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,1,package org.apache.struts2.portlet.example.model;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,3,public class Name {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,4,private String firstName;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,5,private String lastName;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,6,public String getFirstName() {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,7,return firstName;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,9,public void setFirstName(String firstName) {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,10,this.firstName = firstName;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,12,public String getLastName() {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,13,return lastName;
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,15,public void setLastName(String lastName) {
apps/portlet/src/main/java/org/apache/struts2/portlet/example/model/Name.java,16,this.lastName = lastName;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,21,package org.apache.struts2.showcase.action;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,23,import java.util.Arrays;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,24,import java.util.Date;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,25,import java.util.HashMap;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,26,import java.util.List;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,27,import java.util.Map;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,29,import com.opensymphony.xwork2.ActionSupport;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,31,public class ExampleAction extends ActionSupport {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,32,public static final String CONSTANT = "Struts Rocks!";
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,34,public static Date getCurrentDate() {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,35,return new Date();
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,38,public String getName() {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,39,return "John Galt";
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,42,public String[] getBands() {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,43,return new String[] { "Pink Floyd", "Metallica", "Guns & Roses" };
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,46,public List<String> getMovies() {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,47,return Arrays.asList("Lord of the Rings", "Matrix");
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,50,public Book getBook() {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,51,return new Book("Iliad", "Homer");
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,54,public Map<String, Book> getBooks() {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,55,Map<String, Book> books = new HashMap<String, Book>();
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,56,books.put("Iliad", new Book("Iliad", "Homer"));
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,57,books.put("The Republic", new Book("The Replublic", "Plato"));
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,58,books.put("Thus Spake Zarathustra", new Book("Thus Spake Zarathustra",
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,60,return books;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,64,class Book {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,65,private String title;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,66,private String author;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,68,public Book(String title, String author) {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,69,this.title = title;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,70,this.author = author;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,73,public String getTitle() {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,74,return title;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,77,public void setTitle(String title) {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,78,this.title = title;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,81,public String getAuthor() {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,82,return author;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,85,public void setAuthor(String author) {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/ExampleAction.java,86,this.author = author;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,21,package org.apache.struts2.showcase.action;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,23,import java.io.BufferedWriter;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,24,import java.io.File;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,25,import java.io.FileOutputStream;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,26,import java.io.FileWriter;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,27,import java.io.IOException;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,28,import java.net.URL;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,30,import org.apache.struts2.ServletActionContext;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,32,import com.opensymphony.xwork2.Action;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,33,import com.opensymphony.xwork2.interceptor.annotations.After;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,39,public class JSPEvalAction extends ExampleAction {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,40,private String jsp;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,41,private final static String FILE = "/interactive/demo.jsp";
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,43,public String execute() throws IOException {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,44,if (jsp != null) {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,46,URL url = ServletActionContext.getServletContext().getResource(FILE);
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,47,BufferedWriter writer = new BufferedWriter(new FileWriter(new File(url
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,48,.getFile())));
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,49,try {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,51,writer.write("<%@ taglib prefix=\"s\" uri=\"/struts-tags\" %>");
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,52,writer.write(jsp);
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,55,writer.close();
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,58,return Action.SUCCESS;
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,62,public void cleanUp() throws IOException {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,63,URL url = ServletActionContext.getServletContext().getResource(FILE);
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,64,FileOutputStream out = new FileOutputStream(new File(url.getFile()));
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,65,try {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,66,out.getChannel().truncate(0);
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,69,out.close();
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,73,public void setJsp(String jsp) {
apps/showcase/src/main/java/org/apache/struts2/showcase/action/JSPEvalAction.java,74,this.jsp = jsp;
core/src/main/java/org/apache/struts2/components/ContextBean.java,21,package org.apache.struts2.components;
core/src/main/java/org/apache/struts2/components/ContextBean.java,23,import org.apache.struts2.views.annotations.StrutsTagAttribute;
core/src/main/java/org/apache/struts2/components/ContextBean.java,25,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/components/ContextBean.java,30,public abstract class ContextBean extends Component {
core/src/main/java/org/apache/struts2/components/ContextBean.java,31,protected String var;
core/src/main/java/org/apache/struts2/components/ContextBean.java,33,public ContextBean(ValueStack stack) {
core/src/main/java/org/apache/struts2/components/ContextBean.java,34,super(stack);
core/src/main/java/org/apache/struts2/components/ContextBean.java,37,protected void putInContext(Object value) {
core/src/main/java/org/apache/struts2/components/ContextBean.java,38,if (var != null && var.length() > 0) {
core/src/main/java/org/apache/struts2/components/ContextBean.java,39,stack.getContext().put(var, value);
core/src/main/java/org/apache/struts2/components/ContextBean.java,44,public void setVar(String var) {
core/src/main/java/org/apache/struts2/components/ContextBean.java,45,if (var != null) {
core/src/main/java/org/apache/struts2/components/ContextBean.java,46,this.var = findString(var);
core/src/main/java/org/apache/struts2/components/ContextBean.java,55,public void setId(String id) {
core/src/main/java/org/apache/struts2/components/ContextBean.java,56,setVar(id);
core/src/main/java/org/apache/struts2/components/ContextBean.java,59,protected String getVar() {
core/src/main/java/org/apache/struts2/components/ContextBean.java,60,return this.var;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,21,package org.apache.struts2.components;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,23,import java.io.IOException;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,24,import java.io.Writer;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,28,import org.apache.struts2.StrutsException;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,29,import org.apache.struts2.dispatcher.mapper.ActionMapping;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,30,import org.apache.struts2.views.util.UrlHelper;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,32,import com.opensymphony.xwork2.ActionContext;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,33,import com.opensymphony.xwork2.ActionInvocation;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,34,import com.opensymphony.xwork2.config.entities.ActionConfig;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,40,public class ServletUrlRenderer implements UrlRenderer {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,50,public void renderUrl(Writer writer, URL urlComponent) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,51,String scheme = urlComponent.req.getScheme();
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,53,if (urlComponent.scheme != null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,54,scheme = urlComponent.scheme;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,57,String result;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,58,if (urlComponent.value == null && urlComponent.action != null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,59,result = urlComponent.determineActionURL(urlComponent.action, urlComponent.namespace, urlComponent.method, urlComponent.req, urlComponent.res, urlComponent.parameters, scheme, urlComponent.includeContext, urlComponent.encode, urlComponent.forceAddSchemeHostAndPort, urlComponent.escapeAmp);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,61,String _value = urlComponent.value;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,65,if (_value != null && _value.indexOf("?") > 0) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,66,_value = _value.substring(0, _value.indexOf("?"));
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,68,result = UrlHelper.buildUrl(_value, urlComponent.req, urlComponent.res, urlComponent.parameters, scheme, urlComponent.includeContext, urlComponent.encode, urlComponent.forceAddSchemeHostAndPort, urlComponent.escapeAmp);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,70,if ( urlComponent.anchor != null && urlComponent.anchor.length() > 0 ) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,71,result += '#' + urlComponent.anchor;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,74,String var = urlComponent.getVar();
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,76,if (var != null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,77,urlComponent.putInContext(result);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,80,urlComponent.req.setAttribute(var, result);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,82,try {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,83,writer.write(result);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,85,throw new StrutsException("IOError: " + e.getMessage(), e);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,93,public void renderFormUrl(Form formComponent) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,94,String namespace = formComponent.determineNamespace(formComponent.namespace, formComponent.getStack(),
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,95,formComponent.request);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,96,String action;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,98,if(formComponent.action != null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,99,action = formComponent.findString(formComponent.action);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,103,ActionInvocation ai = (ActionInvocation) formComponent.getStack().getContext().get(
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,104,ActionContext.ACTION_INVOCATION);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,105,if (ai != null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,106,action = ai.getProxy().getActionName();
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,107,namespace = ai.getProxy().getNamespace();
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,110,String uri = formComponent.request.getRequestURI();
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,111,action = uri.substring(uri.lastIndexOf('/'));
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,115,String actionMethod = "";
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,119,if (formComponent.enableDynamicMethodInvocation) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,120,if (action.indexOf("!") != -1) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,121,int endIdx = action.lastIndexOf("!");
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,122,actionMethod = action.substring(endIdx + 1, action.length());
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,123,action = action.substring(0, endIdx);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,127,final ActionConfig actionConfig = formComponent.configuration.getRuntimeConfiguration().getActionConfig(
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,128,namespace, action);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,129,String actionName = action;
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,130,if (actionConfig != null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,132,ActionMapping mapping = new ActionMapping(action, namespace, actionMethod, formComponent.parameters);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,133,String result = UrlHelper.buildUrl(formComponent.actionMapper.getUriFromActionMapping(mapping),
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,134,formComponent.request, formComponent.response, null);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,135,formComponent.addParameter("action", result);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,139,formComponent.addParameter("actionName", actionName);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,140,try {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,141,Class clazz = formComponent.objectFactory.getClassInstance(actionConfig.getClassName());
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,142,formComponent.addParameter("actionClass", clazz);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,147,formComponent.addParameter("namespace", namespace);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,150,if (formComponent.name == null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,151,formComponent.addParameter("name", action);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,155,if (formComponent.getId() == null  && action!=null ) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,156,formComponent.addParameter("id", formComponent.escape(action));
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,165,if (namespace != null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,166,LOG.warn("No configuration found for the specified action: '" + action + "' in namespace: '" + namespace + "'. Form action defaulting to 'action' attribute's literal value.");
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,169,String result = UrlHelper.buildUrl(action, formComponent.request, formComponent.response, null);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,170,formComponent.addParameter("action", result);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,173,int slash = result.lastIndexOf('/');
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,174,if (slash != -1) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,175,formComponent.addParameter("namespace", result.substring(0, slash));
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,177,formComponent.addParameter("namespace", "");
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,182,String id = formComponent.getId();
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,183,if (id == null) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,184,slash = result.lastIndexOf('/');
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,185,int dot = result.indexOf('.', slash);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,186,if (dot != -1) {
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,187,id = result.substring(slash + 1, dot);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,189,id = result.substring(slash + 1);
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,191,formComponent.addParameter("id", formComponent.escape(id));
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,198,formComponent.evaluateClientSideJsEnablement(actionName, namespace, actionMethod);
core/src/main/java/org/apache/struts2/components/UrlRenderer.java,21,package org.apache.struts2.components;
core/src/main/java/org/apache/struts2/components/UrlRenderer.java,23,import java.io.Writer;
core/src/main/java/org/apache/struts2/components/UrlRenderer.java,30,public interface UrlRenderer {
core/src/main/java/org/apache/struts2/components/UrlRenderer.java,36,void renderUrl(Writer writer, URL urlComponent);
core/src/main/java/org/apache/struts2/components/UrlRenderer.java,42,void renderFormUrl(Form formComponent);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,21,package org.apache.struts2.interceptor.debugging;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,23,import java.beans.IntrospectionException;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,24,import java.io.Writer;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,25,import java.util.Collection;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,26,import java.util.Iterator;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,27,import java.util.List;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,28,import java.util.Map;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,29,import java.util.Set;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,39,class ObjectToHTMLWriter {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,40,private PrettyPrintWriter prettyWriter;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,42,ObjectToHTMLWriter(Writer writer) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,43,this.prettyWriter = new PrettyPrintWriter(writer);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,44,this.prettyWriter.setEscape(false);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,50,prettyWriter.startNode("table");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,51,prettyWriter.addAttribute("class", "debugTable");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,53,if (root instanceof Map) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,54,for (Iterator iterator = ((Map) root).entrySet().iterator(); iterator
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,55,.hasNext();) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,56,Map.Entry property = (Map.Entry) iterator.next();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,57,String key = property.getKey().toString();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,58,Object value = property.getValue();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,59,writeProperty(key, value, expr);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,62,List list = (List) root;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,63,for (int i = 0; i < list.size(); i++) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,64,Object element = list.get(i);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,65,writeProperty(String.valueOf(i), element, expr);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,68,Set set = (Set) root;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,69,for (Iterator iterator = set.iterator(); iterator.hasNext();) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,70,writeProperty("", iterator.next(), expr);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,73,Object[] objects = (Object[]) root;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,74,for (int i = 0; i < objects.length; i++) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,75,writeProperty(String.valueOf(i), objects[i], expr);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,80,for (Map.Entry<String, Object> property : properties.entrySet()) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,81,String name = property.getKey();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,82,Object value = property.getValue();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,85,continue;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,87,writeProperty(name, value, expr);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,91,prettyWriter.endNode();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,94,private void writeProperty(String name, Object value, String expr) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,95,prettyWriter.startNode("tr");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,98,prettyWriter.startNode("td");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,99,prettyWriter.addAttribute("class", "nameColumn");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,100,prettyWriter.setValue(name);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,101,prettyWriter.endNode();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,104,prettyWriter.startNode("td");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,105,if (value != null) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,107,if (value != null &&
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,109,.isArray() && ((Object[]) value).length == 0))) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,110,prettyWriter.addAttribute("class", "emptyCollection");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,111,prettyWriter.setValue("empty");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,113,prettyWriter.addAttribute("class", "valueColumn");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,114,writeValue(name, value, expr);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,117,prettyWriter.addAttribute("class", "nullValue");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,118,prettyWriter.setValue("null");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,120,prettyWriter.endNode();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,123,prettyWriter.startNode("td");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,124,if (value != null) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,125,prettyWriter.addAttribute("class", "typeColumn");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,126,Class clazz = value.getClass();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,127,prettyWriter.setValue(clazz.getName());
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,129,prettyWriter.addAttribute("class", "nullValue");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,130,prettyWriter.setValue("unknown");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,132,prettyWriter.endNode();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,135,prettyWriter.endNode();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,141,private boolean isEmptyMap(Object value) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,142,try {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,143,return value instanceof Map && ((Map) value).isEmpty();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,145,return true;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,152,private boolean isEmptyCollection(Object value) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,153,try {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,154,return value instanceof Collection && ((Collection) value).isEmpty();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,156,return true;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,160,private void writeValue(String name, Object value, String expr) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,161,Class clazz = value.getClass();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,162,if (clazz.isPrimitive() || Number.class.isAssignableFrom(clazz) ||
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,163,clazz.equals(String.class) || Boolean.class.equals(clazz)) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,164,prettyWriter.setValue(String.valueOf(value));
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,166,prettyWriter.startNode("a");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,167,String path = expr.replaceAll("#", "%23") + "[\"" +
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,168,name.replaceAll("#", "%23") + "\"]";
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,169,prettyWriter.addAttribute("onclick", "expand(this, '" + path + "')");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,170,prettyWriter.addAttribute("href", "javascript://nop/");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,171,prettyWriter.setValue("Expand");
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,172,prettyWriter.endNode();
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,21,package org.apache.struts2.views.jsp;
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,23,import org.apache.struts2.components.ContextBean;
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,26,public abstract class ContextBeanTag extends ComponentTagSupport {
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,27,private String var;
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,29,protected void populateParams() {
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,30,super.populateParams();
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,32,ContextBean bean = (ContextBean) component;
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,33,bean.setVar(var);
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,36,public void setVar(String var) {
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,37,this.var = var;
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,44,public void setId(String id) {
core/src/main/java/org/apache/struts2/views/jsp/ContextBeanTag.java,45,setVar(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,18,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,20,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,22,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,23,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,25,import org.apache.struts2.components.ClosingUIBean;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,26,import org.apache.struts2.views.annotations.StrutsTagAttribute;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,27,import org.apache.struts2.views.annotations.StrutsTagSkipInheritance;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,29,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,35,public abstract class AbstractRemoteBean extends ClosingUIBean implements RemoteBean {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,37,protected String href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,38,protected String errorText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,39,protected String executeScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,40,protected String loadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,41,protected String listenTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,42,protected String handler;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,43,protected String formId;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,44,protected String formFilter;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,45,protected String notifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,46,protected String showErrorTransportText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,47,protected String indicator;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,48,protected String showLoadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,49,protected String beforeNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,50,protected String afterNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,51,protected String errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,52,protected String highlightColor;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,53,protected String highlightDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,54,protected String separateScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,55,protected String transport;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,56,protected String parseContent;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,58,public AbstractRemoteBean(ValueStack stack, HttpServletRequest request,
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,59,HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,60,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,63,public void evaluateExtraParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,64,super.evaluateExtraParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,67,addParameter("href", findString(href));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,69,addParameter("errorText", findString(errorText));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,71,addParameter("loadingText", findString(loadingText));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,73,addParameter("executeScripts", findValue(executeScripts, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,75,addParameter("listenTopics", findValue(listenTopics, String.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,77,addParameter("notifyTopics", findValue(notifyTopics, String.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,79,addParameter("handler", findString(handler));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,81,addParameter("formId", findString(formId));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,83,addParameter("formFilter", findString(formFilter));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,85,addParameter("indicator", findString(indicator));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,87,addParameter("showErrorTransportText", findValue(showErrorTransportText, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,88,else
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,89,addParameter("showErrorTransportText", true);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,91,addParameter("showLoadingText", findString(showLoadingText));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,93,addParameter("beforeNotifyTopics", findString(beforeNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,95,addParameter("afterNotifyTopics", findString(afterNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,97,addParameter("errorNotifyTopics", findString(errorNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,99,addParameter("highlightColor", findString(highlightColor));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,101,addParameter("highlightDuration", findString(highlightDuration));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,103,addParameter("separateScripts", findValue(separateScripts, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,105,addParameter("transport", findString(transport));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,107,addParameter("parseContent", findValue(parseContent, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,108,else
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,109,addParameter("parseContent", true);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,111,boolean generateId = !(Boolean)stack.getContext().get(Head.PARSE_CONTENT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,112,addParameter("pushId", generateId);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,113,if ((this.id == null || this.id.length() == 0) && generateId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,114,Random random = new Random();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,115,this.id = "widget_" + Math.abs(random.nextInt());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,116,addParameter("id", this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,122,public void setTheme(String theme) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,123,super.setTheme(theme);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,127,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,128,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,132,public void setListenTopics(String listenTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,133,this.listenTopics = listenTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,137,public void setHref(String href) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,138,this.href = href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,143,public void setErrorText(String errorText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,144,this.errorText = errorText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,148,public void setExecuteScripts(String executeScripts) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,149,this.executeScripts = executeScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,153,public void setLoadingText(String loadingText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,154,this.loadingText = loadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,159,public void setHandler(String handler) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,160,this.handler = handler;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,165,public void setFormFilter(String formFilter) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,166,this.formFilter = formFilter;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,170,public void setFormId(String formId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,171,this.formId = formId;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,175,public void setNotifyTopics(String notifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,176,this.notifyTopics = notifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,181,public void setShowErrorTransportText(String showError) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,182,this.showErrorTransportText = showError;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,186,public void setIndicator(String indicator) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,187,this.indicator = indicator;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,191,public void setShowLoadingText(String showLoadingText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,192,this.showLoadingText = showLoadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,196,public void setCssClass(String cssClass) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,197,super.setCssClass(cssClass);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,201,public void setCssStyle(String cssStyle) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,202,super.setCssStyle(cssStyle);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,206,public void setId(String id) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,207,super.setId(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,211,public void setName(String name) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,212,super.setName(name);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,216,public void setAfterNotifyTopics(String afterNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,217,this.afterNotifyTopics = afterNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,221,public void setBeforeNotifyTopics(String beforeNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,222,this.beforeNotifyTopics = beforeNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,226,public void setErrorNotifyTopics(String errorNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,227,this.errorNotifyTopics = errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,232,public void setHighlightColor(String highlightColor) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,233,this.highlightColor = highlightColor;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,238,public void setHighlightDuration(String highlightDuration) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,239,this.highlightDuration = highlightDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,243,public void setSeparateScripts(String separateScripts) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,244,this.separateScripts = separateScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,248,public void setTransport(String transport) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,249,this.transport = transport;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,253,public void setParseContent(String parseContent) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/AbstractRemoteBean.java,254,this.parseContent = parseContent;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,21,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,23,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,25,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,26,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,28,import org.apache.struts2.components.ComboBox;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,29,import org.apache.struts2.views.annotations.StrutsTag;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,30,import org.apache.struts2.views.annotations.StrutsTagAttribute;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,31,import org.apache.struts2.views.annotations.StrutsTagSkipInheritance;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,33,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,227,public class Autocompleter extends ComboBox {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,228,public static final String TEMPLATE = "autocompleter";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,229,final private static String COMPONENT_NAME = Autocompleter.class.getName();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,231,protected String forceValidOption;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,232,protected String searchType;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,233,protected String autoComplete;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,234,protected String delay;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,235,protected String disabled;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,236,protected String href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,237,protected String dropdownWidth;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,238,protected String dropdownHeight;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,239,protected String formId;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,240,protected String formFilter;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,241,protected String listenTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,242,protected String notifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,243,protected String indicator;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,244,protected String loadOnTextChange;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,245,protected String loadMinimumCount;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,246,protected String showDownArrow;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,247,protected String templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,248,protected String iconPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,249,protected String keyName;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,250,protected String dataFieldName;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,251,protected String beforeNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,252,protected String afterNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,253,protected String errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,254,protected String valueNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,255,protected String resultsLimit;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,256,protected String transport;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,257,protected String preload;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,259,public Autocompleter(ValueStack stack, HttpServletRequest request,
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,260,HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,261,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,264,protected String getDefaultTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,265,return TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,268,public String getComponentName() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,269,return COMPONENT_NAME;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,273,public void evaluateExtraParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,274,super.evaluateExtraParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,277,addParameter("forceValidOption", findValue(forceValidOption,
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,278,Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,279,if (searchType != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,280,String type =  findString(searchType);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,282,addParameter("searchType", type.toUpperCase());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,285,addParameter("autoComplete", findValue(autoComplete, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,287,addParameter("delay", findValue(delay, Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,289,addParameter("disabled", findValue(disabled, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,290,if (href != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,291,addParameter("href", findString(href));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,292,addParameter("mode", "remote");
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,295,addParameter("dropdownHeight", findValue(dropdownHeight, Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,297,addParameter("dropdownWidth", findValue(dropdownWidth, Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,299,addParameter("formFilter", findString(formFilter));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,301,addParameter("formId", findString(formId));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,303,addParameter("listenTopics", findString(listenTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,305,addParameter("notifyTopics", findString(notifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,307,addParameter("indicator", findString(indicator));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,309,addParameter("loadOnTextChange", findValue(loadOnTextChange, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,311,addParameter("loadMinimumCount", findValue(loadMinimumCount, Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,313,addParameter("showDownArrow", findValue(showDownArrow, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,314,else
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,315,addParameter("showDownArrow", Boolean.TRUE);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,317,addParameter("templateCssPath", findString(templateCssPath));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,319,addParameter("iconPath", findString(iconPath));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,321,addParameter("dataFieldName", findString(dataFieldName));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,323,addParameter("keyName", findString(keyName));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,324,else {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,325,keyName = name + "Key";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,326,addParameter("keyName", findString(keyName));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,329,addParameter("transport", findString(transport));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,331,addParameter("preload", findValue(preload, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,337,addParameter("beforeNotifyTopics", findString(beforeNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,339,addParameter("afterNotifyTopics", findString(afterNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,341,addParameter("errorNotifyTopics", findString(errorNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,343,addParameter("valueNotifyTopics", findString(valueNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,345,addParameter("searchLimit", findString(resultsLimit));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,347,boolean generateId = !(Boolean)stack.getContext().get(Head.PARSE_CONTENT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,348,addParameter("pushId", generateId);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,349,if ((this.id == null || this.id.length() == 0) && generateId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,350,Random random = new Random();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,351,this.id = "widget_" + Math.abs(random.nextInt());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,352,addParameter("id", this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,358,public void setTheme(String theme) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,359,super.setTheme(theme);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,363,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,364,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,367,protected Object findListValue() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,368,return (list != null) ? findValue(list, Object.class) : null;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,372,public void setAutoComplete(String autoComplete) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,373,this.autoComplete = autoComplete;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,377,public void setDisabled(String disabled) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,378,this.disabled = disabled;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,382,public void setForceValidOption(String forceValidOption) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,383,this.forceValidOption = forceValidOption;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,387,public void setHref(String href) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,388,this.href = href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,392,public void setDelay(String searchDelay) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,393,this.delay = searchDelay;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,398,public void setSearchType(String searchType) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,399,this.searchType = searchType;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,403,public void setDropdownHeight(String height) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,404,this.dropdownHeight = height;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,408,public void setDropdownWidth(String width) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,409,this.dropdownWidth = width;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,413,public void setFormFilter(String formFilter) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,414,this.formFilter = formFilter;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,418,public void setFormId(String formId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,419,this.formId = formId;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,423,public void setListenTopics(String listenTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,424,this.listenTopics = listenTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,428,public void setNotifyTopics(String onValueChangedPublishTopic) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,429,this.notifyTopics = onValueChangedPublishTopic;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,433,public void setIndicator(String indicator) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,434,this.indicator = indicator;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,438,public void setLoadMinimumCount(String loadMinimumCount) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,439,this.loadMinimumCount = loadMinimumCount;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,443,public void setLoadOnTextChange(String loadOnType) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,444,this.loadOnTextChange = loadOnType;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,448,public void setShowDownArrow(String showDownArrow) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,449,this.showDownArrow = showDownArrow;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,454,public void setList(String list) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,455,super.setList(list);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,459,public void setTemplateCssPath(String templateCssPath) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,460,this.templateCssPath = templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,464,public void setIconPath(String iconPath) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,465,this.iconPath = iconPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,469,public void setKeyName(String keyName) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,470,this.keyName = keyName;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,474,public void setDataFieldName(String dataFieldName) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,475,this.dataFieldName = dataFieldName;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,479,public void setCssClass(String cssClass) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,480,super.setCssClass(cssClass);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,484,public void setCssStyle(String cssStyle) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,485,super.setCssStyle(cssStyle);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,489,public void setId(String id) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,490,super.setId(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,494,public void setName(String name) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,495,super.setName(name);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,499,public void setValue(String arg0) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,500,super.setValue(arg0);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,504,public void setAfterNotifyTopics(String afterNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,505,this.afterNotifyTopics = afterNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,509,public void setBeforeNotifyTopics(String beforeNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,510,this.beforeNotifyTopics = beforeNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,514,public void setErrorNotifyTopics(String errorNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,515,this.errorNotifyTopics = errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,519,public void setValueNotifyTopics(String valueNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,520,this.valueNotifyTopics = valueNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,524,public void setResultsLimit(String resultsLimit) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,525,this.resultsLimit = resultsLimit;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,529,public void setTransport(String transport) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,530,this.transport = transport;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,534,public void setPreload(String preload) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,535,this.preload = preload;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,21,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,23,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,24,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,26,import org.apache.struts2.views.annotations.StrutsTag;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,27,import org.apache.struts2.views.annotations.StrutsTagAttribute;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,28,import org.apache.struts2.views.annotations.StrutsTagSkipInheritance;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,30,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,122,public class Bind extends AbstractValidateBean {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,123,public static final String TEMPLATE = "bind-close";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,124,public static final String OPEN_TEMPLATE = "bind";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,126,protected String targets;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,127,protected String sources;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,128,protected String events;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,130,public Bind(ValueStack stack, HttpServletRequest request, HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,131,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,134,public String getDefaultOpenTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,135,return OPEN_TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,138,protected String getDefaultTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,139,return TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,142,public void evaluateExtraParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,143,super.evaluateExtraParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,146,addParameter("targets", findString(targets));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,148,addParameter("sources", findString(sources));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,150,addParameter("events", findString(events));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,154,public void setEvents(String events) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,155,this.events = events;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,159,public void setSources(String sources) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,160,this.sources = sources;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,164,public void setTargets(String targets) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,165,this.targets = targets;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,170,public void setTheme(String theme) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,171,super.setTheme(theme);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,175,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,176,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,182,public void setListenTopics(String listenTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,183,this.listenTopics = listenTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,187,public void setHref(String href) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,188,this.href = href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,193,public void setErrorText(String errorText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,194,this.errorText = errorText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,198,public void setExecuteScripts(String executeScripts) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,199,this.executeScripts = executeScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,203,public void setLoadingText(String loadingText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,204,this.loadingText = loadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,209,public void setHandler(String handler) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,210,this.handler = handler;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,215,public void setFormFilter(String formFilter) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,216,this.formFilter = formFilter;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,220,public void setFormId(String formId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,221,this.formId = formId;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,225,public void setNotifyTopics(String notifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,226,this.notifyTopics = notifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,230,public void setShowErrorTransportText(String showError) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,231,this.showErrorTransportText = showError;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,235,public void setIndicator(String indicator) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,236,this.indicator = indicator;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,240,public void setShowLoadingText(String showLoadingText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,241,this.showLoadingText = showLoadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,245,public void setCssClass(String cssClass) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,246,super.setCssClass(cssClass);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,250,public void setCssStyle(String cssStyle) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,251,super.setCssStyle(cssStyle);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,255,public void setName(String name) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,256,super.setName(name);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,260,public void setAfterNotifyTopics(String afterNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,261,this.afterNotifyTopics = afterNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,265,public void setBeforeNotifyTopics(String beforeNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,266,this.beforeNotifyTopics = beforeNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,270,public void setErrorNotifyTopics(String errorNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,271,this.errorNotifyTopics = errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,275,public void setId(String id) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,276,super.setId(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,281,public void setHighlightColor(String highlightColor) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,282,this.highlightColor = highlightColor;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,287,public void setHighlightDuration(String highlightDuration) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,288,this.highlightDuration = highlightDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,293,public void setValidate(String validate) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,294,this.validate = validate;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,299,public void setAjaxAfterValidation(String ajaxAfterValidation) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,300,this.ajaxAfterValidation = ajaxAfterValidation;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,304,public void setSeparateScripts(String separateScripts) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,305,this.separateScripts = separateScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,309,public void setTransport(String transport) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Bind.java,310,this.transport = transport;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,21,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,23,import java.text.DateFormat;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,24,import java.text.SimpleDateFormat;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,25,import java.util.ArrayList;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,26,import java.util.Calendar;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,27,import java.util.Date;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,28,import java.util.List;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,29,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,31,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,32,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,36,import org.apache.struts2.components.UIBean;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,37,import org.apache.struts2.views.annotations.StrutsTag;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,38,import org.apache.struts2.views.annotations.StrutsTagAttribute;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,39,import org.apache.struts2.views.annotations.StrutsTagSkipInheritance;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,41,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,184,public class DateTimePicker extends UIBean {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,186,final public static String TEMPLATE = "datetimepicker";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,187,final private static SimpleDateFormat RFC3339_FORMAT = new SimpleDateFormat(
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,191,protected String iconPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,192,protected String formatLength;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,193,protected String displayFormat;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,194,protected String toggleType;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,195,protected String toggleDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,196,protected String type;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,198,protected String displayWeeks;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,199,protected String adjustWeeks;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,200,protected String startDate;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,201,protected String endDate;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,202,protected String weekStartsOn;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,203,protected String staticDisplay;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,204,protected String dayWidth;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,205,protected String language;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,206,protected String templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,207,protected String valueNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,209,public DateTimePicker(ValueStack stack, HttpServletRequest request, HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,210,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,213,protected String getDefaultTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,214,return TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,217,public void evaluateParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,218,super.evaluateParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,221,addParameter("displayFormat", findString(displayFormat));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,223,addParameter("displayWeeks", findString(displayWeeks));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,225,addParameter("adjustWeeks", findValue(adjustWeeks, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,227,addParameter("startDate", format(findValue(startDate)));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,229,addParameter("endDate", format(findValue(endDate)));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,231,addParameter("weekStartsOn", findString(weekStartsOn));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,233,addParameter("staticDisplay", findValue(staticDisplay, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,235,addParameter("dayWidth", findValue(dayWidth, Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,237,addParameter("language", findString(language));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,239,addParameter("value", format(findValue(value)));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,242,addParameter("iconPath", findString(iconPath));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,244,addParameter("formatLength", findString(formatLength));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,246,addParameter("toggleType", findString(toggleType));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,248,addParameter("toggleDuration", findValue(toggleDuration,
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,249,Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,251,addParameter("type", findString(type));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,252,else
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,253,addParameter("type", "date");
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,255,addParameter("templateCssPath", findString(templateCssPath));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,257,addParameter("valueNotifyTopics", findString(valueNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,260,if(parameters.containsKey("value")) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,261,parameters.put("nameValue", parameters.get("value"));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,263,if(name != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,264,addParameter("nameValue", format(findValue(name)));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,268,boolean generateId = !(Boolean)stack.getContext().get(Head.PARSE_CONTENT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,269,addParameter("pushId", generateId);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,270,if ((this.id == null || this.id.length() == 0) && generateId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,271,Random random = new Random();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,272,this.id = "widget_" + Math.abs(random.nextInt());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,273,addParameter("id", this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,279,public void setTheme(String theme) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,280,super.setTheme(theme);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,284,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,285,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,290,public void setAdjustWeeks(String adjustWeeks) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,291,this.adjustWeeks = adjustWeeks;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,295,public void setDayWidth(String dayWidth) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,296,this.dayWidth = dayWidth;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,300,public void setDisplayWeeks(String displayWeeks) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,301,this.displayWeeks = displayWeeks;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,305,public void setEndDate(String endDate) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,306,this.endDate = endDate;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,310,public void setStartDate(String startDate) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,311,this.startDate = startDate;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,315,public void setStaticDisplay(String staticDisplay) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,316,this.staticDisplay = staticDisplay;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,320,public void setWeekStartsOn(String weekStartsOn) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,321,this.weekStartsOn = weekStartsOn;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,325,public void setLanguage(String language) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,326,this.language = language;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,330,public void setDisplayFormat(String displayFormat) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,331,this.displayFormat = displayFormat;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,336,public void setFormatLength(String formatLength) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,337,this.formatLength = formatLength;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,341,public void setIconPath(String iconPath) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,342,this.iconPath = iconPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,346,public void setToggleDuration(String toggleDuration) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,347,this.toggleDuration = toggleDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,352,public void setType(String type) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,353,this.type = type;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,357,public void setToggleType(String toggleType) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,358,this.toggleType = toggleType;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,362,public void setTemplateCssPath(String templateCssPath) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,363,this.templateCssPath = templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,367,public void setValue(String arg0) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,368,super.setValue(arg0);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,372,public void setValueNotifyTopics(String valueNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,373,this.valueNotifyTopics = valueNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,376,private String format(Object obj) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,378,return null;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,380,if(obj instanceof Date) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,381,return RFC3339_FORMAT.format((Date) obj);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,383,return RFC3339_FORMAT.format(((Calendar) obj).getTime());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,385,else {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,387,String dateStr = obj.toString();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,389,return RFC3339_FORMAT.format(new Date());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,392,Date date = null;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,394,List<DateFormat> formats = new ArrayList<DateFormat>();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,395,formats.add(RFC3339_FORMAT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,396,formats.add(SimpleDateFormat.getTimeInstance(DateFormat.SHORT));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,397,formats.add(SimpleDateFormat.getDateInstance(DateFormat.SHORT));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,398,formats.add(SimpleDateFormat.getDateInstance(DateFormat.MEDIUM));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,399,formats.add(SimpleDateFormat.getDateInstance(DateFormat.FULL));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,400,formats.add(SimpleDateFormat.getDateInstance(DateFormat.LONG));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,401,if (this.displayFormat != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,402,try {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,403,SimpleDateFormat displayFormat = new SimpleDateFormat(
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,404,(String) getParameters().get("displayFormat"));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,405,formats.add(displayFormat);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,412,for (DateFormat format : formats) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,413,try {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,414,date = format.parse(dateStr);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,416,return RFC3339_FORMAT.format(date);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,424,LOG.debug("Unable to parse date " + dateStr);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/DateTimePicker.java,425,return dateStr;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,21,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,23,import java.io.Writer;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,24,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,26,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,27,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,31,import org.apache.struts2.components.Form;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,32,import org.apache.struts2.components.FormButton;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,33,import org.apache.struts2.views.annotations.StrutsTag;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,34,import org.apache.struts2.views.annotations.StrutsTagAttribute;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,35,import org.apache.struts2.views.annotations.StrutsTagSkipInheritance;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,37,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,151,public class Submit extends FormButton implements RemoteBean {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,155,final public static String TEMPLATE = "submit";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,157,protected String href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,158,protected String errorText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,159,protected String executeScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,160,protected String loadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,161,protected String listenTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,162,protected String handler;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,163,protected String formId;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,164,protected String formFilter;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,165,protected String src;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,166,protected String notifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,167,protected String showErrorTransportText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,168,protected String indicator;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,169,protected String showLoadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,170,protected String targets;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,171,protected String beforeNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,172,protected String afterNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,173,protected String errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,174,protected String highlightColor;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,175,protected String highlightDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,176,protected String validate;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,177,protected String ajaxAfterValidation;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,178,protected String separateScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,179,protected String transport;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,180,protected String parseContent;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,182,public Submit(ValueStack stack, HttpServletRequest request, HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,183,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,186,protected String getDefaultTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,187,return TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,190,public void evaluateParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,191,if ((key == null) && (value == null)) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,192,value = "Submit";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,195,if (((key != null)) && (value == null)) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,196,this.value = "%{getText('"+key +"')}";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,199,super.evaluateParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,202,public void evaluateExtraParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,203,super.evaluateExtraParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,206,addParameter("href", findString(href));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,208,addParameter("errorText", findString(errorText));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,210,addParameter("loadingText", findString(loadingText));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,212,addParameter("executeScripts", findValue(executeScripts, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,214,addParameter("listenTopics", findString(listenTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,216,addParameter("notifyTopics", findString(notifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,218,addParameter("handler", findString(handler));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,220,addParameter("formId", findString(formId));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,222,addParameter("formFilter", findString(formFilter));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,224,addParameter("src", findString(src));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,226,addParameter("indicator", findString(indicator));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,228,addParameter("targets", findString(targets));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,230,addParameter("showLoadingText", findString(showLoadingText));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,232,addParameter("showLoadingText", findString(showLoadingText));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,234,addParameter("beforeNotifyTopics", findString(beforeNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,236,addParameter("afterNotifyTopics", findString(afterNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,238,addParameter("errorNotifyTopics", findString(errorNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,240,addParameter("highlightColor", findString(highlightColor));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,242,addParameter("highlightDuration", findString(highlightDuration));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,244,addParameter("separateScripts", findValue(separateScripts, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,246,addParameter("transport", findString(transport));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,248,addParameter("parseContent", findValue(parseContent, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,250,Boolean validateValue = false;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,251,if (validate != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,252,validateValue = (Boolean) findValue(validate, Boolean.class);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,253,addParameter("validate", validateValue);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,256,Form form = (Form) findAncestor(Form.class);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,258,addParameter("parentTheme", form.getTheme());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,261,addParameter("ajaxAfterValidation", findValue(ajaxAfterValidation, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,263,boolean generateId = !(Boolean)stack.getContext().get(Head.PARSE_CONTENT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,264,addParameter("pushId", generateId);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,265,if ((this.id == null || this.id.length() == 0) && generateId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,266,Random random = new Random();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,267,this.id = "widget_" + Math.abs(random.nextInt());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,268,addParameter("id", this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,274,public void setTheme(String theme) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,275,super.setTheme(theme);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,279,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,280,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,288,protected boolean supportsImageType() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,289,return true;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,295,public boolean end(Writer writer, String body) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,296,evaluateParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,297,try {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,298,addParameter("body", body);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,300,mergeTemplate(writer, buildTemplateName(template, getDefaultTemplate()));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,302,LOG.error("error when rendering", e);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,304,finally {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,305,popComponentStack();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,308,return false;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,312,public void setListenTopics(String listenTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,313,this.listenTopics = listenTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,317,public void setHref(String href) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,318,this.href = href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,322,public void setErrorText(String errorText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,323,this.errorText = errorText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,327,public void setExecuteScripts(String executeScripts) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,328,this.executeScripts = executeScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,332,public void setLoadingText(String loadingText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,333,this.loadingText = loadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,337,public void setHandler(String handler) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,338,this.handler = handler;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,342,public void setFormFilter(String formFilter) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,343,this.formFilter = formFilter;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,347,public void setFormId(String formId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,348,this.formId = formId;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,352,public void setSrc(String src) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,353,this.src = src;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,357,public void setTargets(String targets) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,358,this.targets = targets;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,362,public void setNotifyTopics(String notifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,363,this.notifyTopics = notifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,367,public void setShowErrorTransportText(String showErrorTransportText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,368,this.showErrorTransportText = showErrorTransportText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,372,public void setIndicator(String indicator) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,373,this.indicator = indicator;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,377,public void setShowLoadingText(String showLoadingText) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,378,this.showLoadingText = showLoadingText;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,382,public void setCssClass(String cssClass) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,383,super.setCssClass(cssClass);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,387,public void setCssStyle(String cssStyle) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,388,super.setCssStyle(cssStyle);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,392,public void setId(String id) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,393,super.setId(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,397,public void setName(String name) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,398,super.setName(name);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,403,public void setType(String type) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,404,super.setType(type);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,408,public void setValue(String value) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,409,super.setValue(value);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,413,public void setLabel(String label) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,414,super.setLabel(label);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,418,public void setAfterNotifyTopics(String afterNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,419,this.afterNotifyTopics = afterNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,423,public void setBeforeNotifyTopics(String beforeNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,424,this.beforeNotifyTopics = beforeNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,428,public void setErrorNotifyTopics(String errorNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,429,this.errorNotifyTopics = errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,434,public void setHighlightColor(String highlightColor) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,435,this.highlightColor = highlightColor;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,440,public void setHighlightDuration(String highlightDuration) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,441,this.highlightDuration = highlightDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,446,public void setValidate(String validate) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,447,this.validate = validate;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,452,public void setAjaxAfterValidation(String ajaxAfterValidation) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,453,this.ajaxAfterValidation = ajaxAfterValidation;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,457,public void setAction(String action) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,458,super.setAction(action);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,462,public void setSeparateScripts(String separateScripts) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,463,this.separateScripts = separateScripts;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,467,public void setTransport(String transport) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,468,this.transport = transport;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,472,public void setParseContent(String parseContent) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Submit.java,473,this.parseContent = parseContent;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,21,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,23,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,25,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,26,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,28,import org.apache.struts2.components.ClosingUIBean;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,29,import org.apache.struts2.views.annotations.StrutsTag;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,30,import org.apache.struts2.views.annotations.StrutsTagAttribute;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,31,import org.apache.struts2.views.annotations.StrutsTagSkipInheritance;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,33,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,90,public class TabbedPanel extends ClosingUIBean {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,91,public static final String TEMPLATE = "tabbedpanel";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,92,public static final String TEMPLATE_CLOSE = "tabbedpanel-close";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,93,final private static String COMPONENT_NAME = TabbedPanel.class.getName();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,95,protected String selectedTab;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,96,protected String closeButton;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,97,protected String doLayout ;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,98,protected String templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,99,protected String beforeSelectTabNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,100,protected String afterSelectTabNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,101,protected String disabledTabCssClass;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,102,protected String useSelectedTabCookie;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,104,public TabbedPanel(ValueStack stack, HttpServletRequest request, HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,105,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,109,protected void evaluateExtraParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,110,super.evaluateExtraParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,113,addParameter("selectedTab", findString(selectedTab));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,115,addParameter("closeButton", findString(closeButton));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,116,addParameter("doLayout", doLayout != null ? findValue(doLayout, Boolean.class) : Boolean.FALSE);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,117,if (labelPosition != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,120,labelPosition = "left-h";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,122,labelPosition = "right-h";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,123,addParameter("labelPosition", null);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,124,addParameter("labelPosition", labelPosition);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,127,addParameter("templateCssPath", findString(templateCssPath));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,129,addParameter("beforeSelectTabNotifyTopics", findString(beforeSelectTabNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,131,addParameter("afterSelectTabNotifyTopics", findString(afterSelectTabNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,133,addParameter("disabledTabCssClass", findString(disabledTabCssClass));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,134,if(useSelectedTabCookie != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,135,addParameter("useSelectedTabCookie", findString(useSelectedTabCookie));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,138,boolean generateId = !(Boolean)stack.getContext().get(Head.PARSE_CONTENT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,139,addParameter("pushId", generateId);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,140,if ((this.id == null || this.id.length() == 0) && generateId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,141,Random random = new Random();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,142,this.id = "widget_" + Math.abs(random.nextInt());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,143,addParameter("id", this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,149,public void setTheme(String theme) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,150,super.setTheme(theme);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,154,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,155,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,158,public String getDefaultOpenTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,159,return TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,162,protected String getDefaultTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,163,return TEMPLATE_CLOSE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,166,public String getComponentName() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,167,return COMPONENT_NAME;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,171,public void setId(String id) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,173,super.setId(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,178,public void setSelectedTab(String selectedTab) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,179,this.selectedTab = selectedTab;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,183,public void setCloseButton(String closeButton) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,184,this.closeButton = closeButton;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,188,public void setDoLayout(String doLayout) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,189,this.doLayout = doLayout;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,193,public void setTemplateCssPath(String templateCssPath) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,194,this.templateCssPath = templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,202,public void setBeforeSelectTabNotifyTopics(String selectedTabNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,203,this.beforeSelectTabNotifyTopics = selectedTabNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,208,public void setAfterSelectTabNotifyTopics(String afterSelectTabNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,209,this.afterSelectTabNotifyTopics = afterSelectTabNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,213,public void setDisabledTabCssClass(String disabledTabCssClass) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,214,this.disabledTabCssClass = disabledTabCssClass;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,220,public void setUseSelectedTabCookie( String useSelectedTabCookie ) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,221,this.useSelectedTabCookie = useSelectedTabCookie;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,21,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,23,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,25,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,26,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,28,import org.apache.struts2.views.annotations.StrutsTag;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,30,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,37,public class TextArea extends org.apache.struts2.components.TextArea {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,39,public TextArea(ValueStack stack, HttpServletRequest request,
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,40,HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,41,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,44,public void evaluateExtraParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,45,super.evaluateExtraParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,47,boolean generateId = !(Boolean)stack.getContext().get(Head.PARSE_CONTENT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,48,addParameter("pushId", generateId);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,49,if ((this.id == null || this.id.length() == 0) && generateId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,50,Random random = new Random();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,51,this.id = "widget_" + Math.abs(random.nextInt());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,52,addParameter("id", this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,57,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TextArea.java,58,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,21,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,23,import java.io.Writer;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,24,import java.util.ArrayList;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,25,import java.util.List;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,26,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,28,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,29,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,31,import org.apache.struts2.components.ClosingUIBean;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,32,import org.apache.struts2.views.annotations.StrutsTag;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,33,import org.apache.struts2.views.annotations.StrutsTagAttribute;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,34,import org.apache.struts2.views.annotations.StrutsTagSkipInheritance;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,36,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,118,public class Tree extends ClosingUIBean {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,120,private static final String TEMPLATE = "tree-close";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,121,private static final String OPEN_TEMPLATE = "tree";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,123,protected String toggle;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,124,protected String selectedNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,125,protected String expandedNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,126,protected String collapsedNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,127,protected String rootNodeAttr;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,128,protected String childCollectionProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,129,protected String nodeTitleProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,130,protected String nodeIdProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,131,protected String showRootGrid;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,133,protected String showGrid;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,134,protected String blankIconSrc;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,135,protected String gridIconSrcL;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,136,protected String gridIconSrcV;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,137,protected String gridIconSrcP;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,138,protected String gridIconSrcC;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,139,protected String gridIconSrcX;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,140,protected String gridIconSrcY;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,141,protected String expandIconSrcPlus;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,142,protected String expandIconSrcMinus;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,143,protected String iconWidth;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,144,protected String iconHeight;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,145,protected String toggleDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,146,protected String templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,147,protected String href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,148,protected String errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,150,private List<String> childrenIds;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,152,public Tree(ValueStack stack, HttpServletRequest request, HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,153,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,156,public boolean start(Writer writer) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,157,boolean result = super.start(writer);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,159,if (this.label == null && (href == null)) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,163,|| (nodeIdProperty == null)) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,164,fieldError("label","The TreeTag requires either a value for 'label' or 'href' or ALL of 'rootNode', " +
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,168,return result;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,171,protected void evaluateExtraParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,172,super.evaluateExtraParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,174,if (toggle != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,175,addParameter("toggle", findString(toggle));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,177,addParameter("toggle", "fade");
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,180,if (selectedNotifyTopics != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,181,addParameter("selectedNotifyTopics", findString(selectedNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,184,if (expandedNotifyTopics != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,185,addParameter("expandedNotifyTopics", findString(expandedNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,188,if (collapsedNotifyTopics != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,189,addParameter("collapsedNotifyTopics", findString(collapsedNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,192,if (rootNodeAttr != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,193,addParameter("rootNode", findValue(rootNodeAttr));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,196,if (childCollectionProperty != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,197,addParameter("childCollectionProperty", findString(childCollectionProperty));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,200,if (nodeTitleProperty != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,201,addParameter("nodeTitleProperty", findString(nodeTitleProperty));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,204,if (nodeIdProperty != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,205,addParameter("nodeIdProperty", findString(nodeIdProperty));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,208,if (showRootGrid != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,209,addParameter("showRootGrid", findValue(showRootGrid, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,213,if (showGrid != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,214,addParameter("showGrid", findValue(showGrid, Boolean.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,217,if (blankIconSrc != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,218,addParameter("blankIconSrc", findString(blankIconSrc));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,221,if (gridIconSrcL != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,222,addParameter("gridIconSrcL", findString(gridIconSrcL));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,225,if (gridIconSrcV != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,226,addParameter("gridIconSrcV", findString(gridIconSrcV));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,229,if (gridIconSrcP != null)  {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,230,addParameter("gridIconSrcP", findString(gridIconSrcP));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,233,if (gridIconSrcC != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,234,addParameter("gridIconSrcC", findString(gridIconSrcC));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,237,if (gridIconSrcX != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,238,addParameter("gridIconSrcX", findString(gridIconSrcX));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,241,if (gridIconSrcY != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,242,addParameter("gridIconSrcY", findString(gridIconSrcY));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,245,if (expandIconSrcPlus != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,246,addParameter("expandIconSrcPlus", findString(expandIconSrcPlus));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,249,if (expandIconSrcMinus != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,250,addParameter("expandIconSrcMinus", findString(expandIconSrcMinus));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,253,if (iconWidth != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,254,addParameter("iconWidth", findValue(iconWidth, Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,256,if (iconHeight != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,257,addParameter("iconHeight", findValue(iconHeight, Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,259,if (toggleDuration != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,260,addParameter("toggleDuration", findValue(toggleDuration, Integer.class));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,262,if (templateCssPath != null) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,263,addParameter("templateCssPath", findString(templateCssPath));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,266,addParameter("href", findString(href));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,268,addParameter("errorNotifyTopics", findString(errorNotifyTopics));
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,270,boolean generateId = !(Boolean)stack.getContext().get(Head.PARSE_CONTENT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,271,addParameter("pushId", generateId);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,272,if ((this.id == null || this.id.length() == 0) && generateId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,273,Random random = new Random();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,274,this.id = "widget_" + Math.abs(random.nextInt());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,275,addParameter("id", this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,279,addParameter("childrenIds", this.childrenIds);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,282,public void addChildrenId(String id) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,284,this.childrenIds = new ArrayList<String>();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,285,this.childrenIds.add(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,290,public void setTheme(String theme) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,291,super.setTheme(theme);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,295,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,296,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,299,public String getDefaultOpenTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,300,return OPEN_TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,303,protected String getDefaultTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,304,return TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,307,public String getToggle() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,308,return toggle;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,312,public void setToggle(String toggle) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,313,this.toggle = toggle;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,317,public void setTreeSelectedTopic(String selectedNotifyTopic) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,318,this.selectedNotifyTopics = selectedNotifyTopic;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,322,public void setTreeExpandedTopics(String expandedNotifyTopic) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,323,this.expandedNotifyTopics = expandedNotifyTopic;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,327,public void setTreeCollapsedTopics(String collapsedNotifyTopic) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,328,this.collapsedNotifyTopics = collapsedNotifyTopic;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,331,public String getRootNode() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,332,return rootNodeAttr;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,336,public void setRootNode(String rootNode) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,337,this.rootNodeAttr = rootNode;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,340,public String getChildCollectionProperty() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,341,return childCollectionProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,345,public void setChildCollectionProperty(String childCollectionProperty) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,346,this.childCollectionProperty = childCollectionProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,349,public String getNodeTitleProperty() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,350,return nodeTitleProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,354,public void setNodeTitleProperty(String nodeTitleProperty) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,355,this.nodeTitleProperty = nodeTitleProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,358,public String getNodeIdProperty() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,359,return nodeIdProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,363,public void setNodeIdProperty(String nodeIdProperty) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,364,this.nodeIdProperty = nodeIdProperty;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,368,public void setShowRootGrid(String showRootGrid) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,369,this.showRootGrid = showRootGrid;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,372,public String getShowRootGrid() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,373,return showRootGrid;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,376,public String getBlankIconSrc() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,377,return blankIconSrc;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,381,public void setBlankIconSrc(String blankIconSrc) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,382,this.blankIconSrc = blankIconSrc;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,385,public String getExpandIconSrcMinus() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,386,return expandIconSrcMinus;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,390,public void setExpandIconSrcMinus(String expandIconSrcMinus) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,391,this.expandIconSrcMinus = expandIconSrcMinus;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,394,public String getExpandIconSrcPlus() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,395,return expandIconSrcPlus;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,399,public void setExpandIconSrcPlus(String expandIconSrcPlus) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,400,this.expandIconSrcPlus = expandIconSrcPlus;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,403,public String getGridIconSrcC() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,404,return gridIconSrcC;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,408,public void setGridIconSrcC(String gridIconSrcC) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,409,this.gridIconSrcC = gridIconSrcC;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,412,public String getGridIconSrcL() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,413,return gridIconSrcL;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,418,public void setGridIconSrcL(String gridIconSrcL) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,419,this.gridIconSrcL = gridIconSrcL;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,422,public String getGridIconSrcP() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,423,return gridIconSrcP;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,427,public void setGridIconSrcP(String gridIconSrcP) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,428,this.gridIconSrcP = gridIconSrcP;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,431,public String getGridIconSrcV() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,432,return gridIconSrcV;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,436,public void setGridIconSrcV(String gridIconSrcV) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,437,this.gridIconSrcV = gridIconSrcV;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,440,public String getGridIconSrcX() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,441,return gridIconSrcX;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,445,public void setGridIconSrcX(String gridIconSrcX) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,446,this.gridIconSrcX = gridIconSrcX;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,449,public String getGridIconSrcY() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,450,return gridIconSrcY;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,454,public void setGridIconSrcY(String gridIconSrcY) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,455,this.gridIconSrcY = gridIconSrcY;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,458,public String getIconHeight() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,459,return iconHeight;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,464,public void setIconHeight(String iconHeight) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,465,this.iconHeight = iconHeight;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,468,public String getIconWidth() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,469,return iconWidth;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,473,public void setIconWidth(String iconWidth) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,474,this.iconWidth = iconWidth;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,479,public String getTemplateCssPath() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,480,return templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,484,public void setTemplateCssPath(String templateCssPath) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,485,this.templateCssPath = templateCssPath;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,488,public String getToggleDuration() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,489,return toggleDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,493,public void setToggleDuration(String toggleDuration) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,494,this.toggleDuration = toggleDuration;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,497,public String getShowGrid() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,498,return showGrid;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,502,public void setShowGrid(String showGrid) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,503,this.showGrid = showGrid;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,507,public void setCssClass(String cssClass) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,508,super.setCssClass(cssClass);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,512,public void setCssStyle(String cssStyle) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,513,super.setCssStyle(cssStyle);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,517,public void setId(String id) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,518,super.setId(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,522,public void setName(String name) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,523,super.setName(name);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,528,public void setCollapsedNotifyTopics(String collapsedNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,529,this.collapsedNotifyTopics = collapsedNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,534,public void setExpandedNotifyTopics(String expandedNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,535,this.expandedNotifyTopics= expandedNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,540,public void setSelectedNotifyTopics(String selectedNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,541,this.selectedNotifyTopics = selectedNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,546,public void setHref(String href) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,547,this.href = href;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,552,public void setErrorNotifyTopics(String errorNotifyTopics) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Tree.java,553,this.errorNotifyTopics = errorNotifyTopics;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,21,package org.apache.struts2.dojo.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,23,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,25,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,26,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,28,import org.apache.struts2.components.ClosingUIBean;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,29,import org.apache.struts2.views.annotations.StrutsTag;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,30,import org.apache.struts2.views.annotations.StrutsTagAttribute;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,31,import org.apache.struts2.views.annotations.StrutsTagSkipInheritance;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,33,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,87,public class TreeNode extends ClosingUIBean {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,88,private static final String TEMPLATE = "treenode-close";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,89,private static final String OPEN_TEMPLATE = "treenode";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,91,public TreeNode(ValueStack stack, HttpServletRequest request, HttpServletResponse response) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,92,super(stack, request, response);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,97,public void setTheme(String theme) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,98,super.setTheme(theme);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,102,public String getTheme() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,103,return "ajax";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,106,public String getDefaultOpenTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,107,return OPEN_TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,110,protected String getDefaultTemplate() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,111,return TEMPLATE;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,114,protected void evaluateExtraParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,115,super.evaluateExtraParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,117,boolean generateId = !(Boolean)stack.getContext().get(Head.PARSE_CONTENT);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,118,addParameter("pushId", generateId);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,119,if ((this.id == null || this.id.length() == 0) && generateId) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,120,Random random = new Random();
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,121,this.id = "widget_" + Math.abs(random.nextInt());
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,122,addParameter("id", this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,125,Tree parentTree = (Tree) findAncestor(Tree.class);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,126,parentTree.addChildrenId(this.id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,130,public void setLabel(String label) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,131,super.setLabel(label);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,135,public void setCssClass(String cssClass) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,136,super.setCssClass(cssClass);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,140,public void setCssStyle(String cssStyle) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,141,super.setCssStyle(cssStyle);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,145,public void setId(String id) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,146,super.setId(id);
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,150,public void setName(String name) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TreeNode.java,151,super.setName(name);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,18,package org.apache.struts2.dojo.views.freemarker.tags;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,20,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,21,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,23,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,24,import org.apache.struts2.dojo.components.Anchor;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,25,import org.apache.struts2.views.freemarker.tags.TagModel;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,27,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,32,public class AnchorModel extends TagModel {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,34,public AnchorModel(ValueStack stack, HttpServletRequest req, HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,35,super(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,39,protected Component getBean() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/AnchorModel.java,40,return new Anchor(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,21,package org.apache.struts2.dojo.views.freemarker.tags;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,23,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,24,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,26,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,27,import org.apache.struts2.dojo.components.Bind;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,28,import org.apache.struts2.views.freemarker.tags.TagModel;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,30,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,35,public class BindModel extends TagModel {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,36,public BindModel(ValueStack stack, HttpServletRequest req, HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,37,super(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,40,protected Component getBean() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/BindModel.java,41,return new Bind(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,18,package org.apache.struts2.dojo.views.freemarker.tags;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,20,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,21,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,23,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,24,import org.apache.struts2.dojo.components.Div;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,25,import org.apache.struts2.views.freemarker.tags.TagModel;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,27,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,33,public class DivModel extends TagModel {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,35,public DivModel(ValueStack stack, HttpServletRequest req, HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,36,super(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,40,protected Component getBean() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/DivModel.java,41,return new Div(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,18,package org.apache.struts2.dojo.views.freemarker.tags;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,20,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,21,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,23,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,24,import org.apache.struts2.dojo.components.Submit;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,25,import org.apache.struts2.views.freemarker.tags.TagModel;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,27,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,32,public class SubmitModel extends TagModel {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,34,public SubmitModel(ValueStack stack, HttpServletRequest req, HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,35,super(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,39,protected Component getBean() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/SubmitModel.java,40,return new Submit(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,21,package org.apache.struts2.dojo.views.freemarker.tags;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,23,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,24,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,26,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,27,import org.apache.struts2.dojo.components.TextArea;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,28,import org.apache.struts2.views.freemarker.tags.TagModel;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,30,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,35,public class TextAreaModel extends TagModel {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,36,public TextAreaModel(ValueStack stack, HttpServletRequest req, HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,37,super(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,40,protected Component getBean() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/freemarker/tags/TextAreaModel.java,41,return new TextArea(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,21,package org.apache.struts2.dojo.views.jsp.ui;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,23,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,24,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,26,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,27,import org.apache.struts2.dojo.components.Bind;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,29,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,31,public class BindTag extends AbstractValidateTag {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,32,protected String targets;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,33,protected String sources;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,34,protected String events;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,36,public Component getBean(ValueStack stack, HttpServletRequest req, HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,37,return new Bind(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,40,protected void populateParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,41,super.populateParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,43,Bind bind = (Bind) component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,44,bind.setTargets(targets);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,45,bind.setSources(sources);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,46,bind.setEvents(events);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,49,public void setEvents(String events) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,50,this.events = events;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,53,public void setSources(String sources) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,54,this.sources = sources;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,57,public void setTargets(String targets) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/BindTag.java,58,this.targets = targets;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,21,package org.apache.struts2.dojo.views.jsp.ui;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,23,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,24,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,26,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,27,import org.apache.struts2.dojo.components.TextArea;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,29,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,36,public class TextareaTag extends  org.apache.struts2.views.jsp.ui.TextareaTag{
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,37,public Component getBean(ValueStack stack, HttpServletRequest req, HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,38,return new TextArea(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,41,protected void populateParams() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,42,super.populateParams();
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,44,TextArea textArea = ((TextArea) component);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,45,textArea.setCols(cols);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,46,textArea.setReadonly(readonly);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,47,textArea.setRows(rows);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/jsp/ui/TextareaTag.java,48,textArea.setWrap(wrap);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,21,package org.apache.struts2.dojo.views.velocity.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,23,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,24,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,26,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,27,import org.apache.struts2.dojo.components.Bind;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,29,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,34,public class BindDirective extends DojoAbstractDirective {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,35,public String getBeanName() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,36,return "bind";
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,39,protected Component getBean(ValueStack stack, HttpServletRequest req, HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/BindDirective.java,40,return new Bind(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,1,package org.apache.struts2.dojo.views.velocity.components;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,3,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,4,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,6,import org.apache.struts2.components.Component;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,7,import org.apache.struts2.dojo.components.TextArea;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,9,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,14,public class TextAreaDirective extends DojoAbstractDirective {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,15,public String getBeanName() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,16,return "textarea";
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,19,protected Component getBean(ValueStack stack, HttpServletRequest req,
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,20,HttpServletResponse res) {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,21,return new TextArea(stack, req, res);
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,24,public int getType() {
plugins/dojo/src/main/java/org/apache/struts2/dojo/views/velocity/components/TextAreaDirective.java,25,return BLOCK;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,21,package org.apache.struts2.components;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,23,import com.opensymphony.xwork2.util.TextUtils;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,24,import org.apache.struts2.StrutsException;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,25,import org.apache.struts2.portlet.util.PortletUrlHelper;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,27,import java.io.IOException;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,28,import java.io.Writer;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,36,public class PortletUrlRenderer implements UrlRenderer {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,41,public void renderUrl(Writer writer, URL urlComponent) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,42,String scheme = urlComponent.req.getScheme();
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,44,if (urlComponent.scheme != null) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,45,scheme = urlComponent.scheme;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,48,String result;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,49,if (urlComponent.value == null && urlComponent.action != null) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,50,result = PortletUrlHelper.buildUrl(urlComponent.action, urlComponent.namespace, urlComponent.method, urlComponent.parameters, urlComponent.portletUrlType, urlComponent.portletMode, urlComponent.windowState);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,52,result = PortletUrlHelper.buildResourceUrl(urlComponent.value, urlComponent.parameters);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,54,if ( urlComponent.anchor != null && urlComponent.anchor.length() > 0 ) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,55,result += '#' + urlComponent.anchor;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,58,String var = urlComponent.getVar();
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,60,if (var != null) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,61,urlComponent.putInContext(result);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,64,urlComponent.req.setAttribute(var, result);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,66,try {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,67,writer.write(result);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,69,throw new StrutsException("IOError: " + e.getMessage(), e);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,77,public void renderFormUrl(Form formComponent) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,78,String action = null;
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,79,if (formComponent.action != null) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,81,action = formComponent.findString(formComponent.action);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,84,String type = "action";
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,85,if (TextUtils.stringSet(formComponent.method)) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,86,if ("GET".equalsIgnoreCase(formComponent.method.trim())) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,87,type = "render";
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,90,if (action != null) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,91,String result = PortletUrlHelper.buildUrl(action, formComponent.namespace, null,
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,92,formComponent.getParameters(), type, formComponent.portletMode, formComponent.windowState);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,93,formComponent.addParameter("action", result);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,96,int slash = result.lastIndexOf('/');
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,97,if (slash != -1) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,98,formComponent.addParameter("namespace", result.substring(0, slash));
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,100,formComponent.addParameter("namespace", "");
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,105,String id = formComponent.getId();
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,106,if (id == null) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,107,slash = action.lastIndexOf('/');
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,108,int dot = action.indexOf('.', slash);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,109,if (dot != -1) {
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,110,id = action.substring(slash + 1, dot);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,112,id = action.substring(slash + 1);
plugins/portlet/src/main/java/org/apache/struts2/components/PortletUrlRenderer.java,114,formComponent.addParameter("id", formComponent.escape(id));
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,21,package org.apache.struts2.portlet.dispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,23,import java.io.IOException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,25,import javax.servlet.ServletException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,26,import javax.servlet.http.HttpServlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,27,import javax.servlet.http.HttpServletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,28,import javax.servlet.http.HttpServletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,30,import org.apache.struts2.dispatcher.StrutsRequestWrapper;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,31,import org.apache.struts2.portlet.PortletActionConstants;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,33,import com.opensymphony.xwork2.util.TextUtils;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,35,public class DispatcherServlet extends HttpServlet implements PortletActionConstants {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,37,private static final long serialVersionUID = -266147033645951967L;
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,40,protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,41,String dispatchTo = (String) request.getAttribute(DISPATCH_TO);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,42,HttpServletRequest wrapper = wrapRequestIfNecessary(request);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,43,if(TextUtils.stringSet(dispatchTo)) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,44,request.getRequestDispatcher(dispatchTo).include(wrapper, response);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,48,private HttpServletRequest wrapRequestIfNecessary(HttpServletRequest request) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,49,if(!(request instanceof StrutsRequestWrapper)) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,50,return new StrutsRequestWrapper(request);
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,52,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/dispatcher/DispatcherServlet.java,53,return request;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,21,package org.apache.struts2.portlet.interceptor;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,23,import javax.portlet.PortletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,24,import javax.portlet.PortletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,25,import javax.portlet.PortletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,29,import org.apache.struts2.StrutsStatics;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,30,import org.apache.struts2.interceptor.PrincipalAware;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,31,import org.apache.struts2.portlet.PortletActionConstants;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,33,import com.opensymphony.xwork2.ActionContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,34,import com.opensymphony.xwork2.ActionInvocation;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,35,import com.opensymphony.xwork2.interceptor.AbstractInterceptor;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,37,public class PortletAwareInterceptor extends AbstractInterceptor implements PortletActionConstants, StrutsStatics {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,39,private static final long serialVersionUID = 2476509721059587700L;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,50,public String intercept(ActionInvocation invocation) throws Exception {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,51,final Object action = invocation.getAction();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,52,final ActionContext context = invocation.getInvocationContext();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,54,if (action instanceof PortletRequestAware) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,55,PortletRequest request = (PortletRequest) context.get(REQUEST);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,56,((PortletRequestAware) action).setPortletRequest(request);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,59,if (action instanceof PortletResponseAware) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,60,PortletResponse response = (PortletResponse) context.get(RESPONSE);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,61,((PortletResponseAware) action).setPortletResponse(response);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,63,if (action instanceof PrincipalAware) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,64,PortletRequest request = (PortletRequest) context.get(REQUEST);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,65,((PrincipalAware) action).setPrincipalProxy(new PortletPrincipalProxy(request));
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,67,if (action instanceof PortletContextAware) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,68,PortletContext portletContext = (PortletContext) context.get(STRUTS_PORTLET_CONTEXT);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,69,((PortletContextAware) action).setPortletContext(portletContext);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,71,if (action instanceof PortletPreferencesAware) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,72,PortletRequest request = (PortletRequest) context.get(REQUEST);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,75,if (request == null) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,76,LOG.warn("This portlet preferences implementation should only be used during development");
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,77,((PortletPreferencesAware)action).setPortletPreferences(new ServletPortletPreferences(ActionContext.getContext().getSession()));
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,79,((PortletPreferencesAware)action).setPortletPreferences(request.getPreferences());
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletAwareInterceptor.java,82,return invocation.invoke();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletContextAware.java,21,package org.apache.struts2.portlet.interceptor;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletContextAware.java,23,import javax.portlet.PortletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletContextAware.java,25,public interface PortletContextAware {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletContextAware.java,27,void setPortletContext(PortletContext portletContext);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletRequestAware.java,21,package org.apache.struts2.portlet.interceptor;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletRequestAware.java,23,import javax.portlet.PortletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletRequestAware.java,25,public interface PortletRequestAware {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletRequestAware.java,27,void setPortletRequest(PortletRequest request);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletResponseAware.java,21,package org.apache.struts2.portlet.interceptor;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletResponseAware.java,23,import javax.portlet.PortletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletResponseAware.java,25,public interface PortletResponseAware {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletResponseAware.java,27,void setPortletResponse(PortletResponse response);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,21,package org.apache.struts2.portlet.interceptor;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,23,import java.util.Map;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,25,import javax.portlet.ActionResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,26,import javax.portlet.RenderRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,30,import org.apache.struts2.portlet.PortletActionConstants;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,31,import org.apache.struts2.portlet.dispatcher.DirectRenderFromEventAction;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,33,import com.opensymphony.xwork2.ActionInvocation;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,34,import com.opensymphony.xwork2.interceptor.AbstractInterceptor;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,35,import com.opensymphony.xwork2.util.CompoundRoot;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,36,import com.opensymphony.xwork2.util.TextUtils;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,37,import com.opensymphony.xwork2.util.ValueStack;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,39,public class PortletStateInterceptor extends AbstractInterceptor implements PortletActionConstants {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,43,private static final long serialVersionUID = 6138452063353911784L;
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,46,public String intercept(ActionInvocation invocation) throws Exception {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,47,Integer phase = (Integer) invocation.getInvocationContext().get(PHASE);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,48,if (RENDER_PHASE.equals(phase)) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,49,restoreStack(invocation);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,50,return invocation.invoke();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,52,try {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,53,return invocation.invoke();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,55,saveStack(invocation);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,58,return invocation.invoke();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,63,private void saveStack(ActionInvocation invocation) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,64,Map session = invocation.getInvocationContext().getSession();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,65,session.put(STACK_FROM_EVENT_PHASE, invocation.getStack());
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,66,ActionResponse actionResponse = (ActionResponse) invocation.getInvocationContext().get(RESPONSE);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,67,actionResponse.setRenderParameter(EVENT_ACTION, "true");
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,71,private void restoreStack(ActionInvocation invocation) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,72,RenderRequest request = (RenderRequest) invocation.getInvocationContext().get(REQUEST);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,73,if (TextUtils.stringSet(request.getParameter(EVENT_ACTION))) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,74,Map session = invocation.getInvocationContext().getSession();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,75,if(!isProperPrg(invocation)) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,76,LOG.debug("Restoring value stack from event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,77,ValueStack oldStack = (ValueStack) invocation.getInvocationContext().getSession().get(
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,78,STACK_FROM_EVENT_PHASE);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,79,if (oldStack != null) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,80,CompoundRoot oldRoot = oldStack.getRoot();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,81,ValueStack currentStack = invocation.getStack();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,82,CompoundRoot root = currentStack.getRoot();
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,83,root.addAll(oldRoot);
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,84,LOG.debug("Restored stack");
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,87,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,88,LOG.debug("Won't restore stack from event phase since it's a proper PRG request");
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,93,private boolean isProperPrg(ActionInvocation invocation) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/interceptor/PortletStateInterceptor.java,94,return !(invocation.getAction() instanceof DirectRenderFromEventAction);
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,21,package org.apache.struts2.portlet.result;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,23,import java.util.Arrays;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,24,import java.util.Iterator;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,25,import java.util.LinkedHashMap;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,26,import java.util.List;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,27,import java.util.Map;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,29,import org.apache.struts2.dispatcher.ServletActionRedirectResult;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,30,import org.apache.struts2.dispatcher.mapper.ActionMapper;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,31,import org.apache.struts2.dispatcher.mapper.ActionMapping;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,32,import org.apache.struts2.views.util.UrlHelper;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,34,import com.opensymphony.xwork2.ActionInvocation;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,35,import com.opensymphony.xwork2.config.entities.ResultConfig;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,36,import com.opensymphony.xwork2.inject.Inject;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,117,public class PortletActionRedirectResult extends PortletResult {
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletActionRedirectResult.java,119,private static final long serialVersionUID = -7627388936683562557L;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,21,package org.apache.struts2.portlet.servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,23,import java.util.ArrayList;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,24,import java.util.Enumeration;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,25,import java.util.List;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,27,import javax.portlet.PortletSession;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,28,import javax.servlet.ServletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,29,import javax.servlet.http.HttpSession;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,30,import javax.servlet.http.HttpSessionContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,37,public class PortletHttpSession implements HttpSession {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,39,private PortletSession portletSession;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,41,public PortletHttpSession(PortletSession portletSession) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,42,this.portletSession = portletSession;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,50,public Object getAttribute(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,51,return portletSession.getAttribute(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,59,public Enumeration getAttributeNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,60,return portletSession.getAttributeNames();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,68,public long getCreationTime() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,69,return portletSession.getCreationTime();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,77,public String getId() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,78,return portletSession.getId();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,86,public long getLastAccessedTime() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,87,return portletSession.getLastAccessedTime();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,95,public int getMaxInactiveInterval() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,96,return portletSession.getMaxInactiveInterval();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,104,public ServletContext getServletContext() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,105,return new PortletServletContext(portletSession.getPortletContext());
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,113,public HttpSessionContext getSessionContext() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,114,throw new IllegalStateException("Not supported in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,122,public Object getValue(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,123,return getAttribute(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,131,public String[] getValueNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,132,List<String> names = new ArrayList<String>();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,133,Enumeration attrNames = getAttributeNames();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,134,while (attrNames.hasMoreElements()) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,135,names.add((String) attrNames.nextElement());
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,137,return names.toArray(new String[0]);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,145,public void invalidate() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,146,portletSession.invalidate();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,154,public boolean isNew() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,155,return portletSession.isNew();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,164,public void putValue(String name, Object value) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,165,setAttribute(name, value);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,173,public void removeAttribute(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,174,portletSession.removeAttribute(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,182,public void removeValue(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,183,removeAttribute(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,192,public void setAttribute(String name, Object value) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,193,portletSession.setAttribute(name, value);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,201,public void setMaxInactiveInterval(int interval) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,202,portletSession.setMaxInactiveInterval(interval);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,210,public PortletSession getPortletSession() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletHttpSession.java,211,return portletSession;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,21,package org.apache.struts2.portlet.servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,23,import java.util.Enumeration;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,25,import javax.portlet.PortletConfig;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,26,import javax.portlet.PortletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,27,import javax.servlet.ServletConfig;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,28,import javax.servlet.ServletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,35,public class PortletServletConfig implements ServletConfig {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,37,private PortletConfig portletConfig;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,39,public PortletServletConfig(PortletConfig portletConfig) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,40,this.portletConfig = portletConfig;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,46,public String getInitParameter(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,47,return portletConfig.getInitParameter(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,53,public Enumeration getInitParameterNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,54,return portletConfig.getInitParameterNames();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,61,public ServletContext getServletContext() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,62,return new PortletServletContext(portletConfig.getPortletContext());
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,69,public String getServletName() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,70,return portletConfig.getPortletName();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,77,public PortletConfig getPortletConfig() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletConfig.java,78,return portletConfig;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,21,package org.apache.struts2.portlet.servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,23,import java.io.InputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,24,import java.net.MalformedURLException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,25,import java.net.URL;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,26,import java.util.Enumeration;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,27,import java.util.Set;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,29,import javax.portlet.PortletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,30,import javax.portlet.PortletRequestDispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,31,import javax.servlet.RequestDispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,32,import javax.servlet.Servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,33,import javax.servlet.ServletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,34,import javax.servlet.ServletException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,41,public class PortletServletContext implements ServletContext {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,43,private PortletContext portletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,45,public PortletServletContext(PortletContext portletContext) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,46,this.portletContext = portletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,52,public Object getAttribute(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,53,return portletContext.getAttribute(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,59,public Enumeration getAttributeNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,60,return portletContext.getAttributeNames();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,67,public ServletContext getContext(String uripath) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,68,throw new IllegalStateException("Not supported in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,74,public String getInitParameter(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,75,return portletContext.getInitParameter(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,81,public Enumeration getInitParameterNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,82,return portletContext.getInitParameterNames();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,88,public int getMajorVersion() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,89,return portletContext.getMajorVersion();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,95,public String getMimeType(String file) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,96,return portletContext.getMimeType(file);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,102,public int getMinorVersion() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,103,return portletContext.getMinorVersion();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,112,public RequestDispatcher getNamedDispatcher(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,113,return new PortletServletRequestDispatcher(portletContext.getNamedDispatcher(name));
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,119,public String getRealPath(String path) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,120,return portletContext.getRealPath(path);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,129,public RequestDispatcher getRequestDispatcher(String path) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,130,return new PortletServletRequestDispatcher(portletContext.getRequestDispatcher(path));
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,136,public URL getResource(String path) throws MalformedURLException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,137,return portletContext.getResource(path);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,143,public InputStream getResourceAsStream(String path) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,144,return portletContext.getResourceAsStream(path);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,150,public Set getResourcePaths(String path) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,151,return portletContext.getResourcePaths(path);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,157,public String getServerInfo() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,158,return portletContext.getServerInfo();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,165,public Servlet getServlet(String name) throws ServletException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,166,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,172,public String getServletContextName() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,173,return portletContext.getPortletContextName();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,180,public Enumeration getServletNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,181,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,188,public Enumeration getServlets() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,189,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,195,public void log(String msg) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,196,portletContext.log(msg);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,202,public void log(Exception exception, String msg) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,203,log(msg, exception);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,209,public void log(String message, Throwable throwable) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,210,portletContext.log(message, throwable);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,216,public void removeAttribute(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,217,portletContext.removeAttribute(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,223,public void setAttribute(String name, Object object) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,224,portletContext.setAttribute(name, object);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,231,public PortletContext getPortletContext() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletContext.java,232,return portletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,21,package org.apache.struts2.portlet.servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,23,import java.io.IOException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,24,import java.io.InputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,26,import javax.servlet.ServletInputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,33,public class PortletServletInputStream extends ServletInputStream {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,35,private InputStream portletInputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,37,public PortletServletInputStream(InputStream portletInputStream) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,38,this.portletInputStream = portletInputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,45,public int read() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,46,return portletInputStream.read();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,53,public int available() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,54,return portletInputStream.available();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,61,public void close() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,62,portletInputStream.close();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,69,public synchronized void mark(int readlimit) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,70,portletInputStream.mark(readlimit);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,77,public boolean markSupported() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,78,return portletInputStream.markSupported();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,85,public int read(byte[] b, int off, int len) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,86,return portletInputStream.read(b, off, len);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,93,public int read(byte[] b) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,94,return portletInputStream.read(b);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,101,public synchronized void reset() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,102,portletInputStream.reset();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,109,public long skip(long n) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,110,return portletInputStream.skip(n);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,117,public InputStream getInputStream() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletInputStream.java,118,return portletInputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,21,package org.apache.struts2.portlet.servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,23,import java.io.IOException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,24,import java.io.OutputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,26,import javax.servlet.ServletOutputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,33,public class PortletServletOutputStream extends ServletOutputStream {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,35,private OutputStream portletOutputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,37,public PortletServletOutputStream(OutputStream portletOutputStream) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,38,this.portletOutputStream = portletOutputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,45,public void write(int ch) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,46,portletOutputStream.write(ch);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,53,public void close() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,54,portletOutputStream.close();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,61,public void flush() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,62,portletOutputStream.flush();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,69,public void write(byte[] b) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,70,portletOutputStream.write(b);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,77,public void write(byte[] b, int off, int len) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,78,portletOutputStream.write(b, off, len);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,85,public OutputStream getOutputStream() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletOutputStream.java,86,return portletOutputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,21,package org.apache.struts2.portlet.servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,23,import java.io.BufferedReader;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,24,import java.io.IOException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,25,import java.io.InputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,26,import java.io.UnsupportedEncodingException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,27,import java.security.Principal;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,28,import java.util.Enumeration;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,29,import java.util.Locale;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,30,import java.util.Map;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,32,import javax.portlet.ActionRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,33,import javax.portlet.PortletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,34,import javax.portlet.PortletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,35,import javax.portlet.PortletRequestDispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,36,import javax.portlet.PortletSession;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,37,import javax.servlet.RequestDispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,38,import javax.servlet.ServletInputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,39,import javax.servlet.ServletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,40,import javax.servlet.http.Cookie;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,41,import javax.servlet.http.HttpServletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,42,import javax.servlet.http.HttpSession;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,44,import org.apache.struts2.portlet.PortletActionConstants;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,51,public class PortletServletRequest implements HttpServletRequest, PortletActionConstants {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,53,private PortletRequest portletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,54,private PortletContext portletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,56,public PortletServletRequest(PortletRequest portletRequest, PortletContext portletContext) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,57,this.portletRequest = portletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,58,this.portletContext = portletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,64,public String getAuthType() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,65,return portletRequest.getAuthType();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,71,public String getContextPath() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,72,return portletRequest.getContextPath();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,79,public Cookie[] getCookies() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,80,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,81,return ((HttpServletRequest)portletRequest).getCookies();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,83,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,90,public long getDateHeader(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,91,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,100,public String getHeader(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,101,return portletRequest.getProperty(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,110,public Enumeration getHeaderNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,111,return portletRequest.getPropertyNames();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,120,public Enumeration getHeaders(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,121,return portletRequest.getProperties(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,128,public int getIntHeader(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,129,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,135,public String getMethod() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,136,return null;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,142,public String getPathInfo() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,143,return null;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,149,public String getPathTranslated() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,150,return null;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,156,public String getQueryString() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,157,return null;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,163,public String getRemoteUser() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,164,return portletRequest.getRemoteUser();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,171,public String getRequestURI() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,172,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,179,public StringBuffer getRequestURL() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,180,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,186,public String getRequestedSessionId() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,187,return portletRequest.getRequestedSessionId();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,195,public String getServletPath() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,196,String actionPath = getParameter(ACTION_PARAM);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,197,if(actionPath != null && !actionPath.endsWith(".action")) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,198,actionPath += ".action";
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,200,return actionPath;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,207,public HttpSession getSession() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,208,return new PortletHttpSession(portletRequest.getPortletSession());
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,215,public HttpSession getSession(boolean create) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,216,return new PortletHttpSession(portletRequest.getPortletSession(create));
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,222,public Principal getUserPrincipal() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,223,return portletRequest.getUserPrincipal();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,230,public boolean isRequestedSessionIdFromCookie() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,231,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,238,public boolean isRequestedSessionIdFromURL() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,239,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,246,public boolean isRequestedSessionIdFromUrl() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,247,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,253,public boolean isRequestedSessionIdValid() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,254,return portletRequest.isRequestedSessionIdValid();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,260,public boolean isUserInRole(String role) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,261,return portletRequest.isUserInRole(role);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,270,public Object getAttribute(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,271,if("javax.servlet.include.servlet_path".equals(name)) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,272,return getServletPath();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,274,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,275,return portletRequest.getAttribute(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,282,public Enumeration getAttributeNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,283,return portletRequest.getAttributeNames();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,291,public String getCharacterEncoding() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,292,if(portletRequest instanceof ActionRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,293,return ((ActionRequest)portletRequest).getCharacterEncoding();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,295,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,296,throw new IllegalStateException("Not allowed in render phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,305,public int getContentLength() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,306,if(portletRequest instanceof ActionRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,307,return ((ActionRequest)portletRequest).getContentLength();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,309,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,310,throw new IllegalStateException("Not allowed in render phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,319,public String getContentType() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,320,if(portletRequest instanceof ActionRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,321,return ((ActionRequest)portletRequest).getContentType();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,323,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,324,throw new IllegalStateException("Not allowed in render phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,334,public ServletInputStream getInputStream() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,335,if(portletRequest instanceof ActionRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,336,return new PortletServletInputStream(((ActionRequest)portletRequest).getPortletInputStream());
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,338,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,339,throw new IllegalStateException("Not allowed in render phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,347,public String getLocalAddr() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,348,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,349,return ((HttpServletRequest)portletRequest).getLocalAddr();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,351,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,358,public String getLocalName() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,359,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,360,return ((HttpServletRequest)portletRequest).getLocalName();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,362,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,369,public int getLocalPort() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,370,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,371,return ((HttpServletRequest)portletRequest).getLocalPort();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,373,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,379,public Locale getLocale() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,380,return portletRequest.getLocale();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,386,public Enumeration getLocales() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,387,return portletRequest.getLocales();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,393,public String getParameter(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,394,return portletRequest.getParameter(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,400,public Map getParameterMap() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,401,return portletRequest.getParameterMap();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,407,public Enumeration getParameterNames() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,408,return portletRequest.getParameterNames();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,414,public String[] getParameterValues(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,415,return portletRequest.getParameterValues(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,422,public String getProtocol() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,423,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,424,return ((HttpServletRequest)portletRequest).getProtocol();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,426,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,434,public BufferedReader getReader() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,435,if(portletRequest instanceof ActionRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,436,return ((ActionRequest)portletRequest).getReader();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,438,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,439,throw new IllegalStateException("Not allowed in render phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,446,public String getRealPath(String path) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,447,return portletContext.getRealPath(path);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,454,public String getRemoteAddr() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,455,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,456,return ((HttpServletRequest)portletRequest).getRemoteAddr();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,458,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,465,public String getRemoteHost() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,466,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,467,return ((HttpServletRequest)portletRequest).getRemoteHost();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,469,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,476,public int getRemotePort() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,477,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,478,return ((HttpServletRequest)portletRequest).getRemotePort();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,480,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,487,public RequestDispatcher getRequestDispatcher(String path) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,488,return new PortletServletRequestDispatcher(portletContext.getRequestDispatcher(path));
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,494,public String getScheme() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,495,return portletRequest.getScheme();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,501,public String getServerName() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,502,return portletRequest.getServerName();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,509,public int getServerPort() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,510,if(portletRequest instanceof HttpServletRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,511,return ((HttpServletRequest)portletRequest).getServerPort();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,513,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,519,public boolean isSecure() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,520,return portletRequest.isSecure();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,526,public void removeAttribute(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,527,portletRequest.removeAttribute(name);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,533,public void setAttribute(String name, Object o) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,534,portletRequest.setAttribute(name, o);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,542,public void setCharacterEncoding(String env) throws UnsupportedEncodingException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,543,if(portletRequest instanceof ActionRequest) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,544,((ActionRequest)portletRequest).setCharacterEncoding(env);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,546,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,547,throw new IllegalStateException("Not allowed in render phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,555,public PortletRequest getPortletRequest() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequest.java,556,return portletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,21,package org.apache.struts2.portlet.servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,23,import java.io.IOException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,25,import javax.portlet.PortletException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,26,import javax.portlet.PortletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,27,import javax.portlet.PortletRequestDispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,28,import javax.portlet.PortletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,29,import javax.portlet.RenderRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,30,import javax.portlet.RenderResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,31,import javax.servlet.RequestDispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,32,import javax.servlet.ServletException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,33,import javax.servlet.ServletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,34,import javax.servlet.ServletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,36,public class PortletServletRequestDispatcher implements RequestDispatcher {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,38,private PortletRequestDispatcher portletRequestDispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,40,public PortletServletRequestDispatcher(PortletRequestDispatcher portletRequestDispatcher) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,41,this.portletRequestDispatcher = portletRequestDispatcher;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,44,public void forward(ServletRequest request, ServletResponse response) throws ServletException, IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,45,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,49,public void include(ServletRequest request, ServletResponse response) throws ServletException, IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,50,if(request instanceof PortletServletRequest && response instanceof PortletServletResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,51,PortletRequest req = ((PortletServletRequest)request).getPortletRequest();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,52,PortletResponse resp = ((PortletServletResponse)response).getPortletResponse();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,53,if(req instanceof RenderRequest && resp instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,54,try {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,55,portletRequestDispatcher.include((RenderRequest)req, (RenderResponse)resp);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,57,catch(PortletException e) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,58,throw new ServletException(e);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,61,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,62,throw new IllegalStateException("Can only be invoked in the render phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,65,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletRequestDispatcher.java,66,throw new IllegalStateException("Can only be invoked in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,21,package org.apache.struts2.portlet.servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,23,import java.io.IOException;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,24,import java.io.PrintWriter;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,25,import java.util.Locale;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,27,import javax.portlet.PortletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,28,import javax.portlet.RenderResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,29,import javax.servlet.ServletOutputStream;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,30,import javax.servlet.http.Cookie;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,31,import javax.servlet.http.HttpServletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,33,public class PortletServletResponse implements HttpServletResponse {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,35,private PortletResponse portletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,37,public PortletServletResponse(PortletResponse portletResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,38,this.portletResponse = portletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,41,public void addCookie(Cookie cookie) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,42,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,45,public void addDateHeader(String name, long date) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,46,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,49,public void addHeader(String name, String value) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,50,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,53,public void addIntHeader(String name, int value) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,54,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,57,public boolean containsHeader(String name) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,58,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,61,public String encodeRedirectURL(String url) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,62,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,65,public String encodeRedirectUrl(String url) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,66,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,69,public String encodeURL(String url) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,70,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,73,public String encodeUrl(String url) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,74,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,77,public void sendError(int sc) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,78,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,81,public void sendError(int sc, String msg) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,82,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,85,public void sendRedirect(String location) throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,86,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,89,public void setDateHeader(String name, long date) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,90,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,93,public void setHeader(String name, String value) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,94,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,97,public void setIntHeader(String name, int value) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,98,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,101,public void setStatus(int sc) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,102,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,105,public void setStatus(int sc, String sm) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,106,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,109,public void flushBuffer() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,110,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,111,((RenderResponse)portletResponse).flushBuffer();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,113,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,114,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,118,public int getBufferSize() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,119,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,120,return ((RenderResponse)portletResponse).getBufferSize();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,122,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,123,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,127,public String getCharacterEncoding() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,128,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,129,return ((RenderResponse)portletResponse).getCharacterEncoding();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,131,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,132,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,136,public String getContentType() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,137,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,138,return ((RenderResponse)portletResponse).getContentType();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,140,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,141,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,145,public Locale getLocale() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,146,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,147,return ((RenderResponse)portletResponse).getLocale();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,149,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,150,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,154,public ServletOutputStream getOutputStream() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,155,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,156,return new PortletServletOutputStream(((RenderResponse)portletResponse).getPortletOutputStream());
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,158,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,159,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,163,public PrintWriter getWriter() throws IOException {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,164,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,165,return ((RenderResponse)portletResponse).getWriter();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,167,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,168,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,172,public boolean isCommitted() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,173,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,174,return ((RenderResponse)portletResponse).isCommitted();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,176,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,177,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,181,public void reset() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,182,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,183,((RenderResponse)portletResponse).reset();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,185,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,186,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,190,public void resetBuffer() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,191,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,192,((RenderResponse)portletResponse).resetBuffer();
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,194,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,195,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,199,public void setBufferSize(int size) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,200,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,201,((RenderResponse)portletResponse).setBufferSize(size);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,203,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,204,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,208,public void setCharacterEncoding(String charset) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,209,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,212,public void setContentLength(int len) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,213,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,216,public void setContentType(String type) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,217,if(portletResponse instanceof RenderResponse) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,218,((RenderResponse)portletResponse).setContentType(type);
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,220,else {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,221,throw new IllegalStateException("Not allowed in event phase");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,225,public void setLocale(Locale loc) {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,226,throw new IllegalStateException("Not allowed in a portlet");
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,229,public PortletResponse getPortletResponse() {
plugins/portlet/src/main/java/org/apache/struts2/portlet/servlet/PortletServletResponse.java,230,return portletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,333,String keyNameExpr = "%{" + keyName + "}";
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/Autocompleter.java,334,addParameter("key", findString(keyNameExpr));
core/src/main/java/org/apache/struts2/components/ActionComponent.java,250,if (null != methodName) {
core/src/main/java/org/apache/struts2/components/ActionComponent.java,251,proxy.setMethod(methodName);
core/src/main/java/org/apache/struts2/components/ActionComponent.java,167,private Map createExtraContext() {
core/src/main/java/org/apache/struts2/components/ActionComponent.java,168,Map parentParams = null;
core/src/main/java/org/apache/struts2/components/ActionComponent.java,170,if (!ignoreContextParams) {
core/src/main/java/org/apache/struts2/components/ActionComponent.java,171,parentParams = new ActionContext(getStack().getContext()).getParameters();
core/src/main/java/org/apache/struts2/components/ActionComponent.java,174,Map newParams = (parentParams != null) ? new HashMap(parentParams) : new HashMap();
core/src/main/java/org/apache/struts2/components/ActionComponent.java,176,if (parameters != null) {
core/src/main/java/org/apache/struts2/components/ActionComponent.java,177,newParams.putAll(parameters);
core/src/main/java/org/apache/struts2/config/StrutsXmlConfigurationProvider.java,165,return ctx.get(reloadKey) == null && super.needsReload();
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,66,if (attribute == null) {
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,67,boolean alreadyIn = false;
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,68,Boolean b = (Boolean) ctx.get("__requestWrapper.getAttribute");
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,69,if (b != null) {
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,70,alreadyIn = b.booleanValue();
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,75,if (!alreadyIn && s.indexOf("#") == -1) {
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,76,try {
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,78,ctx.put("__requestWrapper.getAttribute", Boolean.TRUE);
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,79,ValueStack stack = ctx.getValueStack();
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,80,if (stack != null) {
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,81,attribute = stack.findValue(s);
core/src/main/java/org/apache/struts2/dispatcher/StrutsRequestWrapper.java,84,ctx.put("__requestWrapper.getAttribute", Boolean.FALSE);
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,196,after(invocation, result);
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,256,protected void after(ActionInvocation invocation, String result) throws Exception {
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,258,String reqOperationMode = getRequestOperationMode(invocation);
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,259,if (STORE_MODE.equalsIgnoreCase(reqOperationMode) ||
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,262,Object action = invocation.getAction();
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,269,ValidationAware validationAwareAction = (ValidationAware) action;
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,270,session.put(actionErrorsSessionKey, validationAwareAction.getActionErrors());
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,271,session.put(actionMessagesSessionKey, validationAwareAction.getActionMessages());
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,272,session.put(fieldErrorsSessionKey, validationAwareAction.getFieldErrors());
core/src/main/java/org/apache/struts2/StrutsConstants.java,58,public static final String STRUTS_URL_RENDERER = "struts.urlRenderer";
core/src/main/java/org/apache/struts2/StrutsConstants.java,163,public static final String STRUTS_ID_PARAMETER_NAME = "struts.mapper.idParameterName";
core/src/main/java/org/apache/struts2/StrutsConstants.java,166,public static final String STRUTS_ALLOW_STATIC_METHOD_ACCESS = "struts.ognl.allowStaticMethodAccess";
core/src/main/java/org/apache/struts2/components/Include.java,109,private static String defaultEncoding;
