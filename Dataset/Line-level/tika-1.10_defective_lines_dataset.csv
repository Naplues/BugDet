File,Line_number,SRC
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,19,import java.util.Map;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,20,import java.util.Collections;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,23,import org.xml.sax.SAXException;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,24,import org.xml.sax.ContentHandler;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,117,&& !(stream instanceof ByteArrayInputStream)) {
tika-core/src/main/java/org/apache/tika/mime/ProbabilisticMimeDetectionSelector.java,27,import org.apache.tika.mime.MediaType;
tika-core/src/main/java/org/apache/tika/mime/ProbabilisticMimeDetectionSelector.java,28,import org.apache.tika.mime.MediaTypeRegistry;
tika-core/src/main/java/org/apache/tika/mime/ProbabilisticMimeDetectionSelector.java,29,import org.apache.tika.mime.MimeType;
tika-core/src/main/java/org/apache/tika/mime/ProbabilisticMimeDetectionSelector.java,30,import org.apache.tika.mime.MimeTypeException;
tika-core/src/main/java/org/apache/tika/mime/ProbabilisticMimeDetectionSelector.java,31,import org.apache.tika.mime.MimeTypes;
tika-core/src/main/java/org/apache/tika/mime/ProbabilisticMimeDetectionSelector.java,131,List<MimeType> possibleTypes = null;
tika-core/src/main/java/org/apache/tika/mime/ProbabilisticMimeDetectionSelector.java,138,possibleTypes = mimeTypes.getMimeType(prefix);
tika-core/src/main/java/org/apache/tika/fork/ForkParser.java,216,client = new ForkClient(loader, parser, java);
tika-core/src/main/java/org/apache/tika/fork/ForkServer.java,61,ForkServer server = new ForkServer(System.in, System.out);
tika-core/src/main/java/org/apache/tika/fork/ForkServer.java,100,Thread.sleep(5000);
tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java,56,unmodifiableSet("title", "link", "base", "meta");
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,104,int hash = name.indexOf('#');
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,105,if (hash != -1) {
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,106,name = name.substring(0, hash);
tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java,118,if (XHTML.equals(uri)) {
tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java,119,if ("a".equals(local) || "img".equals(local)) {
tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java,120,links.add(builderStack.removeFirst().getLink(collapseWhitespaceInAnchor));
tika-core/src/main/java/org/apache/tika/parser/external/ExternalParser.java,161,String[] cmd = command[0].split(" ");
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,232,return MediaType.parse(ct);
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,370,metadataBuffer.append(name);
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,371,metadataBuffer.append(": ");
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,372,metadataBuffer.append(md.get(name));
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,373,metadataBuffer.append("\n");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,87,metadata.add(Metadata.CONTENT_TYPE, "application/rtf");
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,50,private static final MediaType MEDIA_TYPE = MediaType
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,51,.application("geotopic");
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,52,private static final Set<MediaType> SUPPORTED_TYPES = Collections
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,53,.singleton(MEDIA_TYPE);
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,55,private static final Logger LOG = Logger.getLogger(GeoParser.class
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,56,.getName());
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,65,Metadata metadata, ParseContext context) throws IOException,
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,69,config = context.get(GeoParserConfig.class, config);
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,70,String nerModelPath = config.getNERPath();
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,77,NameEntityExtractor extractor = new NameEntityExtractor(nerModelPath);
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,149,return ExternalParser.check(new String[] { "lucene-geo-gazetteer",
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,151,&& config.getNERPath() != null
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParser.java,152,&& !config.getNERPath().equals("");
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,22,import java.net.URISyntaxException;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,26,private static final long serialVersionUID = 1L;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,27,private String nerModelPath = null;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,30,try {
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,31,if (GeoParserConfig.class.getResource("en-ner-location.bin") != null) {
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,32,this.nerModelPath = new File(GeoParserConfig.class.getResource(
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,36,e.printStackTrace();
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,47,nerModelPath = path;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,50,public String getNERPath() {
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/GeoParserConfig.java,51,return nerModelPath;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,20,import java.io.FileInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,33,import opennlp.tools.util.InvalidFormatException;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,39,private String nerModelPath = null;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,44,public NameEntityExtractor(String nerModelpath) {
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,47,this.nerModelPath = nerModelpath;
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,48,tf = new HashMap<String, Integer>();
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,61,throws InvalidFormatException, IOException {
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,63,InputStream modelIn = new FileInputStream(nerModelPath);
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,64,TokenNameFinderModel model = new TokenNameFinderModel(modelIn);
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,65,NameFinderME nameFinder = new NameFinderME(model);
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,68,Span nameE[] = nameFinder.find(in);
tika-parsers/src/main/java/org/apache/tika/parser/geo/topic/NameEntityExtractor.java,72,modelIn.close();
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,117,try {
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,118,boolean hasTesseract = ExternalParser.check(checkCmd);
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,119,TESSERACT_PRESENT.put(tesseract, hasTesseract);
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,120,return hasTesseract;
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,125,TESSERACT_PRESENT.put(tesseract, false);
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,126,return false;
tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java,63,unmodifiableSet("html", "head", "frameset");
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,106,private Map<String, Integer> processedInlineImages = new HashMap<String, Integer>();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,230,extractImages(page.getResources());
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,305,private void extractImages(PDResources resources) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,319,extractImages(((PDXObjectForm) object).getResources());
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,22,import org.apache.tika.config.ServiceLoader;
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,57,cache = new HashMap<String, LRUMap<String, String>>();
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,96,return translator.isAvailable();
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,175,translationCache = new LRUMap<String, String>(INITIAL_ENTRIES, MAX_ENTRIES);
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,20,import java.util.Locale;
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,43,if (handlerTypeString == null) {
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,44,handlerTypeString = "text";
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,46,handlerTypeString = handlerTypeString.toLowerCase(Locale.ROOT);
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,47,if (handlerTypeString.equals("xml")) {
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,48,type = BasicContentHandlerFactory.HANDLER_TYPE.XML;
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,50,type = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,52,type = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,54,type = BasicContentHandlerFactory.HANDLER_TYPE.HTML;
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,56,type = BasicContentHandlerFactory.HANDLER_TYPE.BODY;
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,58,type = BasicContentHandlerFactory.HANDLER_TYPE.IGNORE;
tika-batch/src/main/java/org/apache/tika/batch/builders/DefaultContentHandlerFactoryBuilder.java,60,type = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java,51,public Response getMetadataFromMultipart(Attachment att, @Context UriInfo info) throws Exception {
tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java,53,parseMetadata(att.getObject(InputStream.class), att.getHeaders(), info)).build();
tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java,58,public Response getMetadata(InputStream is, @Context HttpHeaders httpHeaders, @Context UriInfo info) throws Exception {
tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java,60,parseMetadata(is, httpHeaders.getRequestHeaders(), info)).build();
tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java,70,BasicContentHandlerFactory.HANDLER_TYPE type = BasicContentHandlerFactory.HANDLER_TYPE.TEXT;
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,484,if (AutoDetectParser.class.isAssignableFrom(loadedClass)) {
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,486,throw new TikaException(
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,488,+ " configuration element: " + name);
tika-parsers/src/main/java/org/apache/tika/parser/mbox/OutlookPSTParser.java,56,private static final MediaType MS_OUTLOOK_PST_MIMETYPE = MediaType.application("vnd.ms-outlook-pst");
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRConfig.java,110,getProp(props, "timeout", getTimeout()));
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,100,if (!config.getTesseractPath().isEmpty()) {
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,101,Map<String, String> env = pb.environment();
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,102,env.put("TESSDATA_PREFIX", config.getTesseractPath());
tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java,50,String filename = TikaResource.detectFilename(httpHeaders
tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java,51,.getRequestHeaders());
tika-server/src/main/java/org/apache/tika/server/resource/DetectorResource.java,54,try {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,200,ais.close();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,201,tmp.close();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,204,xhtml.endDocument();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,57,private interface Style {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,60,private static class TextStyle implements Style {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,61,public boolean italic;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,62,public boolean bold;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,63,public boolean underlined;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,66,private static class ListStyle implements Style {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,67,public boolean ordered;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,69,public String getTag() {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,70,return ordered ? "ol" : "ul";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,74,private static final class OpenDocumentElementMappingContentHandler extends
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,75,ElementMappingContentHandler {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,76,private final ContentHandler handler;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,77,private final BitSet textNodeStack = new BitSet();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,78,private int nodeDepth = 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,79,private int completelyFiltered = 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,80,private Stack<String> headingStack = new Stack<String>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,81,private Map<String, TextStyle> textStyleMap = new HashMap<String, TextStyle>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,82,private Map<String, ListStyle> listStyleMap = new HashMap<String, ListStyle>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,85,private Stack<ListStyle> listStyleStack = new Stack<ListStyle>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,86,private ListStyle listStyle;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,88,private OpenDocumentElementMappingContentHandler(ContentHandler handler,
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,89,Map<QName, TargetElement> mappings) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,90,super(handler, mappings);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,91,this.handler = handler;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,96,throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,98,if (completelyFiltered == 0 && nodeDepth > 0
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,99,&& textNodeStack.get(nodeDepth - 1)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,101,super.characters(ch, start, length);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,107,private boolean needsCompleteFiltering(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,108,String namespaceURI, String localName) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,109,if (TEXT_NS.equals(namespaceURI)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,111,|| localName.endsWith("-style");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,113,return TABLE_NS.equals(namespaceURI) && "covered-table-cell".equals(localName);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,117,private String getXHTMLHeaderTagName(Attributes atts) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,118,String depthStr = atts.getValue(TEXT_NS, "outline-level");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,119,if (depthStr == null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,120,return "h1";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,123,int depth = Integer.parseInt(depthStr);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,124,if (depth >= 6) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,125,return "h6";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,127,return "h1";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,129,return "h" + depth;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,136,private boolean isTextNode(String namespaceURI, String localName) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,137,if (TEXT_NS.equals(namespaceURI) && !localName.equals("page-number") && !localName.equals("page-count")) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,138,return true;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,140,if (SVG_NS.equals(namespaceURI)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,141,return "title".equals(localName) ||
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,144,return false;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,147,private void startList(String name) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,148,String elementName = "ul";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,149,if (name != null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,150,ListStyle style = listStyleMap.get(name);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,151,elementName = style != null ? style.getTag() : "ul";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,152,listStyleStack.push(style);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,154,handler.startElement(XHTML, elementName, elementName, EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,157,private void endList() throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,158,String elementName = "ul";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,159,if (!listStyleStack.isEmpty()) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,160,ListStyle style = listStyleStack.pop();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,161,elementName = style != null ? style.getTag() : "ul";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,163,handler.endElement(XHTML, elementName, elementName);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,166,private void startSpan(String name) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,167,if (name == null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,168,return;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,202,private void endSpan() throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,226,public void startElement(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,227,String namespaceURI, String localName, String qName,
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,228,Attributes attrs) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,234,assert nodeDepth >= 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,237,if (STYLE_NS.equals(namespaceURI) && "style".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,238,String family = attrs.getValue(STYLE_NS, "family");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,239,if ("text".equals(family)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,245,listStyle = new ListStyle();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,246,String name = attrs.getValue(STYLE_NS, "name");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,247,listStyleMap.put(name, listStyle);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,249,&& "text-properties".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,250,String fontStyle = attrs.getValue(FORMATTING_OBJECTS_NS, "font-style");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,251,if ("italic".equals(fontStyle) || "oblique".equals(fontStyle)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,254,String fontWeight = attrs.getValue(FORMATTING_OBJECTS_NS, "font-weight");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,257,&& Integer.valueOf(fontWeight) > 500)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,260,String underlineStyle = attrs.getValue(STYLE_NS, "text-underline-style");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,265,if ("list-level-style-bullet".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,266,listStyle.ordered = false;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,268,listStyle.ordered = true;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,272,textNodeStack.set(nodeDepth++,
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,273,isTextNode(namespaceURI, localName));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,275,assert completelyFiltered >= 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,277,if (needsCompleteFiltering(namespaceURI, localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,278,completelyFiltered++;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,281,if (completelyFiltered == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,284,if (TEXT_NS.equals(namespaceURI) && "h".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,285,final String el = headingStack.push(getXHTMLHeaderTagName(attrs));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,286,handler.startElement(XHTMLContentHandler.XHTML, el, el, EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,288,startList(attrs.getValue(TEXT_NS, "style-name"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,290,startSpan(attrs.getValue(TEXT_NS, "style-name"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,292,super.startElement(namespaceURI, localName, qName, attrs);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,298,public void endElement(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,300,throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,301,if (STYLE_NS.equals(namespaceURI) && "style".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,304,listStyle = null;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,308,if (completelyFiltered == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,311,if (TEXT_NS.equals(namespaceURI) && "h".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,312,final String el = headingStack.pop();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,315,endList();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,322,super.endElement(namespaceURI, localName, qName);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,328,|| "tab".equals(localName))) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,329,this.characters(TAB, 0, TAB.length);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,334,if (needsCompleteFiltering(namespaceURI, localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,335,completelyFiltered--;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,337,assert completelyFiltered >= 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,340,nodeDepth--;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,341,assert nodeDepth >= 0;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,345,public void startPrefixMapping(String prefix, String uri) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,350,public void endPrefixMapping(String prefix) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,355,public static final String TEXT_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,358,public static final String TABLE_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,361,public static final String STYLE_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,364,public static final String FORMATTING_OBJECTS_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,367,public static final String OFFICE_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,370,public static final String SVG_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,373,public static final String PRESENTATION_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,376,public static final String DRAW_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,379,public static final String XLINK_NS = "http://www.w3.org/1999/xlink";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,381,protected static final char[] TAB = new char[]{'\t'};
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,383,private static final Attributes EMPTY_ATTRIBUTES = new AttributesImpl();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,390,private static final HashMap<QName, TargetElement> MAPPINGS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,391,new HashMap<QName, TargetElement>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,393,static {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,395,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,396,new QName(TEXT_NS, "p"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,397,new TargetElement(XHTML, "p"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,399,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,400,new QName(TEXT_NS, "line-break"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,401,new TargetElement(XHTML, "br"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,402,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,403,new QName(TEXT_NS, "list-item"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,404,new TargetElement(XHTML, "li"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,405,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,406,new QName(TEXT_NS, "note"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,408,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,409,new QName(OFFICE_NS, "annotation"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,411,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,412,new QName(PRESENTATION_NS, "notes"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,414,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,415,new QName(DRAW_NS, "object"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,416,new TargetElement(XHTML, "object"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,417,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,418,new QName(DRAW_NS, "text-box"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,419,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,420,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,421,new QName(SVG_NS, "title"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,422,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,423,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,424,new QName(SVG_NS, "desc"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,425,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,426,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,427,new QName(TEXT_NS, "span"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,428,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,430,final HashMap<QName, QName> aAttsMapping =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,431,new HashMap<QName, QName>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,432,aAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,433,new QName(XLINK_NS, "href"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,434,new QName("href"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,435,aAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,436,new QName(XLINK_NS, "title"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,437,new QName("title"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,438,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,439,new QName(TEXT_NS, "a"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,440,new TargetElement(XHTML, "a", aAttsMapping));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,443,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,444,new QName(TABLE_NS, "table"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,445,new TargetElement(XHTML, "table"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,447,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,448,new QName(TABLE_NS, "table-row"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,449,new TargetElement(XHTML, "tr"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,451,final HashMap<QName, QName> tableCellAttsMapping =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,452,new HashMap<QName, QName>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,453,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,454,new QName(TABLE_NS, "number-columns-spanned"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,455,new QName("colspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,456,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,457,new QName(TABLE_NS, "number-rows-spanned"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,458,new QName("rowspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,465,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,466,new QName(TABLE_NS, "number-columns-repeated"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,467,new QName("colspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,468,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,469,new QName(TABLE_NS, "table-cell"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,470,new TargetElement(XHTML, "td", tableCellAttsMapping));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,491,DefaultHandler dh = new OpenDocumentElementMappingContentHandler(handler, MAPPINGS);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,114,protected ContentHandler getContentHandler(ContentHandler ch, Metadata md, ParseContext context) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,117,ch = new TeeContentHandler(super.getContentHandler(ch, md, context),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,313,handler.endElement(XHTMLContentHandler.XHTML, el, el);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java,77,private Float averageCharTolerance;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParserConfig.java,80,private Float spacingTolerance;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,153,while ((bytesRead = reader.read(buffer, 0, Math.min(max, 1024))) >= 0) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,95,private static final String WORKBOOK_ENTRY = "Workbook";
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,150,if (!root.hasEntry(WORKBOOK_ENTRY)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,160,return;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,306,DocumentInputStream documentInputStream = root.createDocumentInputStream(WORKBOOK_ENTRY);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java,205,return XLS;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,247,metadata.set(tag.getTagName(), tag.getDescription());
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,275,metadata.set(name, value);
tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java,196,CheckedHashSet<Charset> charSetList= (CheckedHashSet<Charset>) defaultMetaData.getCharacterSets();
tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java,197,for(Charset c:charSetList){
tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java,252,CheckedHashSet<Locale> localeCheckedHashSet= (CheckedHashSet<Locale>) defaultDataIdentification.getLanguages();
tika-parsers/src/main/java/org/apache/tika/parser/geoinfo/GeographicInformationParser.java,253,for(Locale l:localeCheckedHashSet){
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java,210,names.contains("EncryptionInfo") &&
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java,211,names.contains("\u0006DataSpaces")) {
tika-core/src/main/java/org/apache/tika/fork/InputStreamResource.java,40,return e;
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,134,FileOutputStream fos = null;
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,135,TikaInputStream tis = null;
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,141,fos = new FileOutputStream(file);
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,142,ImageIO.write(bImage, "png", fos);
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,143,tis = TikaInputStream.get(file);
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,144,parse(tis, handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,149,tis.close();
tika-parsers/src/main/java/org/apache/tika/parser/ocr/TesseractOCRParser.java,151,fos.close();
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,571,if (!inParagraph) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,609,if (inParagraph) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,587,out.startElement("li");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,589,out.startElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,619,out.endElement("li");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,621,out.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,625,start("p");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,996,out.endElement(isUnorderedList(listID) ? "ul" : "ol");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,1011,out.startElement(isUnorderedList(listID) ? "ul" : "ol");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,1426,out.endElement("a");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,281,private int fontTableState;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,1106,if (!groupState.ignore && (equals("par") || equals("pard") || equals("sect") || equals("sectd") || equals("plain") || equals("ltrch") || equals("rtlch"))) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,77,private boolean curStrikeThrough;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,78,private boolean curBold;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,79,private boolean curItalic;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,365,if (cr.isBold() != curBold) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,367,if (curStrikeThrough) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,368,xhtml.endElement("s");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,369,curStrikeThrough = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,371,if (curItalic) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,372,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,373,curItalic = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,375,if (cr.isBold()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,376,xhtml.startElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,378,xhtml.endElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,380,curBold = cr.isBold();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,383,if (cr.isItalic() != curItalic) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,385,if (curStrikeThrough) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,386,xhtml.endElement("s");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,387,curStrikeThrough = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,389,if (cr.isItalic()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,390,xhtml.startElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,392,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,394,curItalic = cr.isItalic();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,397,if (cr.isStrikeThrough() != curStrikeThrough) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,398,if (cr.isStrikeThrough()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,399,xhtml.startElement("s");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,401,xhtml.endElement("s");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,403,curStrikeThrough = cr.isStrikeThrough();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,218,fmtg = closeStyleTags(xhtml, fmtg);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,222,fmtg.setBold(false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,223,fmtg.setItalic(false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,225,fmtg = processRun((XWPFRun) run, paragraph, xhtml, fmtg);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,228,closeStyleTags(xhtml, fmtg);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,269,private TmpFormatting closeStyleTags(XHTMLContentHandler xhtml,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,270,TmpFormatting fmtg) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,272,if (fmtg.isItalic()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,273,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,274,fmtg.setItalic(false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,276,if (fmtg.isBold()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,277,xhtml.endElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,278,fmtg.setBold(false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,280,return fmtg;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,283,private TmpFormatting processRun(XWPFRun run, XWPFParagraph paragraph,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,287,if (run.isBold() != tfmtg.isBold()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,288,if (tfmtg.isItalic()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,289,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,290,tfmtg.setItalic(false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,292,if (run.isBold()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,293,xhtml.startElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,295,xhtml.endElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,297,tfmtg.setBold(run.isBold());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,300,if (run.isItalic() != tfmtg.isItalic()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,301,if (run.isItalic()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,302,xhtml.startElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,304,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,306,tfmtg.setItalic(run.isItalic());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,344,return tfmtg;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,432,private class TmpFormatting {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,433,private boolean bold = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,434,private boolean italic = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,437,this.bold = bold;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,438,this.italic = italic;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,441,public boolean isBold() {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,442,return bold;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,445,public void setBold(boolean bold) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,446,this.bold = bold;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,449,public boolean isItalic() {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,450,return italic;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,453,public void setItalic(boolean italic) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,454,this.italic = italic;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,125,private static IWORKDocumentType detectType(InputStream stream) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/POIFSContainerDetector.java,351,File file = stream.getFile();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,72,InputStream shield = new CloseShieldInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,73,pkg = OPCPackage.open(shield);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,77,MediaType type = ZipContainerDetector.detectOfficeOpenXML(pkg);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,45,import org.apache.tika.exception.TikaException;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,47,import org.apache.tika.io.TemporaryResources;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,78,TemporaryResources tmp = new TemporaryResources();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,80,TikaInputStream tis = TikaInputStream.get(input, tmp);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,82,byte[] prefix = new byte[1024]; // enough for all known formats
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,83,int length = tis.peek(prefix);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,85,MediaType type = detectArchiveFormat(prefix, length);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,88,return detectZipFormat(tis);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,90,return type;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,92,return detectCompressorFormat(prefix, length);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,95,try {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,96,tmp.dispose();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,139,private static MediaType detectZipFormat(TikaInputStream tis) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,167,try {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,168,zip.close();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,216,type = detectXPSOPC(pkg);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,220,type = detectAutoCADOPC(pkg);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,281,PackageRelationshipCollection xps =
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,282,pkg.getRelationshipsByType("http://schemas.microsoft.com/xps/2005/06/fixedrepresentation");
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,283,if (xps.size() == 1) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,284,return MediaType.application("vnd.ms-xpsdocument");
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,287,return null;
tika-core/src/main/java/org/apache/tika/parser/ParsingReader.java,257,if (throwable instanceof IOException) {
tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java,22,import java.util.Date;
tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java,67,USER_INTERRUPTION,
tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java,213,causeForTermination = CAUSE_FOR_TERMINATION.USER_INTERRUPTION;
tika-batch/src/main/java/org/apache/tika/batch/BatchProcess.java,317,if (state.causeForTermination == CAUSE_FOR_TERMINATION.USER_INTERRUPTION
tika-batch/src/main/java/org/apache/tika/batch/BatchProcessDriverCLI.java,238,process.destroy();
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,1,package org.apache.tika.batch;
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,20,import java.io.BufferedReader;
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,21,import java.io.IOException;
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,22,import java.io.InputStreamReader;
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,40,public IFileProcessorFutureResult call(){
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,43,while (true){
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,44,if (reader.ready()){
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,45,reader.readLine();
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,46,break;
tika-batch/src/main/java/org/apache/tika/batch/Interrupter.java,48,Thread.sleep(1000);
tika-batch/src/main/java/org/apache/tika/batch/InterrupterFutureResult.java,1,package org.apache.tika.batch;
tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java,138,interrupter = buildInterrupter(keyNodes.get("interrupter"), runtimeAttributes);
tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java,158,private Interrupter buildInterrupter(Node node, Map<String, String> runtimeAttributes) {
tika-batch/src/main/java/org/apache/tika/batch/builders/BatchProcessBuilder.java,166,return builder.build(node, runtimeAttributes);
tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java,30,public Interrupter build(Node n, Map<String, String> commandlineArguments) {
tika-batch/src/main/java/org/apache/tika/batch/builders/InterrupterBuilder.java,31,return new Interrupter();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,479,xhtml.startElement("a", "href", url);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,68,xhtml.startDocument();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,75,CompositeTagHandler tag = new CompositeTagHandler(audioAndTags.tags);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,77,metadata.set(TikaCoreProperties.TITLE, tag.getTitle());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,78,metadata.set(TikaCoreProperties.CREATOR, tag.getArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,79,metadata.set(XMPDM.ARTIST, tag.getArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,80,metadata.set(XMPDM.ALBUM_ARTIST, tag.getAlbumArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,81,metadata.set(XMPDM.COMPOSER, tag.getComposer());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,82,metadata.set(XMPDM.ALBUM, tag.getAlbum());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,83,metadata.set(XMPDM.COMPILATION, tag.getCompilation());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,84,metadata.set(XMPDM.RELEASE_DATE, tag.getYear());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,85,metadata.set(XMPDM.GENRE, tag.getGenre());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,87,List<String> comments = new ArrayList<String>();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,88,for (ID3Comment comment : tag.getComments()) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,89,StringBuffer cmt = new StringBuffer();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,90,if (comment.getLanguage() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,91,cmt.append(comment.getLanguage());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,92,cmt.append(" - ");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,94,if (comment.getDescription() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,95,cmt.append(comment.getDescription());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,96,if (comment.getText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,97,cmt.append("\n");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,100,if (comment.getText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,101,cmt.append(comment.getText());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,104,comments.add(cmt.toString());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,105,metadata.add(XMPDM.LOG_COMMENT.getName(), cmt.toString());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,108,xhtml.element("h1", tag.getTitle());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,109,xhtml.element("p", tag.getArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,126,xhtml.element("p", String.valueOf(audioAndTags.duration));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,127,for (String comment : comments) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,128,xhtml.element("p", comment);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,131,if (audioAndTags.duration > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,132,metadata.set(XMPDM.DURATION, audioAndTags.duration);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,134,if (audioAndTags.audio != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,135,metadata.set("samplerate", String.valueOf(audioAndTags.audio.getSampleRate()));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,136,metadata.set("channels", String.valueOf(audioAndTags.audio.getChannels()));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,137,metadata.set("version", audioAndTags.audio.getVersion());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,139,metadata.set(
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,140,XMPDM.AUDIO_SAMPLE_RATE,
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,141,Integer.toString(audioAndTags.audio.getSampleRate()));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,142,if(audioAndTags.audio.getChannels() == 1) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,143,metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, "Mono");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,145,metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, "Stereo");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,147,metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, "5.1");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,149,metadata.set(XMPDM.AUDIO_CHANNEL_TYPE, "7.1");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,19,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,20,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,40,import org.apache.tika.exception.TikaException;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,72,HeadersFooters hf = slide.getHeadersFooters();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,73,if (hf != null && hf.isHeaderVisible() && hf.getHeaderText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,74,xhtml.startElement("p", "class", "slide-header");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,76,xhtml.characters(hf.getHeaderText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,78,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,82,extractMaster(xhtml, slide.getMasterSheet());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,101,if (hf != null && hf.isFooterVisible() && hf.getFooterText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,102,xhtml.startElement("p", "class", "slide-footer");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,104,xhtml.characters(hf.getFooterText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,106,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,110,for (Comment comment : slide.getComments()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,111,xhtml.startElement("p", "class", "slide-comment");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,121,if (comment.getText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,122,xhtml.characters(comment.getText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,124,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,146,if (notes == null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,147,continue;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,149,Integer id = notes._getSheetNumber();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,150,if (seenNotes.contains(id)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,151,continue;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,153,seenNotes.add(id);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,156,if (hf != null && hf.isHeaderVisible() && hf.getHeaderText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,157,xhtml.startElement("p", "class", "slide-note-header");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,158,xhtml.characters(hf.getHeaderText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,159,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,166,if (hf != null && hf.isFooterVisible() && hf.getFooterText() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,167,xhtml.startElement("p", "class", "slide-note-footer");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,168,xhtml.characters(hf.getFooterText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,169,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,273,try {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,274,shapes = slide.getShapes();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,84,extractContent(slideLayout.getShapes(), true, xhtml, null);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,87,XSLFSheet slideMaster = slideLayout.getMasterSheet();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,88,extractContent(slideMaster.getShapes(), true, xhtml, null);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,92,if (slideNotes != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,93,extractContent(slideNotes.getShapes(), false, xhtml, slideDesc);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,204,mpegStream.skipFrame();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,205,frame = mpegStream.nextFrame();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/MpegStream.java,161,currentHeader = null;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,59,import org.xml.sax.InputSource;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,62,import org.xml.sax.XMLReader;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,167,private void processShapes(List<XSSFShape> shapes, XHTMLContentHandler xhtml) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,20,import java.util.ArrayList;
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,21,import java.util.BitSet;
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,22,import java.util.List;
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,23,import java.util.Locale;
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,123,elements = new ArrayList<RecordedElement>();
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,233,for (char[] chars : element.getCharacters()) {
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,236,if (validCharacterRuns.get(curCharsIndex)) {
tika-parsers/src/main/java/org/apache/tika/parser/html/BoilerpipeContentHandler.java,240,if (!Character.isWhitespace(chars[chars.length - 1])) {
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,159,TesseractOCRConfig ocrConfig = new TesseractOCRConfig();
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,160,PDFParserConfig pdfParserConfig = new PDFParserConfig();
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,168,parseContext.set(TesseractOCRConfig.class, ocrConfig);
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,169,parseContext.set(PDFParserConfig.class, pdfParserConfig);
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,49,new HashMap<MediaType, MediaType>();
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,77,SortedSet<MediaType> aliases = new TreeSet<MediaType>();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,100,private final Map<MediaType, MimeType> types =
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,101,new HashMap<MediaType, MimeType>();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,19,import java.io.ByteArrayInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,20,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,21,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,22,import java.util.Enumeration;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,23,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,24,import java.util.Iterator;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,25,import java.util.Locale;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,26,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,27,import java.util.regex.Pattern;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,40,import org.apache.poi.openxml4j.opc.PackageAccess;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,208,OPCPackage pkg = OPCPackage.open(stream.getFile().getPath(), PackageAccess.READ);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,209,stream.setOpenContainer(pkg);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,212,MediaType type = detectOfficeOpenXML(pkg);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,213,if (type != null) return type;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,217,if (type != null) return type;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,221,if (type != null) return type;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,224,return null;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,229,return null;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,233,return null;
tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java,140,super.startElement(XHTML, "html", "html", EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,19,import java.net.MalformedURLException;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,20,import java.net.URL;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,21,import java.util.Arrays;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,22,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,23,import java.util.Locale;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,24,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,25,import java.util.regex.Matcher;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,26,import java.util.regex.Pattern;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,19,import java.awt.*;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,473,break;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,478,break;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,567,while (currentRow < entry.getKey().y) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,568,handler.endElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,569,handler.endElement("tr");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,570,handler.startElement("tr");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,571,handler.startElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,572,currentRow++;
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,64,Charset charset = reader.getCharset();
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,67,metadata.set(Metadata.CONTENT_ENCODING, charset.name());
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,70,metadata);
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,72,xhtml.startDocument();
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,77,xhtml.startElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,79,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,65,MediaType type = new MediaType(MediaType.TEXT_PLAIN, charset);
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,69,XHTMLContentHandler xhtml = new XHTMLContentHandler(handler,
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,75,String line;
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,76,while ((line = reader.readLine()) != null) {
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,78,xhtml.characters(line);
tika-parsers/src/main/java/org/apache/tika/parser/envi/EnviHeaderParser.java,82,xhtml.endDocument();
tika-core/src/main/java/org/apache/tika/parser/RecursiveParserWrapper.java,73,public class RecursiveParserWrapper implements Parser {
tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java,56,if (cp.contains(" ")){
tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java,57,cp = "\""+cp+"\"";
tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java,71,jvmOpts.put("-Dlog4j.configuration=\"log4j_batch_process.properties\"", "");
tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java,79,fullCommand.add(e.getValue());
tika-app/src/main/java/org/apache/tika/cli/BatchCommandLineBuilder.java,87,fullCommand.add(e.getValue());
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,148,if (password == null) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,149,sevenz = new SevenZFile(tstream.getFile());
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,151,sevenz = new SevenZFile(tstream.getFile(), password.getBytes("UnicodeLittleUnmarked"));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,87,&& TikaInputStream.isTikaInputStream(input)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,236,stream = TikaInputStream.get(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,237,fs.createDocumentInputStream("CONTENTS"));
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,105,Map<MediaType, Parser> parsers = ((AutoDetectParser)parser).getParsers();
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,106,parsers.put(MediaType.APPLICATION_XML, new HtmlParser());
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,107,((AutoDetectParser)parser).setParsers(parsers);
tika-core/src/main/java/org/apache/tika/fork/ClassLoaderProxy.java,115,return defineClass(name, data, 0, data.length);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,19,import static org.apache.tika.metadata.HttpHeaders.CONTENT_TYPE;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,61,protected ChmBlockInfo getChmBlockInfo(DirectoryListingEntry dle,
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,62,int bytesPerBlock, ChmLzxcControlData clcd,
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,63,ChmBlockInfo chmBlockInfo) throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,65,throw new ChmParsingException("Please check you parameters");
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,67,chmBlockInfo.setStartBlock(dle.getOffset() / bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,69,/ bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,70,chmBlockInfo.setStartOffset(dle.getOffset() % bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,72,% bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,74,chmBlockInfo
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,75,.setIniBlock(chmBlockInfo.startBlock -
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,76,chmBlockInfo.startBlock % (int) clcd.getResetInterval());
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,79,return chmBlockInfo;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,84,ChmLzxcControlData clcd) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,115,private boolean validateParameters(DirectoryListingEntry dle,
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,259,ChmBlockInfo bb = ChmBlockInfo.getChmBlockInfoInstance(
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,261,.getBlockLen(), getChmLzxcControlData());
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,274,for (int j = bb.getIniBlock(); j <= bb.getStartBlock(); j++) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,289,start = bb.getIniBlock();
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,305,for (i = start; i <= bb.getEndBlock();) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,306,if (i == bb.getStartBlock() && i == bb.getEndBlock()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,308,bb.getStartOffset(), bb.getEndOffset()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,312,if (i == bb.getStartBlock()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,314,bb.getStartOffset()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,317,if (i > bb.getStartBlock() && i < bb.getEndBlock()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,321,if (i == bb.getEndBlock()) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmExtractor.java,323,0, bb.getEndOffset()));
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,40,private static ChmBlockInfo chmBlockInfo = null;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,42,private ChmBlockInfo() {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,85,setChmBlockInfo(new ChmBlockInfo());
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,86,getChmBlockInfo().setStartBlock(dle.getOffset() / bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,87,getChmBlockInfo().setEndBlock(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,89,getChmBlockInfo().setStartOffset(dle.getOffset() % bytesPerBlock);
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,90,getChmBlockInfo().setEndOffset(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,93,getChmBlockInfo().setIniBlock(
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,94,getChmBlockInfo().startBlock - getChmBlockInfo().startBlock
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,98,return getChmBlockInfo();
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,228,public static void setChmBlockInfo(ChmBlockInfo chmBlockInfo) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,229,ChmBlockInfo.chmBlockInfo = chmBlockInfo;
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,232,public static ChmBlockInfo getChmBlockInfo() {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmBlockInfo.java,233,return chmBlockInfo;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,340,if (curStrikeThrough) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,341,xhtml.endElement("s");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,342,curStrikeThrough = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,344,if (curItalic) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,345,xhtml.endElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,346,curItalic = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,348,if (curBold) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,349,xhtml.endElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,350,curBold = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,213,TmpFormatting fmtg = new TmpFormatting(false, false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,436,private TmpFormatting(boolean bold, boolean italic) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,1078,System.err.println(msg);
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,95,this(file, new ServiceLoader());
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,195,this.mimeTypes = getDefaultMimeTypes(ServiceLoader.getContextClassLoader());
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,19,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,20,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,58,private XHTMLContentHandler handler;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,59,private Metadata metadata;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,60,private EmbeddedDocumentExtractor extractor;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,62,private boolean inPart = false;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,64,MailContentHandler(XHTMLContentHandler xhtml, Metadata metadata, ParseContext context, boolean strictParsing) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,109,if (extractor.shouldParseEmbedded(submd)) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,146,inPart = false;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,161,if (inPart) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,262,inPart = true;
tika-parsers/src/main/java/org/apache/tika/parser/mail/RFC822Parser.java,73,xhtml, metadata, context, config.isStrictParsing());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,188,boolean doneBody = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,189,xhtml.startElement("div", "class", "message-body");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,190,if (htmlChunk != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,191,byte[] data = null;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,192,if (htmlChunk instanceof ByteChunk) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,193,data = ((ByteChunk) htmlChunk).getValue();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,195,data = ((StringChunk) htmlChunk).getRawValue();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,197,if (data != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,199,htmlParser.parse(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,200,new ByteArrayInputStream(data),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,201,new EmbeddedContentHandler(new BodyContentHandler(xhtml)),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,203,);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,204,doneBody = true;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,207,if (rtfChunk != null && !doneBody) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,208,ByteChunk chunk = (ByteChunk) rtfChunk;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,209,MAPIRtfAttribute rtf = new MAPIRtfAttribute(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,211,);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,213,rtfParser.parse(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,214,new ByteArrayInputStream(rtf.getData()),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,215,new EmbeddedContentHandler(new BodyContentHandler(xhtml)),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,217,doneBody = true;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,219,if (textChunk != null && !doneBody) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,220,xhtml.element("p", ((StringChunk) textChunk).getValue());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,222,xhtml.endElement("div");
tika-parsers/src/main/java/org/apache/tika/parser/mail/RFC822Parser.java,69,MimeStreamParser parser = new MimeStreamParser(config);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,213,fRawLength = in.length;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,244,int remainingLength = kBufSize;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,245,while (remainingLength > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,248,if (bytesRead <= 0) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,249,break;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,252,remainingLength -= bytesRead;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,254,fInputStream.reset();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,240,fRawInput = new byte[kBufSize];   // Always make a new buffer because the
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,243,fRawLength = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,247,int bytesRead = fInputStream.read(fRawInput, fRawLength, remainingLength);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,251,fRawLength += bytesRead;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,256,MungeInput();                     // Strip html markup, collect byte stats.
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,257,return this;
tika-parsers/src/main/java/org/apache/tika/parser/image/PSDParser.java,190,data = new byte[dataLen];
tika-parsers/src/main/java/org/apache/tika/parser/image/PSDParser.java,191,IOUtils.readFully(stream, data);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java,153,Locale locale = context.get(Locale.class, Locale.getDefault());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,57,Locale locale = context.get(Locale.class, Locale.getDefault());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,101,extractor = new XWPFWordExtractorDecorator(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,59,public XSLFPowerPointExtractorDecorator(ParseContext context, XSLFPowerPointExtractor extractor) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,72,public XWPFWordExtractorDecorator(ParseContext context, XWPFWordExtractor extractor) {
tika-core/src/main/java/org/apache/tika/parser/DigestingParser.java,71,if (digester != null) {
tika-core/src/main/java/org/apache/tika/parser/DigestingParser.java,72,digester.digest(stream, metadata, context);
tika-core/src/main/java/org/apache/tika/parser/DigestingParser.java,74,super.parse(stream, handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,62,return TikaCoreProperties.TIKA_META_PREFIX+
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,131,InputStream is, Metadata metadata) throws IOException {
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,161,if (((SimpleBoundedInputStream)is).hasHitBound()) {
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,175,assert(s != null);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,257,if (max>=0 && pos>=max) {
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,260,final long maxRead = max>=0 ? Math.min(len, max-pos) : len;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,261,final int bytesRead = in.read(b, off, (int)maxRead);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,263,if (bytesRead==EOF) {
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,267,pos+=bytesRead;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,279,final long toSkip = max>=0 ? Math.min(n, max-pos) : n;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,281,pos+=skippedBytes;
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,60,import org.apache.tika.io.TikaInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,124,InputStream stream = iter.next();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,128,CommentsTable comments = iter.getSheetComments();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,131,xhtml.startElement("div");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,132,xhtml.element("h1", iter.getSheetName());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,135,xhtml.startElement("table");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,136,xhtml.startElement("tbody");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,138,processSheet(sheetExtractor, comments, styles, strings, stream);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,143,MediaType type = detectOpenDocument(zip);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,144,if (type == null) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,145,type = detectOPCBased(zip, tis);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,203,private static MediaType detectOPCBased(ZipFile zip, TikaInputStream stream) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,205,if (zip.getEntry("_rels/.rels") != null
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,206,|| zip.getEntry("[Content_Types].xml") != null) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,226,return null;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,84,MediaType.set(ZIP, JAR, AR, CPIO, DUMP, TAR, SEVENZ);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,30,import org.apache.commons.compress.archivers.ArchiveInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,31,import org.apache.commons.compress.archivers.ArchiveStreamFactory;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,32,import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,120,ArchiveStreamFactory factory = new ArchiveStreamFactory();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,121,ArchiveInputStream ais = factory.createArchiveInputStream(
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,122,new ByteArrayInputStream(prefix, 0, length));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,123,try {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,125,&& !TarArchiveInputStream.matches(prefix, length)) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,127,return MediaType.OCTET_STREAM;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,129,return PackageParser.getMediaType(ais);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/ZipContainerDetector.java,132,IOUtils.closeQuietly(ais);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,165,MediaType type = getMediaType(ais);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,166,if (!type.equals(MediaType.OCTET_STREAM)) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,167,metadata.set(CONTENT_TYPE, type.toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParser.java,45,Collections.unmodifiableSet(new HashSet<MediaType>(Arrays.asList(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParser.java,46,MediaType.application("x-tika-ooxml"),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLParser.java,61,MediaType.application("vnd.ms-word.template.macroenabled.12"))));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,181,parseEntry(ais, entry, extractor, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,230,xhtml.element("p", name);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,407,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,410,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,413,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/feed/FeedParser.java,120,StringBuffer buf = new StringBuffer();
tika-core/src/main/java/org/apache/tika/detect/AutoDetectReader.java,95,BufferedInputStream stream, Metadata metadata,
tika-core/src/main/java/org/apache/tika/detect/AutoDetectReader.java,104,this(new BufferedInputStream(stream), metadata,
tika-core/src/main/java/org/apache/tika/detect/AutoDetectReader.java,111,this(new BufferedInputStream(stream), metadata, DEFAULT_LOADER);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,248,mediaType = "application/x-emf";
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,257,mediaType = "application/x-msmetafile";
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,53,private static final MediaType CANONICAL_BMP_TYPE = MediaType.image("x-ms-bmp");
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,54,private static final MediaType JAVA_BMP_TYPE = MediaType.image("bmp");
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,156,if (CANONICAL_BMP_TYPE.toString().equals(type)) {
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,157,type = JAVA_BMP_TYPE.toString();
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,19,import java.io.BufferedInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,20,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,21,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,22,import java.util.Arrays;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,23,import java.util.Collections;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,24,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,25,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,68,InputStream buffered = new BufferedInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,70,Sequence sequence = MidiSystem.getSequence(buffered);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,83,private TextStyle textStyle;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,84,private TextStyle lastTextStyle;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,100,lazyEndSpan();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,171,TextStyle style = textStyleMap.get(name);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,172,if (style == null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,173,return;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,177,if (!style.underlined && lastTextStyle != null && lastTextStyle.underlined) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,178,handler.endElement(XHTML, "u", "u");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,180,if (!style.italic && lastTextStyle != null && lastTextStyle.italic) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,181,handler.endElement(XHTML, "i", "i");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,183,if (!style.bold && lastTextStyle != null && lastTextStyle.bold) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,184,handler.endElement(XHTML, "b", "b");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,188,if (style.bold && (lastTextStyle == null || !lastTextStyle.bold)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,189,handler.startElement(XHTML, "b", "b", EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,191,if (style.italic && (lastTextStyle == null || !lastTextStyle.italic)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,192,handler.startElement(XHTML, "i", "i", EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,194,if (style.underlined && (lastTextStyle == null || !lastTextStyle.underlined)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,195,handler.startElement(XHTML, "u", "u", EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,198,textStyle = style;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,199,lastTextStyle = null;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,203,lastTextStyle = textStyle;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,204,textStyle = null;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,207,private void lazyEndSpan() throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,208,if (lastTextStyle == null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,209,return;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,212,if (lastTextStyle.underlined) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,213,handler.endElement(XHTML, "u", "u");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,215,if (lastTextStyle.italic) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,216,handler.endElement(XHTML, "i", "i");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,218,if (lastTextStyle.bold) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,219,handler.endElement(XHTML, "b", "b");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,222,lastTextStyle = null;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,240,textStyle = new TextStyle();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,241,String name = attrs.getValue(STYLE_NS, "name");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,242,textStyleMap.put(name, textStyle);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,252,textStyle.italic = true;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,258,textStyle.bold = true;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,261,if (underlineStyle != null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,262,textStyle.underlined = true;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,302,textStyle = null;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,317,endSpan();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,319,if (TEXT_NS.equals(namespaceURI) && "p".equals(localName)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,320,lazyEndSpan();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,152,processShapes(iter.getShapes(), xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,56,private Metadata metadata;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,62,protected AbstractPOIFSExtractor(ParseContext context, Metadata metadata) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,75,this.metadata = metadata;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,106,return passwordProvider.getPassword(metadata);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,153,MediaType type = detector.detect(stream, new Metadata());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,212,throw new TikaException("Invalid embedded resource", e);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,49,super(context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,75,protected JackcessExtractor(ParseContext context, Locale locale) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,76,super(context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,81,public void parse(Database db, XHTMLContentHandler xhtml, Metadata metadata) throws IOException, SAXException, TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,86,metadata.set(JackcessParser.MDB_PW, pw);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,91,metadata.add(JackcessParser.MDB_PROPERTY_PREFIX + p.getName(),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,97,metadata.add(JackcessParser.USER_DEFINED_PROPERTY_PREFIX+ p.getName(),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,107,metadata.set(TikaCoreProperties.TITLE, toString(title.getValue(), title.getType()));
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,117,metadata.set(OfficeOpenXMLExtended.COMPANY, toString(company.getValue(), company.getType()));
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,123,metadata.add(JackcessParser.SUMMARY_PROPERTY_PREFIX + p.getName(),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,301,handleEmbeddedResource(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,302,TikaInputStream.get(spc.getStream()),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,303,spc.getFileName(),//filename
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,304,null,//relationshipId
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,305,spc.getTypeName(),//mediatype
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,306,xhtml, false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,310,handleEmbeddedResource(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,311,TikaInputStream.get(oc.getStream()),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,312,null,//filename
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,313,null,//relationshipId
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,314,oc.getTypeName(),//mediatype
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessExtractor.java,315,xhtml, false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java,101,JackcessExtractor ex = new JackcessExtractor(context, locale);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/JackcessParser.java,102,ex.parse(db, xhtml, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,113,handleEmbeddedParts(handler);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,171,URI sourceURI = rel.getSourceURI();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,172,String sourceDesc;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,173,if (sourceURI != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,174,sourceDesc = getJustFileName(sourceURI.getPath());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,175,if (sourceDesc.startsWith("slide")) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,176,sourceDesc += "_";
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,178,sourceDesc = "";
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,181,sourceDesc = "";
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,183,if (rel.getTargetMode() == TargetMode.INTERNAL) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,184,PackagePart target;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,186,try {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,187,target = source.getRelatedPart(rel);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,189,continue;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,192,String type = rel.getRelationshipType();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,194,&& TYPE_OLE_OBJECT.equals(target.getContentType())) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,195,handleEmbeddedOLE(target, handler, sourceDesc + rel.getId());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,199,|| RELATION_OLE_OBJECT.equals(type)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,200,handleEmbeddedFile(target, handler, sourceDesc + rel.getId());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,222,POIFSFileSystem fs = new POIFSFileSystem(part.getInputStream());
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,19,import java.io.ByteArrayInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,372,new ByteArrayInputStream(buffer.toByteArray()),
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFObjDataParser.java,111,if (NPOIFSFileSystem.hasPOIFSHeader(embIs)) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/TextExtractor.java,1347,embObjHandler.handleCompletedObject();
tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java,36,import org.apache.tika.sax.XHTMLContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java,56,final XHTMLContentHandler xhtml =
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java,28,import org.apache.tika.extractor.EmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java,29,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java,49,protected static EmbeddedDocumentExtractor getEmbeddedDocumentExtractor(ParseContext context) {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java,50,return context.get(EmbeddedDocumentExtractor.class,
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/AbstractDBParser.java,51,new ParsingEmbeddedDocumentExtractor(context));
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,22,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,36,import org.apache.tika.extractor.EmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,44,import org.apache.tika.mime.MediaType;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,45,import org.apache.tika.mime.MimeType;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,46,import org.apache.tika.mime.MimeTypeException;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,66,private TikaConfig tikaConfig = null;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,67,private Detector detector = null;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,68,private MimeTypes mimeTypes = null;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,73,this.tikaConfig = context.get(TikaConfig.class);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,187,EmbeddedDocumentExtractor ex = AbstractDBParser.getEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,199,InputStream is = null;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,200,EmbeddedDocumentExtractor ex = AbstractDBParser.getEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,209,MediaType mediaType = getDetector().detect(is, new Metadata());
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,210,String extension = "";
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,211,try {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,212,MimeType mimeType = getMimeTypes().forName(mediaType.toString());
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,213,m.set(Metadata.CONTENT_TYPE, mimeType.toString());
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,214,extension = mimeType.getExtension();
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,222,ex.parseEmbedded(is, handler, m, true);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,280,if (tikaConfig == null) {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,281,tikaConfig = TikaConfig.getDefaultConfig();
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,283,return tikaConfig;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,287,if (detector != null) return detector;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,289,detector = getTikaConfig().getDetector();
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,290,return detector;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,294,if (mimeTypes != null) return mimeTypes;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,296,mimeTypes = getTikaConfig().getMimeRepository();
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,297,return mimeTypes;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,38,import org.apache.tika.config.TikaConfig;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,40,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,43,import org.apache.tika.parser.AutoDetectParser;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,45,import org.apache.tika.parser.Parser;
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,73,this.extractor = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,79,if (this.extractor == null) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,81,Parser parser = context.get(AutoDetectParser.class);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,82,if (parser == null) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,83,parser = context.get(Parser.class);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,85,if (parser == null) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,86,TikaConfig tikaConfig = context.get(TikaConfig.class);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,87,if (tikaConfig == null) {
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,88,tikaConfig = TikaConfig.getDefaultConfig();
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,90,parser = new AutoDetectParser(tikaConfig.getParser());
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,92,ParseContext ctx = new ParseContext();
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,93,ctx.set(Parser.class, parser);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,94,extractor = new ParsingEmbeddedDocumentExtractor(ctx);
tika-parsers/src/main/java/org/apache/tika/parser/mbox/MboxParser.java,40,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/mbox/MboxParser.java,84,EmbeddedDocumentExtractor extractor = context.get(EmbeddedDocumentExtractor.class,
tika-parsers/src/main/java/org/apache/tika/parser/mbox/MboxParser.java,85,new ParsingEmbeddedDocumentExtractor(context));
tika-parsers/src/main/java/org/apache/tika/parser/mbox/OutlookPSTParser.java,34,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/mbox/OutlookPSTParser.java,73,EmbeddedDocumentExtractor embeddedExtractor = context.get(EmbeddedDocumentExtractor.class,
tika-parsers/src/main/java/org/apache/tika/parser/mbox/OutlookPSTParser.java,74,new ParsingEmbeddedDocumentExtractor(context));
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,34,import org.apache.tika.extractor.EmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,35,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,51,private final EmbeddedDocumentExtractor extractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,53,private TikaConfig tikaConfig;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,54,private MimeTypes mimeTypes;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,55,private Detector detector;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,63,EmbeddedDocumentExtractor ex = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,65,if (ex == null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,66,this.extractor = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,68,this.extractor = ex;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,72,this.tikaConfig = context.get(TikaConfig.class);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,73,this.mimeTypes = context.get(MimeTypes.class);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,74,this.detector = context.get(Detector.class);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,80,if (tikaConfig == null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,81,tikaConfig = TikaConfig.getDefaultConfig();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,83,return tikaConfig;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,87,if (detector != null) return detector;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,89,detector = getTikaConfig().getDetector();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,90,return detector;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,94,if (mimeTypes != null) return mimeTypes;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,96,mimeTypes = getTikaConfig().getMimeRepository();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,97,return mimeTypes;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,128,if (extractor.shouldParseEmbedded(metadata)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,129,extractor.parseEmbedded(resource, xhtml, metadata, outputHtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,220,if (extractor.shouldParseEmbedded(metadata)) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,229,extractor.parseEmbedded(embedded, xhtml, metadata, true);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,48,public HSLFExtractor(ParseContext context) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OfficeParser.java,149,new HSLFExtractor(context).parse(root, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/TNEFParser.java,33,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/TNEFParser.java,71,EmbeddedDocumentExtractor ex = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/TNEFParser.java,72,EmbeddedDocumentExtractor embeddedExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/TNEFParser.java,73,if (ex == null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/TNEFParser.java,74,embeddedExtractor = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/TNEFParser.java,76,embeddedExtractor = ex;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,41,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,76,EmbeddedDocumentExtractor ex = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,78,if (ex == null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,79,embeddedExtractor = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,81,embeddedExtractor = ex;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,64,import org.apache.tika.extractor.EmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,324,Metadata metadata = new Metadata();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,327,metadata.set(Metadata.CONTENT_TYPE, "image/jpeg");
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,330,metadata.set(Metadata.CONTENT_TYPE, "image/tiff");
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,342,metadata.set(Metadata.RESOURCE_NAME_KEY, fileName);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,361,metadata.set(TikaCoreProperties.EMBEDDED_RESOURCE_TYPE,
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,364,EmbeddedDocumentExtractor extractor =
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,365,getEmbeddedDocumentExtractor();
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,366,if (extractor.shouldParseEmbedded(metadata)) {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,371,extractor.parseEmbedded(
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,374,metadata, false);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java,37,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java,152,EmbeddedDocumentExtractor extractor = context.get(
tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java,153,EmbeddedDocumentExtractor.class,
tika-parsers/src/main/java/org/apache/tika/parser/pkg/CompressorParser.java,154,new ParsingEmbeddedDocumentExtractor(context));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,44,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,170,EmbeddedDocumentExtractor extractor = context.get(
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,171,EmbeddedDocumentExtractor.class,
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageParser.java,172,new ParsingEmbeddedDocumentExtractor(context));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java,27,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java,38,import com.github.junrar.Archive;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java,39,import com.github.junrar.exception.RarException;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java,40,import com.github.junrar.rarfile.FileHeader;
tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java,64,EmbeddedDocumentExtractor extractor = context.get(
tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java,65,EmbeddedDocumentExtractor.class,
tika-parsers/src/main/java/org/apache/tika/parser/pkg/RarParser.java,66,new ParsingEmbeddedDocumentExtractor(context));
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,24,import org.apache.tika.config.TikaConfig;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,25,import org.apache.tika.detect.Detector;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,27,import org.apache.tika.extractor.EmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,28,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,33,import org.apache.tika.mime.MediaType;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,34,import org.apache.tika.mime.MimeType;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,35,import org.apache.tika.mime.MimeTypeException;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,36,import org.apache.tika.mime.MimeTypes;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,68,private final ParseContext context;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,83,this.context = context;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,176,EmbeddedDocumentExtractor embeddedExtractor = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,178,if (embeddedExtractor == null) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,179,embeddedExtractor = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,187,extractObj(objBytes, handler, embeddedExtractor, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,198,extractObj(bytes, handler, embeddedExtractor, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,206,private void extractObj(byte[] bytes, ContentHandler handler,
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,216,if (embeddedExtractor.shouldParseEmbedded(metadata)) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,219,String extension = getExtension(stream, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,220,stream.reset();
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,230,embeddedExtractor.parseEmbedded(
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,240,private String getExtension(TikaInputStream is, Metadata metadata) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,241,String cType = metadata.get(Metadata.CONTENT_TYPE);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,242,TikaConfig config = getConfig();
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,243,if (cType == null) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,244,Detector detector = config.getDetector();
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,245,try {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,246,MediaType mediaType = detector.detect(is, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,247,MimeTypes types = config.getMimeRepository();
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,248,MimeType mime = types.forName(mediaType.toString());
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,250,return mime.getExtension();
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,257,return ".bin";
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,260,private TikaConfig getConfig() {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,261,TikaConfig config = context.get(TikaConfig.class);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,262,if (config == null) {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,263,config = TikaConfig.getDefaultConfig();
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,265,return config;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,21,import org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,31,import java.io.ByteArrayInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,32,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,33,import java.util.Collections;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,34,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,46,EmbeddedDocumentExtractor ex = context.get(EmbeddedDocumentExtractor.class);
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,48,if (ex == null) {
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,49,ex = new ParsingEmbeddedDocumentExtractor(context);
tika-parsers/src/main/java/org/apache/tika/parser/xml/FictionBookParser.java,52,return new BinaryElementsDataHandler(ex, handler);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,264,handleEmbeddedResource(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,265,TikaInputStream.get(pic.getData()), null, null,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,266,mediaType, xhtml, false);
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,90,metadata.add(Metadata.CONTENT_TYPE, PE_EXE.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,324,metadata.add(Metadata.CONTENT_TYPE, ELF_OBJECT.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,328,metadata.add(Metadata.CONTENT_TYPE, ELF_EXECUTABLE.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,332,metadata.add(Metadata.CONTENT_TYPE, ELF_SHAREDLIB.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,336,metadata.add(Metadata.CONTENT_TYPE, ELF_COREDUMP.toString());
tika-parsers/src/main/java/org/apache/tika/parser/executable/ExecutableParser.java,340,metadata.add(Metadata.CONTENT_TYPE, ELF_GENERAL.toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,148,if (paragraph.getStyleID() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSLFPowerPointExtractorDecorator.java,97,extractContent(notesMaster.getShapes(), true, xhtml, null);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,80,InputStream tis = TikaInputStream.get(is);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,81,long sz = -1;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,82,if (((TikaInputStream)tis).hasFile()) {
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,83,sz = ((TikaInputStream)tis).getLength();
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,88,if (sz > markLimit) {
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,89,digestFile(((TikaInputStream)tis).getFile(), m);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,90,return;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,96,SimpleBoundedInputStream bis = new SimpleBoundedInputStream(markLimit, tis);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,97,boolean finishedStream = false;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,98,for (DigestAlgorithm algorithm : algorithms) {
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,99,bis.mark(markLimit + 1);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,100,finishedStream = digestEach(algorithm, bis, m);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,101,bis.reset();
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,103,break;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,106,if (!finishedStream) {
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,107,digestFile(((TikaInputStream)tis).getFile(), m);
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,177,List<DigestAlgorithm> ret = new ArrayList<DigestAlgorithm>();
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,216,boolean hitBound = false;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,226,hitBound = true;
tika-parsers/src/main/java/org/apache/tika/parser/utils/CommonsDigester.java,296,return hitBound;
tika-parsers/src/main/java/org/apache/tika/parser/txt/TXTParser.java,77,MediaType type = new MediaType(MediaType.TEXT_PLAIN, charset);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java,123,addProperty(metadata, OfficeOpenXMLExtended.TOTAL_TIME, propsHolder.getTotalTime());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java,148,addProperty(metadata, Metadata.TOTAL_TIME, propsHolder.getTotalTime());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,309,boolean addedHREF = false;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,310,if (run instanceof XWPFHyperlinkRun) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,311,XWPFHyperlinkRun linkRun = (XWPFHyperlinkRun) run;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,312,XWPFHyperlink link = linkRun.getHyperlink(document);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,313,if (link != null && link.getURL() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,314,xhtml.startElement("a", "href", link.getURL());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,315,addedHREF = true;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,317,xhtml.startElement("a", "href", "#" + linkRun.getAnchor());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,318,addedHREF = true;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,340,if (addedHREF) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,341,xhtml.endElement("a");
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,123,ChmItspHeader chmItspHeader) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/accessor/ChmDirectoryListingSet.java,198,private void enumerateOneSegment(byte[] dir_chunk) throws ChmParsingException {
tika-parsers/src/main/java/org/apache/tika/parser/chm/core/ChmCommons.java,335,public static byte[] copyOfRange(byte[] original, int from, int to) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,849,public byte[] getContent(int startOffset, int endOffset) {
tika-parsers/src/main/java/org/apache/tika/parser/chm/lzx/ChmLzxBlock.java,854,public byte[] getContent(int start) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,12,import java.nio.charset.Charset;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,50,private static final int kBufSize = 12000;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,51,private static final int MAX_CONFIDENCE = 100;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,52,private static String[] fCharsetNames;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,56,private static ArrayList<CharsetRecognizer> fCSRecognizers = createRecognizers();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,64,int fInputLen;          // Length of the byte data in fInputText.
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,79,boolean fStripTags =   // If true, setText() will strip tags from input text.
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,99,return fCharsetNames;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,105,private static ArrayList<CharsetRecognizer> createRecognizers() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,106,ArrayList<CharsetRecognizer> recognizers = new ArrayList<CharsetRecognizer>();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,108,recognizers.add(new CharsetRecog_UTF8());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,110,recognizers.add(new CharsetRecog_Unicode.CharsetRecog_UTF_16_BE());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,111,recognizers.add(new CharsetRecog_Unicode.CharsetRecog_UTF_16_LE());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,112,recognizers.add(new CharsetRecog_Unicode.CharsetRecog_UTF_32_BE());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,113,recognizers.add(new CharsetRecog_Unicode.CharsetRecog_UTF_32_LE());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,115,recognizers.add(new CharsetRecog_mbcs.CharsetRecog_sjis());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,116,recognizers.add(new CharsetRecog_2022.CharsetRecog_2022JP());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,117,recognizers.add(new CharsetRecog_2022.CharsetRecog_2022CN());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,118,recognizers.add(new CharsetRecog_2022.CharsetRecog_2022KR());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,119,recognizers.add(new CharsetRecog_mbcs.CharsetRecog_euc.CharsetRecog_gb_18030());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,120,recognizers.add(new CharsetRecog_mbcs.CharsetRecog_euc.CharsetRecog_euc_jp());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,121,recognizers.add(new CharsetRecog_mbcs.CharsetRecog_euc.CharsetRecog_euc_kr());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,122,recognizers.add(new CharsetRecog_mbcs.CharsetRecog_big5());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,124,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_da());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,125,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_de());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,126,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_en());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,127,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_es());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,128,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_fr());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,129,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_it());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,130,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_nl());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,131,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_no());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,132,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_pt());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,133,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_1_sv());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,134,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_2_cs());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,135,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_2_hu());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,136,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_2_pl());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,137,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_2_ro());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,138,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_5_ru());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,139,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_6_ar());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,140,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_7_el());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,141,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_8_I_he());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,142,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_8_he());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,143,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_windows_1251());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,144,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_windows_1256());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,145,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_KOI8_R());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,146,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_8859_9_tr());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,148,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_IBM424_he_rtl());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,149,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_IBM424_he_ltr());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,150,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_IBM420_ar_rtl());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,151,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_IBM420_ar_ltr());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,153,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_EBCDIC_500_en());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,154,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_EBCDIC_500_de());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,155,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_EBCDIC_500_es());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,156,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_EBCDIC_500_fr());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,157,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_EBCDIC_500_it());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,158,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_EBCDIC_500_nl());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,160,recognizers.add(new CharsetRecog_sbcs.CharsetRecog_IBM866_ru());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,164,String[] charsetNames = new String[recognizers.size()];
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,165,int out = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,167,for (CharsetRecognizer recognizer : recognizers) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,168,String name = recognizer.getName();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,170,if (out == 0 || !name.equals(charsetNames[out - 1])) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,171,charsetNames[out++] = name;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,175,fCharsetNames = new String[out];
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,176,System.arraycopy(charsetNames, 0, fCharsetNames, 0, out);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,178,return recognizers;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,198,setCanonicalDeclaredEncoding(encoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,215,MungeInput();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,309,CharsetRecognizer csr;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,310,int i;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,311,int detectResults;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,312,int confidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,313,ArrayList<CharsetMatch> matches = new ArrayList<CharsetMatch>();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,317,for (i = 0; i < fCSRecognizers.size(); i++) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,318,csr = fCSRecognizers.get(i);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,319,detectResults = csr.match(this);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,320,confidence = detectResults & 0x000000ff;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,321,if (confidence > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,323,confidence = Math.min(confidence, MAX_CONFIDENCE);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,326,if ((fDeclaredEncoding != null) && (fDeclaredEncoding.equalsIgnoreCase(csr.getName()))) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,328,confidence += (MAX_CONFIDENCE - confidence) / 2;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,331,CharsetMatch m = new CharsetMatch(this, csr, confidence);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,332,matches.add(m);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,366,setCanonicalDeclaredEncoding(declaredEncoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,400,setCanonicalDeclaredEncoding(declaredEncoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,455,private void setCanonicalDeclaredEncoding(String encoding) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,456,if ((encoding == null) || encoding.isEmpty()) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,457,return;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,460,Charset cs = Charset.forName(encoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,461,if (cs != null) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,462,fDeclaredEncoding = cs.name();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,38,static public final int ENCODING_SCHEME = 1;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,45,static public final int BOM = 2;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,52,static public final int DECLARED_ENCODING = 4;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,59,static public final int LANG_STATISTICS = 8;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,64,private CharsetRecognizer fRecognizer;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,74,fRecognizer = rec;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,147,StringBuffer sb = new StringBuffer();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,162,result = new String(fRawInput, getName());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,197,public int getMatchType() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,199,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,218,return fRecognizer.getName();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,229,return fRecognizer.getLanguage();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,260,public boolean equals(Object o) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,261,if (o instanceof CharsetMatch) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,262,CharsetMatch that = (CharsetMatch) o;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,263,return (this.fConfidence == that.fConfidence);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,266,return false;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,273,public int hashCode() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,274,return fConfidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,278,public String toString() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,279,String s = "Match of " + fRecognizer.getName();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,280,if (fRecognizer.getLanguage() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,281,s += " in " + fRecognizer.getLanguage();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,283,s += " with confidence " + fConfidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,284,return s;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,117,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,118,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,131,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,132,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,157,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,158,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,23,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,53,if (numInvalid > 5) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,54,break;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,56,trailBytes = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,91,confidence = 10;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,96,return confidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,26,abstract int match(CharsetDetector det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,33,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,36,if (input.length >= 2 && ((input[0] & 0xFF) == 0xFE && (input[1] & 0xFF) == 0xFF)) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,37,return 100;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,41,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,50,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,53,if (input.length >= 2 && ((input[0] & 0xFF) == 0xFF && (input[1] & 0xFF) == 0xFE)) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,55,if (input.length >= 4 && input[2] == 0x00 && input[3] == 0x00) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,57,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,59,return 100;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,63,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,72,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,81,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,113,return confidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,49,int singleByteCharCount = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,159,int index = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,166,index = -1;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,198,it.index = it.nextIndex;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,222,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,223,return match(det, commonChars);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,258,it.index = it.nextIndex;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,285,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,286,return match(det, commonChars);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,314,it.index = it.nextIndex;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,395,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,396,return match(det, commonChars);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,428,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,429,return match(det, commonChars);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,465,it.index = it.nextIndex;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,522,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_mbcs.java,523,return match(det, commonChars);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,8,package org.apache.tika.parser.txt;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,10,import java.nio.ByteBuffer;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,34,protected boolean haveC1Bytes = false;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,44,abstract int match(CharsetDetector det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,53,haveC1Bytes = det.fC1Bytes;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,62,private int byteIndex = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,66,private byte[] byteMap;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,71,private byte spaceChar;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,132,private void addByte(int b) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,145,public int parse(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,146,return parse(det, (byte) 0x20);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,149,public int parse(CharsetDetector det, byte spaceCh) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,152,this.spaceChar = spaceCh;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,167,ngramCount += 4;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,190,abstract static class CharsetRecog_8859_1 extends CharsetRecog_sbcs {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,191,protected static byte[] byteMap = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,226,public String getName() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,227,return haveC1Bytes ? "windows-1252" : "ISO-8859-1";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,231,static class CharsetRecog_8859_1_da extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,232,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,233,0x206166, 0x206174, 0x206465, 0x20656E, 0x206572, 0x20666F, 0x206861, 0x206920, 0x206D65, 0x206F67, 0x2070E5, 0x207369, 0x207374, 0x207469, 0x207669, 0x616620,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,234,0x616E20, 0x616E64, 0x617220, 0x617420, 0x646520, 0x64656E, 0x646572, 0x646574, 0x652073, 0x656420, 0x656465, 0x656E20, 0x656E64, 0x657220, 0x657265, 0x657320,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,235,0x657420, 0x666F72, 0x676520, 0x67656E, 0x676572, 0x696765, 0x696C20, 0x696E67, 0x6B6520, 0x6B6B65, 0x6C6572, 0x6C6967, 0x6C6C65, 0x6D6564, 0x6E6465, 0x6E6520,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,236,0x6E6720, 0x6E6765, 0x6F6720, 0x6F6D20, 0x6F7220, 0x70E520, 0x722064, 0x722065, 0x722073, 0x726520, 0x737465, 0x742073, 0x746520, 0x746572, 0x74696C, 0x766572,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,239,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,240,return "da";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,243,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,244,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,248,static class CharsetRecog_8859_1_de extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,249,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,250,0x20616E, 0x206175, 0x206265, 0x206461, 0x206465, 0x206469, 0x206569, 0x206765, 0x206861, 0x20696E, 0x206D69, 0x207363, 0x207365, 0x20756E, 0x207665, 0x20766F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,251,0x207765, 0x207A75, 0x626572, 0x636820, 0x636865, 0x636874, 0x646173, 0x64656E, 0x646572, 0x646965, 0x652064, 0x652073, 0x65696E, 0x656974, 0x656E20, 0x657220,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,252,0x657320, 0x67656E, 0x68656E, 0x687420, 0x696368, 0x696520, 0x696E20, 0x696E65, 0x697420, 0x6C6963, 0x6C6C65, 0x6E2061, 0x6E2064, 0x6E2073, 0x6E6420, 0x6E6465,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,253,0x6E6520, 0x6E6720, 0x6E6765, 0x6E7465, 0x722064, 0x726465, 0x726569, 0x736368, 0x737465, 0x742064, 0x746520, 0x74656E, 0x746572, 0x756E64, 0x756E67, 0x766572,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,256,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,257,return "de";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,260,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,261,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,265,static class CharsetRecog_8859_1_en extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,266,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,267,0x206120, 0x20616E, 0x206265, 0x20636F, 0x20666F, 0x206861, 0x206865, 0x20696E, 0x206D61, 0x206F66, 0x207072, 0x207265, 0x207361, 0x207374, 0x207468, 0x20746F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,268,0x207768, 0x616964, 0x616C20, 0x616E20, 0x616E64, 0x617320, 0x617420, 0x617465, 0x617469, 0x642061, 0x642074, 0x652061, 0x652073, 0x652074, 0x656420, 0x656E74,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,269,0x657220, 0x657320, 0x666F72, 0x686174, 0x686520, 0x686572, 0x696420, 0x696E20, 0x696E67, 0x696F6E, 0x697320, 0x6E2061, 0x6E2074, 0x6E6420, 0x6E6720, 0x6E7420,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,270,0x6F6620, 0x6F6E20, 0x6F7220, 0x726520, 0x727320, 0x732061, 0x732074, 0x736169, 0x737420, 0x742074, 0x746572, 0x746861, 0x746865, 0x74696F, 0x746F20, 0x747320,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,273,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,274,return "en";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,277,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,278,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,282,static class CharsetRecog_8859_1_es extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,283,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,284,0x206120, 0x206361, 0x20636F, 0x206465, 0x20656C, 0x20656E, 0x206573, 0x20696E, 0x206C61, 0x206C6F, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207265, 0x207365,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,285,0x20756E, 0x207920, 0x612063, 0x612064, 0x612065, 0x61206C, 0x612070, 0x616369, 0x61646F, 0x616C20, 0x617220, 0x617320, 0x6369F3, 0x636F6E, 0x646520, 0x64656C,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,286,0x646F20, 0x652064, 0x652065, 0x65206C, 0x656C20, 0x656E20, 0x656E74, 0x657320, 0x657374, 0x69656E, 0x69F36E, 0x6C6120, 0x6C6F73, 0x6E2065, 0x6E7465, 0x6F2064,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,287,0x6F2065, 0x6F6E20, 0x6F7220, 0x6F7320, 0x706172, 0x717565, 0x726120, 0x726573, 0x732064, 0x732065, 0x732070, 0x736520, 0x746520, 0x746F20, 0x756520, 0xF36E20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,290,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,291,return "es";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,294,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,295,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,299,static class CharsetRecog_8859_1_fr extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,300,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,301,0x206175, 0x20636F, 0x206461, 0x206465, 0x206475, 0x20656E, 0x206574, 0x206C61, 0x206C65, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207365, 0x20736F, 0x20756E,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,302,0x20E020, 0x616E74, 0x617469, 0x636520, 0x636F6E, 0x646520, 0x646573, 0x647520, 0x652061, 0x652063, 0x652064, 0x652065, 0x65206C, 0x652070, 0x652073, 0x656E20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,303,0x656E74, 0x657220, 0x657320, 0x657420, 0x657572, 0x696F6E, 0x697320, 0x697420, 0x6C6120, 0x6C6520, 0x6C6573, 0x6D656E, 0x6E2064, 0x6E6520, 0x6E7320, 0x6E7420,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,304,0x6F6E20, 0x6F6E74, 0x6F7572, 0x717565, 0x72206C, 0x726520, 0x732061, 0x732064, 0x732065, 0x73206C, 0x732070, 0x742064, 0x746520, 0x74696F, 0x756520, 0x757220,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,307,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,308,return "fr";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,311,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,312,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,316,static class CharsetRecog_8859_1_it extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,317,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,318,0x20616C, 0x206368, 0x20636F, 0x206465, 0x206469, 0x206520, 0x20696C, 0x20696E, 0x206C61, 0x207065, 0x207072, 0x20756E, 0x612063, 0x612064, 0x612070, 0x612073,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,319,0x61746F, 0x636865, 0x636F6E, 0x64656C, 0x646920, 0x652061, 0x652063, 0x652064, 0x652069, 0x65206C, 0x652070, 0x652073, 0x656C20, 0x656C6C, 0x656E74, 0x657220,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,320,0x686520, 0x692061, 0x692063, 0x692064, 0x692073, 0x696120, 0x696C20, 0x696E20, 0x696F6E, 0x6C6120, 0x6C6520, 0x6C6920, 0x6C6C61, 0x6E6520, 0x6E6920, 0x6E6F20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,321,0x6E7465, 0x6F2061, 0x6F2064, 0x6F2069, 0x6F2073, 0x6F6E20, 0x6F6E65, 0x706572, 0x726120, 0x726520, 0x736920, 0x746120, 0x746520, 0x746920, 0x746F20, 0x7A696F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,324,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,325,return "it";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,328,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,329,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,333,static class CharsetRecog_8859_1_nl extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,334,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,335,0x20616C, 0x206265, 0x206461, 0x206465, 0x206469, 0x206565, 0x20656E, 0x206765, 0x206865, 0x20696E, 0x206D61, 0x206D65, 0x206F70, 0x207465, 0x207661, 0x207665,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,336,0x20766F, 0x207765, 0x207A69, 0x61616E, 0x616172, 0x616E20, 0x616E64, 0x617220, 0x617420, 0x636874, 0x646520, 0x64656E, 0x646572, 0x652062, 0x652076, 0x65656E,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,337,0x656572, 0x656E20, 0x657220, 0x657273, 0x657420, 0x67656E, 0x686574, 0x696520, 0x696E20, 0x696E67, 0x697320, 0x6E2062, 0x6E2064, 0x6E2065, 0x6E2068, 0x6E206F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,338,0x6E2076, 0x6E6465, 0x6E6720, 0x6F6E64, 0x6F6F72, 0x6F7020, 0x6F7220, 0x736368, 0x737465, 0x742064, 0x746520, 0x74656E, 0x746572, 0x76616E, 0x766572, 0x766F6F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,341,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,342,return "nl";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,345,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,346,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,350,static class CharsetRecog_8859_1_no extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,351,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,352,0x206174, 0x206176, 0x206465, 0x20656E, 0x206572, 0x20666F, 0x206861, 0x206920, 0x206D65, 0x206F67, 0x2070E5, 0x207365, 0x20736B, 0x20736F, 0x207374, 0x207469,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,353,0x207669, 0x20E520, 0x616E64, 0x617220, 0x617420, 0x646520, 0x64656E, 0x646574, 0x652073, 0x656420, 0x656E20, 0x656E65, 0x657220, 0x657265, 0x657420, 0x657474,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,354,0x666F72, 0x67656E, 0x696B6B, 0x696C20, 0x696E67, 0x6B6520, 0x6B6B65, 0x6C6520, 0x6C6C65, 0x6D6564, 0x6D656E, 0x6E2073, 0x6E6520, 0x6E6720, 0x6E6765, 0x6E6E65,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,355,0x6F6720, 0x6F6D20, 0x6F7220, 0x70E520, 0x722073, 0x726520, 0x736F6D, 0x737465, 0x742073, 0x746520, 0x74656E, 0x746572, 0x74696C, 0x747420, 0x747465, 0x766572,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,358,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,359,return "no";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,362,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,363,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,367,static class CharsetRecog_8859_1_pt extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,368,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,369,0x206120, 0x20636F, 0x206461, 0x206465, 0x20646F, 0x206520, 0x206573, 0x206D61, 0x206E6F, 0x206F20, 0x207061, 0x20706F, 0x207072, 0x207175, 0x207265, 0x207365,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,370,0x20756D, 0x612061, 0x612063, 0x612064, 0x612070, 0x616465, 0x61646F, 0x616C20, 0x617220, 0x617261, 0x617320, 0x636F6D, 0x636F6E, 0x646120, 0x646520, 0x646F20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,371,0x646F73, 0x652061, 0x652064, 0x656D20, 0x656E74, 0x657320, 0x657374, 0x696120, 0x696361, 0x6D656E, 0x6E7465, 0x6E746F, 0x6F2061, 0x6F2063, 0x6F2064, 0x6F2065,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,372,0x6F2070, 0x6F7320, 0x706172, 0x717565, 0x726120, 0x726573, 0x732061, 0x732064, 0x732065, 0x732070, 0x737461, 0x746520, 0x746F20, 0x756520, 0xE36F20, 0xE7E36F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,375,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,376,return "pt";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,379,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,380,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,384,static class CharsetRecog_8859_1_sv extends CharsetRecog_8859_1 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,385,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,386,0x206174, 0x206176, 0x206465, 0x20656E, 0x2066F6, 0x206861, 0x206920, 0x20696E, 0x206B6F, 0x206D65, 0x206F63, 0x2070E5, 0x20736B, 0x20736F, 0x207374, 0x207469,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,387,0x207661, 0x207669, 0x20E472, 0x616465, 0x616E20, 0x616E64, 0x617220, 0x617474, 0x636820, 0x646520, 0x64656E, 0x646572, 0x646574, 0x656420, 0x656E20, 0x657220,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,388,0x657420, 0x66F672, 0x67656E, 0x696C6C, 0x696E67, 0x6B6120, 0x6C6C20, 0x6D6564, 0x6E2073, 0x6E6120, 0x6E6465, 0x6E6720, 0x6E6765, 0x6E696E, 0x6F6368, 0x6F6D20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,389,0x6F6E20, 0x70E520, 0x722061, 0x722073, 0x726120, 0x736B61, 0x736F6D, 0x742073, 0x746120, 0x746520, 0x746572, 0x74696C, 0x747420, 0x766172, 0xE47220, 0xF67220,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,392,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,393,return "sv";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,396,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,397,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,401,abstract static class CharsetRecog_8859_2 extends CharsetRecog_sbcs {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,437,public String getName() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,438,return haveC1Bytes ? "windows-1250" : "ISO-8859-2";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,442,static class CharsetRecog_8859_2_cs extends CharsetRecog_8859_2 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,443,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,444,0x206120, 0x206279, 0x20646F, 0x206A65, 0x206E61, 0x206E65, 0x206F20, 0x206F64, 0x20706F, 0x207072, 0x2070F8, 0x20726F, 0x207365, 0x20736F, 0x207374, 0x20746F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,445,0x207620, 0x207679, 0x207A61, 0x612070, 0x636520, 0x636820, 0x652070, 0x652073, 0x652076, 0x656D20, 0x656EED, 0x686F20, 0x686F64, 0x697374, 0x6A6520, 0x6B7465,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,446,0x6C6520, 0x6C6920, 0x6E6120, 0x6EE920, 0x6EEC20, 0x6EED20, 0x6F2070, 0x6F646E, 0x6F6A69, 0x6F7374, 0x6F7520, 0x6F7661, 0x706F64, 0x706F6A, 0x70726F, 0x70F865,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,447,0x736520, 0x736F75, 0x737461, 0x737469, 0x73746E, 0x746572, 0x746EED, 0x746F20, 0x752070, 0xBE6520, 0xE16EED, 0xE9686F, 0xED2070, 0xED2073, 0xED6D20, 0xF86564,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,450,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,451,return "cs";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,454,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,455,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,459,static class CharsetRecog_8859_2_hu extends CharsetRecog_8859_2 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,460,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,461,0x206120, 0x20617A, 0x206265, 0x206567, 0x20656C, 0x206665, 0x206861, 0x20686F, 0x206973, 0x206B65, 0x206B69, 0x206BF6, 0x206C65, 0x206D61, 0x206D65, 0x206D69,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,462,0x206E65, 0x20737A, 0x207465, 0x20E973, 0x612061, 0x61206B, 0x61206D, 0x612073, 0x616B20, 0x616E20, 0x617A20, 0x62616E, 0x62656E, 0x656779, 0x656B20, 0x656C20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,463,0x656C65, 0x656D20, 0x656E20, 0x657265, 0x657420, 0x657465, 0x657474, 0x677920, 0x686F67, 0x696E74, 0x697320, 0x6B2061, 0x6BF67A, 0x6D6567, 0x6D696E, 0x6E2061,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,464,0x6E616B, 0x6E656B, 0x6E656D, 0x6E7420, 0x6F6779, 0x732061, 0x737A65, 0x737A74, 0x737AE1, 0x73E967, 0x742061, 0x747420, 0x74E173, 0x7A6572, 0xE16E20, 0xE97320,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,467,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,468,return "hu";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,471,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,472,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,476,static class CharsetRecog_8859_2_pl extends CharsetRecog_8859_2 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,477,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,478,0x20637A, 0x20646F, 0x206920, 0x206A65, 0x206B6F, 0x206D61, 0x206D69, 0x206E61, 0x206E69, 0x206F64, 0x20706F, 0x207072, 0x207369, 0x207720, 0x207769, 0x207779,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,479,0x207A20, 0x207A61, 0x612070, 0x612077, 0x616E69, 0x636820, 0x637A65, 0x637A79, 0x646F20, 0x647A69, 0x652070, 0x652073, 0x652077, 0x65207A, 0x65676F, 0x656A20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,480,0x656D20, 0x656E69, 0x676F20, 0x696120, 0x696520, 0x69656A, 0x6B6120, 0x6B6920, 0x6B6965, 0x6D6965, 0x6E6120, 0x6E6961, 0x6E6965, 0x6F2070, 0x6F7761, 0x6F7769,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,481,0x706F6C, 0x707261, 0x70726F, 0x70727A, 0x727A65, 0x727A79, 0x7369EA, 0x736B69, 0x737461, 0x776965, 0x796368, 0x796D20, 0x7A6520, 0x7A6965, 0x7A7920, 0xF37720,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,484,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,485,return "pl";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,488,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,489,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,493,static class CharsetRecog_8859_2_ro extends CharsetRecog_8859_2 {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,494,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,495,0x206120, 0x206163, 0x206361, 0x206365, 0x20636F, 0x206375, 0x206465, 0x206469, 0x206C61, 0x206D61, 0x207065, 0x207072, 0x207365, 0x2073E3, 0x20756E, 0x20BA69,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,496,0x20EE6E, 0x612063, 0x612064, 0x617265, 0x617420, 0x617465, 0x617520, 0x636172, 0x636F6E, 0x637520, 0x63E320, 0x646520, 0x652061, 0x652063, 0x652064, 0x652070,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,497,0x652073, 0x656120, 0x656920, 0x656C65, 0x656E74, 0x657374, 0x692061, 0x692063, 0x692064, 0x692070, 0x696520, 0x696920, 0x696E20, 0x6C6120, 0x6C6520, 0x6C6F72,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,498,0x6C7569, 0x6E6520, 0x6E7472, 0x6F7220, 0x70656E, 0x726520, 0x726561, 0x727520, 0x73E320, 0x746520, 0x747275, 0x74E320, 0x756920, 0x756C20, 0xBA6920, 0xEE6E20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,501,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,502,return "ro";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,505,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,506,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,563,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,564,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,621,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,622,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,663,return haveC1Bytes ? "windows-1253" : "ISO-8859-7";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,679,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,680,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,721,return haveC1Bytes ? "windows-1255" : "ISO-8859-8";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,734,return haveC1Bytes ? "windows-1255" : /*"ISO-8859-8-I"*/ "ISO-8859-8";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,741,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,742,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,758,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,759,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,800,return haveC1Bytes ? "windows-1254" : "ISO-8859-9";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,816,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,817,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,872,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,873,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,877,static class CharsetRecog_IBM866_ru extends CharsetRecog_sbcs {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,878,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,879,0x20E220, 0x20E2EE, 0x20E4EE, 0x20E7E0, 0x20E820, 0x20EAE0, 0x20EAEE, 0x20EDE0, 0x20EDE5, 0x20EEE1, 0x20EFEE, 0x20EFF0, 0x20F0E0, 0x20F1EE, 0x20F1F2, 0x20F2EE,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,880,0x20F7F2, 0x20FDF2, 0xE0EDE8, 0xE0F2FC, 0xE3EE20, 0xE5EBFC, 0xE5EDE8, 0xE5F1F2, 0xE5F220, 0xE820EF, 0xE8E520, 0xE8E820, 0xE8FF20, 0xEBE5ED, 0xEBE820, 0xEBFCED,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,881,0xEDE020, 0xEDE520, 0xEDE8E5, 0xEDE8FF, 0xEDEE20, 0xEDEEE2, 0xEE20E2, 0xEE20EF, 0xEE20F1, 0xEEE220, 0xEEE2E0, 0xEEE3EE, 0xEEE920, 0xEEEBFC, 0xEEEC20, 0xEEF1F2,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,882,0xEFEEEB, 0xEFF0E5, 0xEFF0E8, 0xEFF0EE, 0xF0E0E2, 0xF0E5E4, 0xF1F2E0, 0xF1F2E2, 0xF1F2E8, 0xF1FF20, 0xF2E5EB, 0xF2EE20, 0xF2EEF0, 0xF2FC20, 0xF7F2EE, 0xFBF520,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,886,private static byte[] byteMap = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,887,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,888,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,889,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,890,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,891,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x00,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,892,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,893,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,894,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,895,(byte) 0x20, (byte) 0x61, (byte) 0x62, (byte) 0x63, (byte) 0x64, (byte) 0x65, (byte) 0x66, (byte) 0x67,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,896,(byte) 0x68, (byte) 0x69, (byte) 0x6A, (byte) 0x6B, (byte) 0x6C, (byte) 0x6D, (byte) 0x6E, (byte) 0x6F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,897,(byte) 0x70, (byte) 0x71, (byte) 0x72, (byte) 0x73, (byte) 0x74, (byte) 0x75, (byte) 0x76, (byte) 0x77,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,898,(byte) 0x78, (byte) 0x79, (byte) 0x7A, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,899,(byte) 0x20, (byte) 0x61, (byte) 0x62, (byte) 0x63, (byte) 0x64, (byte) 0x65, (byte) 0x66, (byte) 0x67,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,900,(byte) 0x68, (byte) 0x69, (byte) 0x6A, (byte) 0x6B, (byte) 0x6C, (byte) 0x6D, (byte) 0x6E, (byte) 0x6F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,901,(byte) 0x70, (byte) 0x71, (byte) 0x72, (byte) 0x73, (byte) 0x74, (byte) 0x75, (byte) 0x76, (byte) 0x77,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,902,(byte) 0x78, (byte) 0x79, (byte) 0x7A, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,903,(byte) 0xE0, (byte) 0xE1, (byte) 0xE2, (byte) 0xE3, (byte) 0xE4, (byte) 0xE5, (byte) 0xE6, (byte) 0xE7,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,904,(byte) 0xE8, (byte) 0xE9, (byte) 0xEA, (byte) 0xEB, (byte) 0xEC, (byte) 0xED, (byte) 0xEE, (byte) 0xEF,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,905,(byte) 0xF0, (byte) 0xF1, (byte) 0xF2, (byte) 0xF3, (byte) 0xF4, (byte) 0xF5, (byte) 0xF6, (byte) 0xF7,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,906,(byte) 0xF8, (byte) 0xF9, (byte) 0xFA, (byte) 0xFB, (byte) 0xFC, (byte) 0xFD, (byte) 0xFE, (byte) 0xFF,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,907,(byte) 0xE0, (byte) 0xE1, (byte) 0xE2, (byte) 0xE3, (byte) 0xE4, (byte) 0xE5, (byte) 0xE6, (byte) 0xE7,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,908,(byte) 0xE8, (byte) 0xE9, (byte) 0xEA, (byte) 0xEB, (byte) 0xEC, (byte) 0xED, (byte) 0xEE, (byte) 0xEF,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,909,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,910,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,911,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,912,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,913,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,914,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,915,(byte) 0xF0, (byte) 0xF1, (byte) 0xF2, (byte) 0xF3, (byte) 0xF4, (byte) 0xF5, (byte) 0xF6, (byte) 0xF7,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,916,(byte) 0xF8, (byte) 0xF9, (byte) 0xFA, (byte) 0xFB, (byte) 0xFC, (byte) 0xFD, (byte) 0xFE, (byte) 0xFF,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,917,(byte) 0xB8, (byte) 0xB8, (byte) 0xBA, (byte) 0xBA, (byte) 0xBF, (byte) 0xBF, (byte) 0xA2, (byte) 0xA2,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,918,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,921,public String getName() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,922,return "IBM866";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,925,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,926,return "ru";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,929,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,930,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,985,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,986,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1041,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1042,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1084,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1085,return match(det, ngrams, byteMap, (byte) 0x40);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1102,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1103,return match(det, ngrams, byteMap, (byte) 0x40);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1127,protected static byte[] unshapeMap = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1148,protected byte[] prev_fInputBytes = null;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1154,protected void matchInit(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1155,prev_fInputBytes = det.fInputBytes.clone();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1156,byte bb[] = unshape(det.fInputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1157,det.setText(bb);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1167,private byte[] unshape(byte[] inputBytes) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1168,byte resultByteArr[] = unshapeLamAlef(inputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1170,for (int i = 0; i < inputBytes.length; i++) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1171,resultByteArr[i] = unshapeMap[resultByteArr[i] & 0xFF];
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1173,return resultByteArr;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1176,private byte[] unshapeLamAlef(byte[] inputBytes) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1177,ByteBuffer resultBigBuffer = ByteBuffer.allocate(inputBytes.length * 2);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1178,ByteBuffer resultBuffer;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1179,byte unshapedLamAlef[] = {(byte) 0xb1, (byte) 0x56};
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1181,for (byte inputByte : inputBytes) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1183,resultBigBuffer.put(unshapedLamAlef);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1184,else
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1185,resultBigBuffer.put(inputByte);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1187,resultBuffer = ByteBuffer.allocate(resultBigBuffer.position());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1188,resultBuffer.put(resultBigBuffer.array(), 0, resultBigBuffer.position());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1189,return resultBuffer.array();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1192,private boolean isLamAlef(byte b) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1198,return (b <= (byte) 0xb8) && (b >= (byte) 0xb2) && (b != (byte) 0xb6);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1201,protected void matchFinish(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1203,det.setText(prev_fInputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1220,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1221,matchInit(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1222,int result = match(det, ngrams, byteMap, (byte) 0x40);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1223,matchFinish(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1224,return result;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1241,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1242,matchInit(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1243,int result = match(det, ngrams, byteMap, (byte) 0x40);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1244,matchFinish(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1245,return result;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1299,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1300,return match(det, CharsetRecog_8859_1_en.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1309,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1310,return match(det, CharsetRecog_8859_1_de.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1315,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1316,return "fr";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1319,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1320,return match(det, CharsetRecog_8859_1_fr.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1325,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1326,return "es";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1329,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1330,return match(det, CharsetRecog_8859_1_es.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1335,public String getLanguage() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1336,return "it";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1339,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1340,return match(det, CharsetRecog_8859_1_it.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1349,public int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1350,return match(det, CharsetRecog_8859_1_nl.ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecognizer.java,52,abstract int match(CharsetDetector det);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,258,this.formatListener = new FormatTrackingHSSFListener(this, locale);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,83,formatter = new DataFormatter();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,85,formatter = new DataFormatter(locale);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,110,extractor.parseEmbedded(is, handler, submd, false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,175,metadata.set(Metadata.RESOURCE_NAME_KEY, dir.getName() + '/' + ole.getLabel());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,182,logger.warn("Ignoring unexpected exception while parsing possible OLE10_NATIVE embedded document " + dir.getName(), e);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,210,metadata.set(Metadata.RESOURCE_NAME_KEY, dir.getName() + extension);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,216,metadata.set(Metadata.RESOURCE_NAME_KEY, dir.getName() + '.' + type.getExtension());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,311,handleEmbeddedResource(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,312,stream, objID, objID,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/HSLFExtractor.java,313,mediaType, xhtml, false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,234,&& root.hasEntry("\u0003ObjInfo")) {
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlEncodingDetector.java,87,Matcher equiv = HTTP_META_PATTERN.matcher(head);
tika-parsers/src/main/java/org/apache/tika/parser/mail/MailContentHandler.java,200,metadata.set(TikaCoreProperties.CREATED, dateField.getDate());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,310,String id = "_" + field.getMarkSeparatorCharacterRun(r).getPicOffset();
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,113,handleBoolean(results.getBoolean(i), handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,122,handleInteger(rsmd.getColumnTypeName(i), results, i, handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,127,addAllCharacters(Float.toString(results.getFloat(i)), handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,130,addAllCharacters(Double.toString(results.getDouble(i)), handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,133,addAllCharacters(results.getString(i), handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,155,protected void handleInteger(String columnTypeName, ResultSet rs, int columnIndex, ContentHandler handler) throws SQLException, SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,156,addAllCharacters(Integer.toString(rs.getInt(columnIndex)), handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,159,private void handleBoolean(boolean aBoolean, ContentHandler handler) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,160,addAllCharacters(Boolean.toString(aBoolean), handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,202,is = TikaInputStream.get(getInputStreamFromBlob(resultSet, columnIndex, blob, m));
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,237,protected InputStream getInputStreamFromBlob(ResultSet resultSet, int columnIndex, Blob blob, Metadata metadata) throws SQLException {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/JDBCTableReader.java,238,return TikaInputStream.get(blob, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,20,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,25,import java.text.DateFormat;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,26,import java.text.SimpleDateFormat;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,27,import java.util.Locale;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,29,import org.apache.tika.io.TikaInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,49,DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd", Locale.ROOT);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,86,protected InputStream getInputStreamFromBlob(ResultSet resultSet, int columnIndex, Blob blob, Metadata m) throws SQLException {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,87,return TikaInputStream.get(resultSet.getBytes(columnIndex), m);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,91,protected void handleInteger(String columnTypeName, ResultSet rs, int columnIndex,
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,92,ContentHandler handler) throws SQLException, SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,96,if (columnTypeName.equals("TIMESTAMP")) {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,97,addAllCharacters(parseDateFromLongString(rs.getString(columnIndex)), handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,99,addAllCharacters(Integer.toString(rs.getInt(columnIndex)), handler);
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,104,private String parseDateFromLongString(String longString) throws SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,105,java.sql.Date d = new java.sql.Date(Long.parseLong(longString));
tika-parsers/src/main/java/org/apache/tika/parser/jdbc/SQLite3TableReader.java,106,return dateFormat.format(d);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,150,ZipEntry entry = null;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,152,entry = zipFile.getEntry(META_NAME);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,153,handleZipEntry(entry, zipFile.getInputStream(entry), metadata, context, handler);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,155,Enumeration<? extends ZipEntry> entries = zipFile.entries();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,156,while (entries.hasMoreElements()) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,157,entry = entries.nextElement();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,158,if (!META_NAME.equals(entry.getName())) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,159,handleZipEntry(entry, zipFile.getInputStream(entry), metadata, context, handler);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,162,zipFile.close();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,164,do {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,165,entry = zipStream.getNextEntry();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,166,handleZipEntry(entry, zipStream, metadata, context, handler);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,168,zipStream.close();
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,383,if (flash.contains("Flash fired")) {
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,384,metadata.set(Metadata.FLASH_FIRED, Boolean.TRUE.toString());
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,386,metadata.set(Metadata.FLASH_FIRED, Boolean.FALSE.toString());
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,388,metadata.set(Metadata.FLASH_FIRED, flash);
tika-server/src/main/java/org/apache/tika/server/RichTextContentHandler.java,18,package org.apache.tika.server;
tika-server/src/main/java/org/apache/tika/server/RichTextContentHandler.java,22,import org.apache.tika.sax.WriteOutContentHandler;
tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java,75,import org.apache.tika.server.RichTextContentHandler;
tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java,61,import org.apache.tika.server.RichTextContentHandler;
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,20,import com.fasterxml.jackson.databind.util.LRUMap;
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,27,import java.io.IOException;
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,28,import java.util.HashMap;
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,76,if (translator == null) return text;
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,77,HashMap<String, String> translationCache = getTranslationCache(sourceLanguage, targetLanguage);
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,120,HashMap<String, String> translationCache = cache.get(buildCacheKeyString(sourceLanguage, targetLanguage));
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,121,if (translationCache == null) return 0;
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,122,else return translationCache.size();
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,135,HashMap<String, String> translationCache = getTranslationCache(sourceLanguage, targetLanguage);
tika-translate/src/main/java/org/apache/tika/language/translate/CachedTranslator.java,136,return translationCache.containsKey(text);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFEmbObjHandler.java,249,metadata.set(Metadata.CONTENT_TYPE, mediaType.getSubtype());
