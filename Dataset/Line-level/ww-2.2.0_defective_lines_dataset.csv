File,Line_number,SRC
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,133,if (charset != null) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,151,fac.setSizeThreshold(0);
core/src/main/java/org/apache/struts2/components/Set.java,95,if (body != null && !body.equals("")) {
core/src/main/java/org/apache/struts2/components/Set.java,96,o = body;
core/src/main/java/org/apache/struts2/components/Set.java,98,o = findValue("top");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,166,new PreResultListener() {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,167,public void beforeResult(ActionInvocation inv, String result) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,168,printContext();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,174,new PreResultListener() {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,175,public void beforeResult(ActionInvocation inv, String actionResult) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,176,String xml = "";
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,177,if (enableXmlWithConsole) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,178,StringWriter writer = new StringWriter();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,179,printContext(new PrettyPrintWriter(writer));
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,180,xml = writer.toString();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,181,xml = xml.replaceAll("&", "&amp;");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,182,xml = xml.replaceAll(">", "&gt;");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,183,xml = xml.replaceAll("<", "&lt;");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,185,ActionContext.getContext().put("debugXML", xml);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,190,result.setLocation("/org/apache/struts2/interceptor/debugging/console.ftl");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,191,result.setParse(false);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,192,try {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,193,result.execute(inv);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,195,LOG.error("Unable to create debugging console", ex);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,305,ServletActionContext.getResponse().getWriter());
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,454,if(valueStack != null) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,455,filter.add(valueStack);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,457,return filter;
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,162,String type = getParameter(DEBUG_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,163,ctx.getParameters().remove(DEBUG_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,164,if (XML_MODE.equals(type)) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,165,inv.addPreResultListener(
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,172,consoleEnabled = true;
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,173,inv.addPreResultListener(
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,201,ValueStack stack = (ValueStack) ctx.getSession().get(SESSION_KEY);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,202,if (stack == null) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,204,stack = (ValueStack) ctx.get(ActionContext.VALUE_STACK);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,205,ctx.getSession().put(SESSION_KEY, stack);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,207,String cmd = getParameter(EXPRESSION_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,209,ServletActionContext.getRequest().setAttribute("decorator", "none");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,210,HttpServletResponse res = ServletActionContext.getResponse();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,211,res.setContentType("text/plain");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,216,writer.print(stack.findValue(cmd));
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,219,ex.printStackTrace();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,221,cont = false;
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,223,actionOnly = true;
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,224,inv.addPreResultListener(
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,225,new PreResultListener() {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,226,public void beforeResult(ActionInvocation inv, String actionResult) {
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,227,String rootObjectExpression = getParameter(OBJECT_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,229,rootObjectExpression = "#context";
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,230,String decorate = getParameter(DECORATE_PARAM);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,231,ValueStack stack = (ValueStack) ctx.get(ActionContext.VALUE_STACK);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,232,Object rootObject = stack.findValue(rootObjectExpression);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,236,ObjectToHTMLWriter htmlWriter = new ObjectToHTMLWriter(writer);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,237,htmlWriter.write(reflectionProvider, rootObject, rootObjectExpression);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,238,String html = writer.toString();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,239,writer.close();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,241,stack.set("debugHtml", html);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,246,ServletActionContext.getRequest().setAttribute("decorator", "none");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,248,FreemarkerResult result = new FreemarkerResult();
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,249,result.setFreemarkerManager(freemarkerManager);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,250,result.setContentType("text/html");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,251,result.setLocation("/org/apache/struts2/interceptor/debugging/browser.ftl");
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,252,result.execute(inv);
core/src/main/java/org/apache/struts2/interceptor/debugging/DebuggingInterceptor.java,254,LOG.error("Unable to create debugging console", ex);
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,53,if (root instanceof Map) {
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,62,List list = (List) root;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,68,Set set = (Set) root;
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,126,Class clazz = value.getClass();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,143,return value instanceof Map && ((Map) value).isEmpty();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,154,return value instanceof Collection && ((Collection) value).isEmpty();
core/src/main/java/org/apache/struts2/interceptor/debugging/ObjectToHTMLWriter.java,161,Class clazz = value.getClass();
core/src/main/java/org/apache/struts2/views/jsp/ui/AnchorTag.java,83,if (forceAddSchemeHostAndPort != null) {
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,30,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,62,ValueStack stack = invocationContext.invocation.getStack();
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,63,ActionContext.getContext().setValueStack(stack);
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,114,ActionInvocation invocation;
plugins/dwr/src/main/java/org/apache/struts2/validators/DWRValidator.java,121,private static final long serialVersionUID = -7645433725470191275L;
plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java,47,private static final long serialVersionUID = 3485701178946428716L;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsDecorator.java,146,private static final long serialVersionUID = -4808072199157363028L;
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,36,protected Object action;
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,37,protected ActionInvocation invocation;
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,39,protected Exception exception;
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,49,public BackgroundProcess(String threadName, final ActionInvocation invocation, int threadPriority) {
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,51,this.action = invocation.getAction();
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,80,protected void beforeInvocation() throws Exception {
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,90,protected void afterInvocation() throws Exception {
core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java,99,return action;
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,63,JSONWriter writer = new JSONWriter();
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,85,JSONWriter writer = new JSONWriter();
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,109,JSONWriter writer = new JSONWriter();
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,179,Class clazz = object.getClass();
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,417,return new ServletURIResolver(
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,418,ServletActionContext.getServletContext());
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,139,synchronized (session) {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,269,throw new IllegalArgumentException("Null location");
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,369,else
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,453,throws IllegalAccessException, InstantiationException {
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,80,multi = new ServletMultipartRequest(servletRequest, saveDir, maxSize);
core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java,96,Object val = invocation.getInvocationContext().getParameters().get(profilingKey);
core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java,97,if (val != null) {
core/src/main/java/org/apache/struts2/interceptor/ProfilingActivationInterceptor.java,98,String sval = (val instanceof String ? (String)val : ((String[])val)[0]);
core/src/main/java/org/apache/struts2/interceptor/ScopeInterceptor.java,306,if (ActionContext.getContext().getParameters().get(sessionReset) != null) {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,347,transformer.setErrorListener(new ErrorListener() {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,350,throws TransformerException {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,351,throw new StrutsException("Error transforming result", exception);
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,355,throws TransformerException {
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,356,throw new StrutsException("Fatal error transforming result", exception);
core/src/main/java/org/apache/struts2/views/xslt/XSLTResult.java,360,throws TransformerException {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,211,public Collection<String> getErrors() {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,220,protected void addError(String anErrorMessage) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,257,for (String error : multiWrapper.getErrors()) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,259,validation.addActionError(error);
core/src/main/java/org/apache/struts2/components/Param.java,121,component.addParameter(findString(name), body);
plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java,262,mapping.setName(fullName);
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,126,return "org.apache.struts2.static template org.apache.struts2.interceptor.debugging static";
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,105,Object obj = JSONUtil.deserialize(request.getReader());
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,107,if (obj instanceof Map) {
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,108,Map json = (Map) obj;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,112,dataCleaner.clean("", json);
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,115,populator.populateObject(rootObject, json);
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,117,LOG.error("Unable to deserialize JSON object from request");
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,118,throw new JSONException("Unable to deserialize JSON object from request");
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,121,Object result;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,122,if (this.enableSMD) {
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,124,Object obj = JSONUtil.deserialize(request.getReader());
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,126,if (obj instanceof Map) {
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,127,Map smd = (Map) obj;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,130,try {
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,131,result = this.invoke(rootObject, smd);
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,134,rpcResponse.setId(smd.get("id").toString());
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,140,String message = "SMD request was not in the right format. See http://json-rpc.org";
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,143,rpcResponse.setError(new RPCError(message, RPCErrorCode.INVALID_PROCEDURE_CALL));
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,155,String message = "Request with content type of 'application/json-rpc' was received but SMD is "
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,156,+ "not enabled for this interceptor. Set 'enableSMD' to true to enable it";
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,158,RPCResponse rpcResponse = new RPCResponse();
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,159,rpcResponse.setError(new RPCError(message, RPCErrorCode.SMD_DISABLED));
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,160,result = rpcResponse;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,165,json = addCallbackIfApplicable(request, json);
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,166,boolean writeGzip = enableGZIP && JSONUtil.isGzipInRequest(request);
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,167,JSONUtil.writeJSONToResponse(new SerializationParams(response, this.defaultEncoding,
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,170,return Action.NONE;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,60,private String defaultEncoding = "ISO-8859-1";
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,72,private String contentType;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,84,String contentType = request.getHeader("content-type");
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,85,if (contentType != null) {
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,88,contentType = contentType.substring(0, iSemicolonIdx);
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,103,if ((contentType != null) && contentType.equalsIgnoreCase("application/json")) {
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,477,public void setContentType(String contentType) {
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,478,this.contentType = contentType;
plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java,199,if (prevSlashPos > -1) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,194,paramName = URLDecoder.decode(st.nextToken(), "UTF-8");
core/src/main/java/org/apache/struts2/dispatcher/mapper/Restful2ActionMapper.java,197,paramValue = URLDecoder.decode(st.nextToken(), "UTF-8");
core/src/main/java/org/apache/struts2/dispatcher/mapper/RestfulActionMapper.java,96,paramName = URLDecoder.decode(st.nextToken(), "UTF-8");
core/src/main/java/org/apache/struts2/dispatcher/mapper/RestfulActionMapper.java,99,paramValue = URLDecoder.decode(st.nextToken(), "UTF-8");
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,307,if ((var != null) && (currentValue != null)) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,71,private String defaultEncoding = "ISO-8859-1";
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,275,if (action instanceof ValidationAware) {
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,277,Map session = (Map) invocation.getInvocationContext().get(ActionContext.SESSION);
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,181,res.getOutputStream().close();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,40,import com.opensymphony.xwork2.ActionContext;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,41,import com.opensymphony.xwork2.ActionInvocation;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,42,import com.opensymphony.xwork2.Result;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,43,import com.opensymphony.xwork2.inject.Inject;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,44,import com.opensymphony.xwork2.util.ValueStack;
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,30,import java.lang.reflect.Method;
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,35,import java.util.regex.Pattern;
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,36,import java.util.zip.GZIPOutputStream;
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,126,writer.write(serialize(object));
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,146,writer.write(serialize(object, excludeProperties, includeProperties, true, excludeNullProperties));
core/src/main/java/org/apache/struts2/components/Component.java,451,stack.setValue(key, entry.getValue());
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,31,import com.opensymphony.xwork2.util.PatternMatcher;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,190,private PatternMatcher matcher;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,193,public void setMatcher(PatternMatcher matcher) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,71,super(request);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,21,import java.lang.reflect.Method;
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,71,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,87,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,107,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,162,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,180,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,199,synchronized (session) {
core/src/main/java/org/apache/struts2/dispatcher/SessionMap.java,221,synchronized (session) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,91,private String[] includeJars;
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,433,if (includeJars == null) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,434,urlSet = urlSet.exclude(".*?\\.jar(!/|/)?");
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,437,List<URL> rawIncludedUrls = urlSet.getUrls();
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,438,Set<URL> includeUrls = new HashSet<URL>();
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,439,boolean[] patternUsed = new boolean[includeJars.length];
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,441,for (URL url : rawIncludedUrls) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,442,if (fileProtocols.contains(url.getProtocol())) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,444,for (int i = 0; i < includeJars.length; i++) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,445,String includeJar = includeJars[i];
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,446,if (Pattern.matches(includeJar, url.toExternalForm())) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,447,includeUrls.add(url);
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,448,patternUsed[i] = true;
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,449,break;
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,454,includeUrls.add(url);
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,458,if (LOG.isWarnEnabled()) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,459,for (int i = 0; i < patternUsed.length; i++) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,460,if (!patternUsed[i]) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,461,LOG.warn("The includeJars pattern [#0] did not match any jars in the classpath", includeJars[i]);
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,468,return urlSet;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/JasperReportsResult.java,290,stackDataSource = new ValueStackDataSource(stack, dataSource);
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,48,Iterator iterator;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,49,ValueStack valueStack;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,50,boolean firstTimeThrough = true;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,108,return new ValueStackDataSource(this.valueStack, expression);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,57,int modifiers = member.getModifiers();
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,58,if (Modifier.isStatic(modifiers)) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,59,if (member instanceof Method && !getAllowStaticMethodAccess()) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,60,allow = false;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,61,if (target instanceof Class) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,62,Class clazz = (Class) target;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,63,Method method = (Method) member;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,65,allow = true;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,76,return false;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,78,return isAcceptableProperty(propertyName);
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProvider.java,367,LOG.error("Unable to verify action [#0] with class [#1], from [#2]", name, className, location.toString());
xwork-core/src/main/java/com/opensymphony/xwork2/util/NamedVariablePatternMatcher.java,83,case '}' :  varNames.add(varName.toString());
xwork-core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,981,BufferedInputStream reader = null;
xwork-core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,983,reader = new BufferedInputStream(in);
xwork-core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,999,BufferedInputStream reader = null;
xwork-core/src/main/java/com/opensymphony/xwork2/util/finder/ResourceFinder.java,1003,reader = new BufferedInputStream(in);
xwork-core/src/main/java/com/opensymphony/xwork2/util/location/LocationUtils.java,268,Location result = finder.getLocation(obj, description);
xwork-core/src/main/java/com/opensymphony/xwork2/util/location/LocationUtils.java,269,if (result != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/location/LocationUtils.java,270,return result;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,194,ResultConfig resultConfig = invocation.getProxy().getConfig().getResults().get(invocation.getResultCode());
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,212,StringBuilder tmpLocation = new StringBuilder(finalLocation);
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,217,tmpLocation.append('#').append(anchor);
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,220,finalLocation = response.encodeRedirectURL(tmpLocation.toString());
core/src/main/java/org/apache/struts2/interceptor/validation/AnnotationValidationInterceptor.java,73,Method method;
core/src/main/java/org/apache/struts2/interceptor/validation/AnnotationValidationInterceptor.java,83,throw e;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java,363,public TypeConverter lookup(String className) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java,371,if (result == null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java,401,return lookup(clazz.getName());
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/UnknownHandlerConfig.java,18,public class UnknownHandlerConfig {
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/UnknownHandlerConfig.java,21,public UnknownHandlerConfig(String name) {
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProvider.java,248,unknownHandlerStack.add(new UnknownHandlerConfig(unknownHandler.getAttribute("name")));
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,165,if (!locationArg.startsWith("/")) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,166,String base = ResourceUtil.getResourceBase(req);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,167,locationArg = base + "/" + locationArg;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,170,Template template = configuration.getTemplate(locationArg, deduceLocale());
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DelegatingValidatorContext.java,190,return new TextProviderFactory().createInstance(object.getClass(), localeProvider);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,212,public Object getValue(String name, Map<String, Object> context, Object root) throws OgnlException {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,216,public Object getValue(String name, Map<String, Object> context, Object root, Class resultType) throws OgnlException {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,245,public void copy(Object from, Object to, Map<String, Object> context, Collection<String> exclusions, Collection<String> inclusions) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,253,Map contextFrom = Ognl.createDefaultContext(from);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,255,Map contextTo = Ognl.createDefaultContext(to);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,290,Object value = Ognl.getValue(expr, contextFrom, from);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,291,Ognl.setValue(expr, contextTo, to, value);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,354,public Map getBeanMap(Object source) throws IntrospectionException, OgnlException {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,355,Map beanMap = new HashMap();
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,356,Map sourceMap = Ognl.createDefaultContext(source);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,359,String propertyName = propertyDescriptor.getDisplayName();
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,362,Object expr = compile(propertyName);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,363,Object value = Ognl.getValue(expr, sourceMap, source);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,19,import com.opensymphony.xwork2.ognl.OgnlValueStack;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,57,private static Map invalidMethods = new HashMap();
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,81,Map<Object, Object> map = (Map) o;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,100,Boolean reportError = (Boolean) context.get(ValueStack.REPORT_ERRORS_ON_NO_PROP);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,102,final String msg = "No object in the CompoundRoot has a publicly accessible property named '" + name + "' (no setter could be found).";
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,104,if ((reportError != null) && (reportError.booleanValue())) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,105,throw new XWorkException(msg);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,107,if (devMode) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,120,return root.cutStack(index.intValue());
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/CompoundRootAccessor.java,232,Object value = OgnlRuntime.callMethod((OgnlContext) context, o, name, name, objects);
core/src/main/java/org/apache/struts2/components/UIBean.java,973,addParameter("id", tryId);
core/src/main/java/org/apache/struts2/components/UIBean.java,974,addParameter("escapedId", escape(tryId));
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,111,Class clazz = objectFactory.getClassInstance(getConfig().getClassName());
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,132,String reqLastModified = request.getHeader("If-Modified-Since");
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,150,devMode = "true".equals(mode);
core/src/main/java/org/apache/struts2/components/UIBean.java,617,addParameter("templateDir", getTemplateDir());
core/src/main/java/org/apache/struts2/components/UIBean.java,618,addParameter("theme", getTheme());
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,244,config.setWhitespaceStripping(true);
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,272,config.setTemplateLoader(createTemplateLoader(servletContext, templatePath));
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,354,if (indexOfDot == resultPrefix.length() || !flatResultLayout) {
core/src/main/java/org/apache/struts2/util/AttributeMap.java,29,import javax.servlet.jsp.PageContext;
core/src/main/java/org/apache/struts2/util/AttributeMap.java,31,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/impl/StrutsActionProxyFactory.java,26,import java.util.Map;
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,32,public class DefaultPropertiesProvider extends LegacyPropertiesConfigurationProvider {
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,41,throws ConfigurationException {
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,43,Settings defaultSettings = null;
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,45,defaultSettings = new PropertiesSettings("org/apache/struts2/default");
core/src/main/java/org/apache/struts2/config/DefaultPropertiesProvider.java,50,loadSettings(props, defaultSettings);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,28,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,30,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,31,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,41,public class DefaultSettings extends Settings {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,46,protected Logger log = LoggerFactory.getLogger(this.getClass());
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,51,Settings delegate;
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,70,log.warn("DefaultSettings: Could not find or error in struts.properties", e);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,73,Settings[] settings = new Settings[list.size()];
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,74,delegate = new DelegatingSettings(list.toArray(settings));
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,77,try {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,78,StringTokenizer customProperties = new StringTokenizer(delegate.getImpl(StrutsConstants.STRUTS_CUSTOM_PROPERTIES), ",");
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,86,log.error("DefaultSettings: Could not find " + name + ".properties. Skipping.");
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,90,settings = new Settings[list.size()];
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,91,delegate = new DelegatingSettings(list.toArray(settings));
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,101,public void setImpl(String name, String value) throws IllegalArgumentException, UnsupportedOperationException {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,102,delegate.setImpl(name, value);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,106,public String getImpl(String aName) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,107,return delegate.getImpl(aName);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,111,public boolean isSetImpl(String aName) {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,112,return delegate.isSetImpl(aName);
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,116,public Iterator listImpl() {
core/src/main/java/org/apache/struts2/config/DefaultSettings.java,117,return delegate.listImpl();
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,39,class DelegatingSettings extends Settings {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,44,Settings[] delegates;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,51,public DelegatingSettings(Settings[] delegates) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,56,public void setImpl(String name, String value) throws IllegalArgumentException, UnsupportedOperationException {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,57,IllegalArgumentException e = null;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,60,try {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,61,delegate.getImpl(name); // Throws exception if not found
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,62,delegate.setImpl(name, value); // Found it
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,63,return; // Done
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,65,e = ex;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,71,throw e;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,75,public String getImpl(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,77,IllegalArgumentException e = null;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,79,for (Settings delegate : delegates) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,80,try {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,81,return delegate.getImpl(name);  // Throws exception if not found
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,83,e = ex;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,89,throw e;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,93,public boolean isSetImpl(String aName) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,94,for (Settings delegate : delegates) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,95,if (delegate.isSetImpl(aName)) {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,96,return true;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,100,return false;
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,104,public Iterator listImpl() {
core/src/main/java/org/apache/struts2/config/DelegatingSettings.java,112,Iterator list = delegate.listImpl();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,22,package org.apache.struts2.config;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,28,import com.opensymphony.xwork2.config.Configuration;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,29,import com.opensymphony.xwork2.config.ConfigurationException;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,30,import com.opensymphony.xwork2.config.ConfigurationProvider;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,31,import com.opensymphony.xwork2.inject.ContainerBuilder;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,32,import com.opensymphony.xwork2.inject.Context;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,33,import com.opensymphony.xwork2.inject.Factory;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,35,import com.opensymphony.xwork2.util.location.LocatableProperties;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,36,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,37,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,38,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,40,public class LegacyPropertiesConfigurationProvider implements ConfigurationProvider {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,45,private static final Logger LOG = LoggerFactory.getLogger(LegacyPropertiesConfigurationProvider.class);
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,47,public void destroy() {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,48,Settings.reset();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,52,throws ConfigurationException {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,53,Settings.reset();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,57,throws ConfigurationException {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,60,public boolean needsReload() {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,61,return false;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,65,throws ConfigurationException {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,67,final Settings settings = Settings.getInstance();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,69,loadSettings(props, settings);
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,73,private Locale locale;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,76,if (locale == null) {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,77,String loc = context.getContainer().getInstance(String.class, StrutsConstants.STRUTS_LOCALE);
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,78,if (loc != null) {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,79,StringTokenizer localeTokens = new StringTokenizer(loc, "_");
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,80,String lang = null;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,81,String country = null;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,83,if (localeTokens.hasMoreTokens()) {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,84,lang = localeTokens.nextToken();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,87,if (localeTokens.hasMoreTokens()) {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,88,country = localeTokens.nextToken();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,90,locale = new Locale(lang, country);
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,93,locale = Locale.getDefault();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,96,return locale;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,105,protected void loadSettings(LocatableProperties props, final Settings settings) {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,107,for (Iterator i = settings.listImpl(); i.hasNext(); ) {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,108,String name = (String) i.next();
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,109,props.setProperty(name, settings.getImpl(name), settings.getLocationImpl(name));
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,42,class PropertiesSettings extends Settings {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,44,LocatableProperties settings;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,45,static Logger LOG = LoggerFactory.getLogger(PropertiesSettings.class);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,91,public void setImpl(String aName, String aValue) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,92,settings.setProperty(aName, aValue);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,100,public String getImpl(String aName) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,101,String setting = settings.getProperty(aName);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,103,if (setting == null) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,104,throw new IllegalArgumentException("No such setting:" + aName);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,107,return setting;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,115,public Location getLocationImpl(String aName) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,116,Location loc = settings.getPropertyLocation(aName);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,118,if (loc == null) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,119,if (!settings.containsKey(aName)) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,120,throw new IllegalArgumentException("No such setting:" + aName);
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,124,return loc;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,132,public boolean isSetImpl(String aName) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,133,if (settings.get(aName) != null) {
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,134,return true;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,136,return false;
core/src/main/java/org/apache/struts2/config/PropertiesSettings.java,145,public Iterator listImpl() {
core/src/main/java/org/apache/struts2/config/Settings.java,30,import com.opensymphony.xwork2.ObjectFactory;
core/src/main/java/org/apache/struts2/config/Settings.java,32,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/config/Settings.java,33,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/config/Settings.java,62,class Settings {
core/src/main/java/org/apache/struts2/config/Settings.java,69,static Settings settingsImpl;
core/src/main/java/org/apache/struts2/config/Settings.java,75,static Settings defaultImpl;
core/src/main/java/org/apache/struts2/config/Settings.java,82,static Locale locale;
core/src/main/java/org/apache/struts2/config/Settings.java,87,private static final Logger LOG = LoggerFactory.getLogger(Settings.class);
core/src/main/java/org/apache/struts2/config/Settings.java,98,public static void setInstance(Settings config) throws IllegalStateException {
core/src/main/java/org/apache/struts2/config/Settings.java,99,settingsImpl = config;
core/src/main/java/org/apache/struts2/config/Settings.java,100,locale = null;
core/src/main/java/org/apache/struts2/config/Settings.java,110,public static Settings getInstance() {
core/src/main/java/org/apache/struts2/config/Settings.java,111,return (settingsImpl == null) ? getDefaultInstance() : settingsImpl;
core/src/main/java/org/apache/struts2/config/Settings.java,127,public static Locale getLocale() {
core/src/main/java/org/apache/struts2/config/Settings.java,130,return locale;
core/src/main/java/org/apache/struts2/config/Settings.java,142,public static boolean isSet(String name) {
core/src/main/java/org/apache/struts2/config/Settings.java,143,return getInstance().isSetImpl(name);
core/src/main/java/org/apache/struts2/config/Settings.java,156,public static String get(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/Settings.java,157,return getInstance().getImpl(name);
core/src/main/java/org/apache/struts2/config/Settings.java,172,public static Location getLocation(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/Settings.java,173,return getInstance().getLocationImpl(name);
core/src/main/java/org/apache/struts2/config/Settings.java,181,public static Iterator list() {
core/src/main/java/org/apache/struts2/config/Settings.java,182,return getInstance().listImpl();
core/src/main/java/org/apache/struts2/config/Settings.java,192,public boolean isSetImpl(String name) {
core/src/main/java/org/apache/struts2/config/Settings.java,195,return false;
core/src/main/java/org/apache/struts2/config/Settings.java,209,public static void set(String name, String value) throws IllegalArgumentException, UnsupportedOperationException {
core/src/main/java/org/apache/struts2/config/Settings.java,210,getInstance().setImpl(name, value);
core/src/main/java/org/apache/struts2/config/Settings.java,222,public void setImpl(String name, String value) throws IllegalArgumentException, UnsupportedOperationException {
core/src/main/java/org/apache/struts2/config/Settings.java,223,throw new UnsupportedOperationException("Settings: This implementation does not support setting a value.");
core/src/main/java/org/apache/struts2/config/Settings.java,234,public String getImpl(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/Settings.java,235,return null;
core/src/main/java/org/apache/struts2/config/Settings.java,246,public Location getLocationImpl(String name) throws IllegalArgumentException {
core/src/main/java/org/apache/struts2/config/Settings.java,247,return null;
core/src/main/java/org/apache/struts2/config/Settings.java,256,public Iterator listImpl() {
core/src/main/java/org/apache/struts2/config/Settings.java,257,throw new UnsupportedOperationException("Settings: This implementation does not support listing the registered settings");
core/src/main/java/org/apache/struts2/config/Settings.java,268,private static Settings getDefaultInstance() {
core/src/main/java/org/apache/struts2/config/Settings.java,269,if (defaultImpl == null) {
core/src/main/java/org/apache/struts2/config/Settings.java,290,return defaultImpl;
core/src/main/java/org/apache/struts2/config/Settings.java,296,public static void reset() {
core/src/main/java/org/apache/struts2/config/Settings.java,298,settingsImpl = null;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,58,import org.apache.struts2.config.LegacyPropertiesConfigurationProvider;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/StrutsConfigRetriever.java,33,import org.apache.struts2.config.LegacyPropertiesConfigurationProvider;
xwork-core/src/main/java/com/opensymphony/xwork2/util/location/LocatableProperties.java,22,Map<String,Location> propLocations;
xwork-core/src/main/java/com/opensymphony/xwork2/util/location/LocatableProperties.java,25,this(null);
xwork-core/src/main/java/com/opensymphony/xwork2/util/location/LocatableProperties.java,31,this.propLocations = new HashMap<String,Location>();
xwork-core/src/main/java/com/opensymphony/xwork2/util/location/LocatableProperties.java,69,return propLocations.get(key);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,291,String developerNotification = LocalizedTextUtil.findText(ParametersInterceptor.class, "devmode.notification", ActionContext.getContext().getLocale(), "Developer Notification:\n{0}", new Object[]{
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,295,if (action instanceof ValidationAware) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,296,((ValidationAware) action).addActionMessage(developerNotification);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,139,private Pattern acceptedPattern = Pattern.compile(acceptedParamNames);
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,221,if ("true".equalsIgnoreCase(props.getProperty(StrutsConstants.STRUTS_DEVMODE))) {
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,222,props.setProperty(StrutsConstants.STRUTS_I18N_RELOAD, "true");
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,223,props.setProperty(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, "true");
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,224,props.setProperty(StrutsConstants.STRUTS_FREEMARKER_TEMPLATES_CACHE, "false");
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/accessor/XWorkMapPropertyAccessor.java,105,context.get(ReflectionContextState.CREATE_NULL_OBJECTS) != null
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,81,private List<String> allowedRoles = new ArrayList<String>();
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,82,private List<String> disallowedRoles = new ArrayList<String>();
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,103,LOG.debug("field: " + field.getName() + "/" + value);
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,361,if (!results.containsKey(Action.SUCCESS)) {
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,362,ResultConfig success = createResultConfig(actionClass,
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,363,new ResultInfo(Action.SUCCESS, path, packageConfig, resultsByExtension),
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,364,packageConfig, null);
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,365,results.put(Action.SUCCESS, success);
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,367,if (!results.containsKey(Action.INPUT)) {
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,368,ResultConfig input = createResultConfig(actionClass,
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,369,new ResultInfo(Action.INPUT, path, packageConfig, resultsByExtension),
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,370,packageConfig, null);
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,371,results.put(Action.INPUT, input);
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,373,if (!results.containsKey(Action.ERROR)) {
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,374,ResultConfig error = createResultConfig(actionClass,
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,375,new ResultInfo(Action.ERROR, path, packageConfig, resultsByExtension),
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,376,packageConfig, null);
plugins/convention/src/main/java/org/apache/struts2/convention/DefaultResultMapBuilder.java,377,results.put(Action.ERROR, error);
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,926,actionNamespace = StringUtils.contains(actionName, "/") ? StringUtils.substringBeforeLast(actionName, "/") : StringUtils.EMPTY;
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,952,throw new ConfigurationException("Unable to locate parent package [" + parentName + "]");
core/src/main/java/org/apache/struts2/components/Param.java,24,import java.io.Writer;
core/src/main/java/org/apache/struts2/components/Param.java,28,import org.apache.struts2.StrutsException;
core/src/main/java/org/apache/struts2/components/Param.java,30,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/dispatcher/ng/filter/StrutsPrepareAndExecuteFilter.java,77,prepare.setEncodingAndLocale(request, response);
core/src/main/java/org/apache/struts2/dispatcher/ng/filter/StrutsPrepareAndExecuteFilter.java,78,prepare.createActionContext(request, response);
core/src/main/java/org/apache/struts2/dispatcher/ng/filter/StrutsPrepareAndExecuteFilter.java,79,prepare.assignDispatcherToThread();
core/src/main/java/org/apache/struts2/dispatcher/ng/filter/StrutsPrepareFilter.java,73,prepare.setEncodingAndLocale(request, response);
core/src/main/java/org/apache/struts2/dispatcher/ng/filter/StrutsPrepareFilter.java,74,prepare.createActionContext(request, response);
core/src/main/java/org/apache/struts2/dispatcher/ng/filter/StrutsPrepareFilter.java,75,prepare.assignDispatcherToThread();
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,495,String reqStr = request.getRequestURI();
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,496,if (request.getQueryString() != null) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,497,reqStr = reqStr + "?" + request.getQueryString();
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,499,LOG.error("Could not find action or result\n" + reqStr, e);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,50,static boolean devMode = false;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,51,static boolean enableExpressionCache = true;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,59,public static void setDevMode(String mode) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,64,public static void setEnableExpressionCache(String cache) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,414,if (devMode) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,415,LOG.warn(msg, exception);
plugins/embeddedjsp/src/main/java/org/apache/struts2/el/lang/ELSupport.java,385,if (obj[0] == null) {
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,150,private static final long serialVersionUID = 4491997514314242420L;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,33,import org.apache.struts2.dispatcher.ServletRedirectResult;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,169,protected static final String REDIRECT_PREFIX = "redirect:";
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,171,protected static final String REDIRECT_ACTION_PREFIX = "redirectAction:";
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,194,mapping.setMethod(key.substring(
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,195,METHOD_PREFIX.length()));
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,211,mapping.setName(name);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,215,put(REDIRECT_PREFIX, new ParameterAction() {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,216,public void execute(String key, ActionMapping mapping) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,217,ServletRedirectResult redirect = new ServletRedirectResult();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,218,container.inject(redirect);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,219,redirect.setLocation(key.substring(REDIRECT_PREFIX
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,220,.length()));
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,221,mapping.setResult(redirect);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,225,put(REDIRECT_ACTION_PREFIX, new ParameterAction() {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,226,public void execute(String key, ActionMapping mapping) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,227,String location = key.substring(REDIRECT_ACTION_PREFIX
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,228,.length());
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,229,ServletRedirectResult redirect = new ServletRedirectResult();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,230,container.inject(redirect);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,231,String extension = getDefaultExtension();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,232,if (extension != null && extension.length() > 0) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,233,location += "." + extension;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,235,redirect.setLocation(location);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,236,mapping.setResult(redirect);
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,29,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,30,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,32,import com.opensymphony.xwork2.ActionInvocation;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,33,import com.opensymphony.xwork2.interceptor.AbstractInterceptor;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,35,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,95,String result = null;
core/src/main/java/org/apache/struts2/interceptor/RolesInterceptor.java,112,return Collections.EMPTY_LIST;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/MethodFilterInterceptorUtil.java,22,import java.util.Iterator;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/MethodFilterInterceptorUtil.java,54,Iterator quickIter = includeMethods.iterator();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/MethodFilterInterceptorUtil.java,55,for (String incMeth : includeMethods) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/MethodFilterInterceptorUtil.java,56,if (!"*".equals(incMeth) && incMeth.contains("*")) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/MethodFilterInterceptorUtil.java,61,for (String incMeth : excludeMethods) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/MethodFilterInterceptorUtil.java,62,if (!"*".equals(incMeth) && incMeth.contains("*")) {
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,24,import com.opensymphony.xwork2.*;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,27,import com.opensymphony.xwork2.config.entities.ResultConfig;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,30,import org.apache.struts.Globals;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,31,import org.apache.struts.action.*;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,32,import org.apache.struts.config.*;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,34,import java.util.Iterator;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,36,import java.util.Map;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,38,import javax.servlet.ServletContext;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,124,ActionMessage error = null;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,125,String field = null;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,126,String msg = null;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,127,Object[] values = null;
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,129,field = (String) i.next();
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,131,error = (ActionMessage) it.next();
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,132,msg = error.getKey();
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,134,values = error.getValues();
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,141,if (vaction != null) {
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,142,if (field == errors.GLOBAL_MESSAGE) {
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,143,vaction.addActionError(msg);
plugins/struts1/src/main/java/org/apache/struts2/s1/Struts1Factory.java,145,vaction.addFieldError(field, msg);
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,497,if (packageLocators != null && !disablePackageLocatorsScanning) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,498,for (String packageLocator : packageLocators) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,499,if (classPackageName.length() > 0
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,500,&& (packageLocatorsBasePackage == null || classPackageName
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,502,String[] splitted = classPackageName.split("\\.");
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,505,return true;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,20,import java.lang.reflect.Method;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,21,import java.util.ArrayList;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,22,import java.util.HashMap;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,23,import java.util.Hashtable;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,24,import java.util.Iterator;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,39,import org.apache.struts2.el.lang.ELSupport;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,40,import org.apache.struts2.jasper.Constants;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,41,import org.apache.struts2.jasper.JasperException;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,42,import org.apache.struts2.jasper.el.ELContextImpl;
plugins/embeddedjsp/src/main/java/org/apache/struts2/jasper/compiler/Validator.java,43,import org.xml.sax.Attributes;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,37,import java.util.ArrayList;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,38,import java.util.Collections;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,39,import java.util.HashSet;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,41,import java.util.List;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,42,import java.util.Map;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,43,import java.util.Set;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,437,mapping.setName(name);
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,43,put("a-close", new FactoryList(AnchorHandler.CloseHandler.class));
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,24,import com.opensymphony.xwork2.util.ClearableValueStack;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,25,import com.opensymphony.xwork2.util.LocalizedTextUtil;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,26,import com.opensymphony.xwork2.util.MemberAccessValueStack;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,28,import com.opensymphony.xwork2.util.ValueStack;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,29,import com.opensymphony.xwork2.util.ValueStackFactory;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,34,import java.util.Collection;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,35,import java.util.Collections;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,36,import java.util.Comparator;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,37,import java.util.HashSet;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,38,import java.util.Map;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,39,import java.util.Set;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,40,import java.util.TreeMap;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,233,protected void setParameters(Object action, ValueStack stack, final Map<String, Object> parameters) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,36,Set<Pattern> excludeProperties = Collections.emptySet();
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,37,Set<Pattern> acceptProperties = Collections.emptySet();
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,86,if (isAccepted(name) && !isExcluded(name)) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,35,private boolean allowStaticMethodAccess;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,48,public void setAllowStaticMethodAccess(boolean allowStaticMethodAccess) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java,49,this.allowStaticMethodAccess = allowStaticMethodAccess;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptor.java,193,String mappedResult = this.findResultFromExceptions(exceptionMappings, e);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptor.java,194,if (mappedResult != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptor.java,195,result = mappedResult;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptor.java,252,String result = null;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptor.java,262,result = exceptionMappingConfig.getResult();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ExceptionMappingInterceptor.java,267,return result;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,24,import java.util.Iterator;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,25,import java.util.Locale;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,26,import java.util.StringTokenizer;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,34,import com.opensymphony.xwork2.inject.Inject;
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,72,builder.factory(Locale.class, new Factory() {
core/src/main/java/org/apache/struts2/config/LegacyPropertiesConfigurationProvider.java,75,public synchronized Object create(Context context) throws Exception {
core/src/main/java/org/apache/struts2/config/Settings.java,24,import java.util.Iterator;
core/src/main/java/org/apache/struts2/config/Settings.java,25,import java.util.Locale;
core/src/main/java/org/apache/struts2/config/Settings.java,26,import java.util.StringTokenizer;
core/src/main/java/org/apache/struts2/config/Settings.java,28,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/config/Settings.java,271,defaultImpl = new DefaultSettings();
core/src/main/java/org/apache/struts2/config/Settings.java,274,try {
core/src/main/java/org/apache/struts2/config/Settings.java,275,String className = get(StrutsConstants.STRUTS_CONFIGURATION);
core/src/main/java/org/apache/struts2/config/Settings.java,277,if (!className.equals(defaultImpl.getClass().getName())) {
core/src/main/java/org/apache/struts2/config/Settings.java,280,defaultImpl = (Settings) ObjectFactory.getObjectFactory().buildBean(Thread.currentThread().getContextClassLoader().loadClass(className), null);
core/src/main/java/org/apache/struts2/config/Settings.java,282,LOG.error("Settings: Could not instantiate the struts.configuration object, substituting the default implementation.", e);
core/src/main/java/org/apache/struts2/config/Settings.java,297,defaultImpl = null;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,129,Map context = stack.getContext();
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,24,import java.io.Serializable;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,25,import java.util.HashMap;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,26,import java.util.Map;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,65,return invocationContext.invocation;
core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java,76,InvocationContext invocationContext = new InvocationContext(invocation, token);
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java,81,DefaultActionInvocation.this.extraContext = extraContext;
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java,82,DefaultActionInvocation.this.pushAction = pushAction;
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,48,protected String requiredposition;
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,170,public void setRequiredposition(String requiredPosition) {
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,171,this.requiredposition = requiredPosition;
core/src/main/java/org/apache/struts2/dispatcher/ng/filter/StrutsPrepareAndExecuteFilter.java,51,Dispatcher dispatcher = init.initDispatcher(config);
core/src/main/java/org/apache/struts2/dispatcher/ng/filter/StrutsPrepareFilter.java,50,Dispatcher dispatcher = init.initDispatcher(config);
core/src/main/java/org/apache/struts2/dispatcher/ng/listener/StrutsListener.java,23,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/dispatcher/ng/listener/StrutsListener.java,24,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/dispatcher/ng/listener/StrutsListener.java,47,Dispatcher dispatcher = init.initDispatcher(config);
core/src/main/java/org/apache/struts2/dispatcher/ng/servlet/StrutsServlet.java,52,Dispatcher dispatcher = init.initDispatcher(config);
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,88,protected Container container;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,90,protected List<ActionMapper> actionMappers = new ArrayList<ActionMapper>();
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,94,this.container = container;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,98,public void setActionMappers(String list) {
xwork-core/src/main/java/com/opensymphony/xwork2/ObjectFactory.java,253,Validator validator = (Validator) buildBean(className, null);
xwork-core/src/main/java/com/opensymphony/xwork2/ObjectFactory.java,254,reflectionProvider.setProperties(params, validator);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlReflectionProvider.java,48,public void setProperties(Map<String, String> props, Object o, Map<String, Object> context) {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlReflectionProvider.java,52,public void setProperties(Map<String, String> props, Object o, Map<String, Object> context,
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlReflectionProvider.java,53,boolean throwPropertyExceptions) throws ReflectionException{
xwork-core/src/main/java/com/opensymphony/xwork2/util/reflection/ReflectionProvider.java,26,void setProperties(Map<String, String> props, Object o, Map<String, Object> context);
xwork-core/src/main/java/com/opensymphony/xwork2/util/reflection/ReflectionProvider.java,37,void setProperties(Map<String, String> props, Object o, Map<String, Object> context, boolean throwPropertyExceptions) throws ReflectionException;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java,32,import java.util.*;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java,33,import java.util.zip.ZipInputStream;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java,67,validator = objectFactory.buildValidator(className, cfg.getParams(), null); // ActionContext.getContext().getContextMap());
xwork-core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerFactory.java,61,try {
xwork-core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerFactory.java,71,finally {
xwork-core/src/main/java/com/opensymphony/xwork2/util/logging/LoggerFactory.java,78,protected abstract Logger getLoggerImpl(String name);
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,93,public ContentTypeHandler getHandlerForRequest(HttpServletRequest req) {
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,95,String contentType = req.getContentType();
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,97,int index = contentType.indexOf(';');
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,99,contentType = contentType.substring(0,index).trim();
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,104,String extension = findExtension(req.getRequestURI());
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProvider.java,507,catch (Throwable t) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,352,public void handleSpecialParameters(HttpServletRequest request,
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,353,ActionMapping mapping) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,385,protected void parseNameAndNamespace(String uri, ActionMapping mapping,
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,386,ConfigurationManager configManager) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,429,if (!allowSlashesInActionNames && name != null) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,303,public ActionMapping getMapping(HttpServletRequest request,
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,304,ConfigurationManager configManager) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,321,return null;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,324,parseActionName(mapping);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,326,return mapping;
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,331,return mapping;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,24,import java.util.ArrayList;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,25,import java.util.List;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,27,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,29,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/dispatcher/mapper/CompositeActionMapper.java,93,public void setContainer(Container container) {
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,24,import java.util.Map;
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,26,import javax.faces.application.NavigationHandler;
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,27,import javax.faces.context.FacesContext;
plugins/jsf/src/main/java/org/apache/struts2/jsf/StrutsNavigationHandler.java,63,if (ctx == null && ctx.getActionInvocation() == null) {
xwork-core/src/main/java/com/opensymphony/xwork2/ObjectFactory.java,252,public Validator buildValidator(String className, Map<String, String> params, Map<String, Object> extraContext) throws Exception {
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlReflectionProvider.java,58,public void setProperties(Map<String, String> properties, Object o) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/reflection/ReflectionProvider.java,46,void setProperties(Map<String, String> properties, Object o);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,361,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,382,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,423,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,431,params.put("expression", v.expression());
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,446,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,474,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,498,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,519,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,570,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,593,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,614,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,642,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,677,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,700,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,721,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationValidationConfigurationBuilder.java,750,Map<String, String> params = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParser.java,90,addValidatorConfigs(validatorFactory, validatorNodes, new HashMap<String, String>(), validatorCfgs);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParser.java,96,Map<String, String> extraParams = new HashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParser.java,128,objectFactory.buildValidator(className, new HashMap<String, String>(), null);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParser.java,167,private void addValidatorConfigs(ValidatorFactory factory, NodeList validatorNodes, Map<String, String> extraParams, List<ValidatorConfig> validatorCfgs) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFileParser.java,171,Map<String, String> params = new HashMap<String, String>(extraParams);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/ValidatorConfig.java,37,private Map<String,String> params;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/ValidatorConfig.java,48,params = new LinkedHashMap<String, String>();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/ValidatorConfig.java,53,this.params = new LinkedHashMap<String,String>(orig.params);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/ValidatorConfig.java,85,public Map<String, String> getParams() {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/ValidatorConfig.java,141,public Builder addParam(String name, String value) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/ValidatorConfig.java,148,public Builder addParams(Map<String,String> params) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/annotations/RegexFieldValidator.java,116,String expression();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RegexFieldValidator.java,66,private boolean caseSensitive = true;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RegexFieldValidator.java,67,private boolean trim = true;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RegexFieldValidator.java,98,if ( trim ) {
core/src/main/java/org/apache/struts2/components/UIBean.java,864,return "";
core/src/main/java/org/apache/struts2/components/UIBean.java,878,return "";
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,50,protected String required;
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,178,public void setRequired(String required) {
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,179,this.required = required;
plugins/jasperreports/src/main/java/org/apache/struts2/views/jasperreports/ValueStackDataSource.java,106,if (MakeIterator.isIterable(value)) {
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,26,import static javax.servlet.http.HttpServletResponse.*;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,33,String resultCode;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,34,int status = SC_OK;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,35,Object etag;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,36,Object locationId;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,37,String location;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,38,boolean disableCaching;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,39,boolean noETag = false;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,40,Date lastModified;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,42,public DefaultHttpHeaders() {}
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,111,url = url.substring(0, lastDot)+"/"+locationId+url.substring(lastDot);
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,113,url += "/"+locationId;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,133,if (lastModified != null) {
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,134,if (String.valueOf(lastModified.getTime()).equals(reqLastModified)) {
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,135,lastModifiedNotChanged = true;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,141,(etagNotChanged && reqLastModified == null) ||
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultHttpHeaders.java,142,(lastModifiedNotChanged && reqETag == null)) {
core/src/main/java/org/apache/struts2/StrutsConstants.java,121,public static final String STRUTS_MULTIPART_HANDLER = "struts.multipart.handler";
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,137,private String multipartHandlerName;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,243,public void setMultipartHandler(String val) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,244,multipartHandlerName = val;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,696,MultiPartRequest mpr = null;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,698,Set<String> multiNames = getContainer().getInstanceNames(MultiPartRequest.class);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,706,if (mpr == null ) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,707,mpr = getContainer().getInstance(MultiPartRequest.class);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,24,import ognl.*;
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,46,private ConcurrentHashMap<String, Object> expressions = new ConcurrentHashMap<String, Object>();
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,47,private final ConcurrentHashMap<Class, BeanInfo> beanInfoCache = new ConcurrentHashMap<Class, BeanInfo>();
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,226,expressions.put(expression, o);
xwork-core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java,397,beanInfoCache.put(clazz, beanInfo);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,249,bundlesMap.put(key, bundle);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,261,bundlesMap.put(key, bundle);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,268,bundlesMap.put(key, bundle);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,272,bundlesMap.put(key, bundle);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,824,return config.getContainer();
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,296,return new RuntimeConfigurationImpl(namespaceActionConfigs, namespaceConfigs);
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,358,private class RuntimeConfigurationImpl implements RuntimeConfiguration {
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,364,public RuntimeConfigurationImpl(Map<String, Map<String, ActionConfig>> namespaceActionConfigs, Map<String, String> namespaceConfigs) {
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,368,PatternMatcher<int[]> matcher = container.getInstance(PatternMatcher.class);
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,374,namespaceActionConfigMatchers.put(ns,
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,375,new ActionConfigMatcher(matcher,
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,376,namespaceActionConfigs.get(ns), true));
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,389,public synchronized ActionConfig getActionConfig(String namespace, String name) {
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,416,ActionConfig findActionConfigInNamespace(String namespace, String name) {
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,444,public synchronized Map<String, Map<String, ActionConfig>>  getActionConfigs() {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java,20,import com.opensymphony.xwork2.XWorkMessages;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java,29,import com.opensymphony.xwork2.util.*;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java,40,import java.util.*;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java,43,import java.text.MessageFormat;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java,569,LOG.debug(key + ":" + key);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,533,String params = "";
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,535,params = name.substring(name.indexOf('?'));
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,540,if (null != mapping.getMethod() && !"".equals(mapping.getMethod())) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,541,uri.append("!").append(mapping.getMethod());
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,544,String extension = mapping.getExtension();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,559,if (extension != null) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,560,if (extension.length() == 0 || (extension.length() > 0 && uri.indexOf('.' + extension) == -1)) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,561,if (extension.length() > 0) {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,562,uri.append(".").append(extension);
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,570,return uri.toString();
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,574,public boolean isSlashesInActionNames() {
core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java,575,return allowSlashesInActionNames;
core/src/main/java/org/apache/struts2/components/UIBean.java,453,protected String requiredposition;
core/src/main/java/org/apache/struts2/components/UIBean.java,455,protected String required;
core/src/main/java/org/apache/struts2/components/UIBean.java,659,if (requiredposition != null) {
core/src/main/java/org/apache/struts2/components/UIBean.java,660,addParameter("requiredposition", findString(requiredposition));
core/src/main/java/org/apache/struts2/components/UIBean.java,663,if (required != null) {
core/src/main/java/org/apache/struts2/components/UIBean.java,664,addParameter("required", findValue(required, Boolean.class));
core/src/main/java/org/apache/struts2/components/UIBean.java,1057,public void setRequiredposition(String requiredposition) {
core/src/main/java/org/apache/struts2/components/UIBean.java,1058,this.requiredposition = requiredposition;
core/src/main/java/org/apache/struts2/components/UIBean.java,1067,public void setRequired(String required) {
core/src/main/java/org/apache/struts2/components/UIBean.java,1068,this.required = required;
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,99,uiBean.setRequiredposition(requiredposition);
core/src/main/java/org/apache/struts2/views/jsp/ui/AbstractUITag.java,101,uiBean.setRequired(required);
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,390,private UrlSet buildUrlSet() throws IOException {
archetypes/struts2-archetype-portlet/src/main/resources/archetype-resources/src/main/java/HelloAction.java,1,package ${packageName};
archetypes/struts2-archetype-portlet/src/main/resources/archetype-resources/src/main/java/HelloAction.java,8,import com.opensymphony.xwork2.Preparable;
archetypes/struts2-archetype-portlet/src/main/resources/archetype-resources/src/main/java/UpdateNameAction.java,1,package ${packageName};
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,96,ServletContext servletContext, Container container,
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,117,throws XWorkException {
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,215,Map<String, ResultConfig> results = new HashMap<String,ResultConfig>();
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,226,addParams(params).build();
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,235,String resultCode, ActionContext actionContext) {
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,246,String path = string(pathPrefix, actionName, nameSeparator, resultCode, "." , ext);
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,252,path = string(pathPrefix, actionName, "." , ext);
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,259,path = string(pathPrefix, resultCode, "." , ext);
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,266,return result;
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,270,ActionConfig actionConfig, String resultCode) throws XWorkException {
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,293,path = string(pathPrefix, actionName, "/index." , ext);
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,305,String chainedTo = new StringBuilder(actionName).append(nameSeparator).append(resultCode).toString();
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,321,Map<String, ResultTypeConfig> resultsByExtension) {
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,353,Map<String,String> params = new LinkedHashMap<String,String>();
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,411,public Object handleUnknownActionMethod(Object action, String methodName) throws NoSuchMethodException {
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,412,throw null;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,320,String encoding = this.defaultEncoding;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,24,import java.io.Writer;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,25,import java.util.Iterator;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,26,import java.util.List;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,27,import java.util.Arrays;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,31,import org.apache.struts2.util.MakeIterator;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,34,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,35,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,36,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,360,class CounterIterator implements Iterator<Object> {
core/src/main/java/org/apache/struts2/components/IteratorComponent.java,383,return value != null ? values.get(nextIndex) : nextIndex;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,55,protected String[] pathPrefixes;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,136,protected String[] parse(String packages) {
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,138,return null;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,151,return pathPrefixes.toArray(new String[pathPrefixes.size()]);
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,239,return;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,262,log = LoggerFactory.getLogger(FilterDispatcher.class);
core/src/main/java/org/apache/struts2/dispatcher/ActionContextCleanUp.java,24,import java.io.IOException;
core/src/main/java/org/apache/struts2/dispatcher/ActionContextCleanUp.java,35,import com.opensymphony.xwork2.ActionContext;
core/src/main/java/org/apache/struts2/dispatcher/ActionContextCleanUp.java,36,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/dispatcher/ActionContextCleanUp.java,37,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/dispatcher/ActionContextCleanUp.java,38,import com.opensymphony.xwork2.util.profiling.UtilTimerStack;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,24,import static javax.servlet.http.HttpServletResponse.SC_NOT_MODIFIED;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,25,import static javax.servlet.http.HttpServletResponse.SC_OK;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,33,import javax.servlet.http.HttpServletRequest;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,34,import javax.servlet.http.HttpServletResponse;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,36,import org.apache.struts2.ServletActionContext;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,37,import org.apache.struts2.rest.handler.ContentTypeHandler;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,39,import com.opensymphony.xwork2.ModelDriven;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,40,import com.opensymphony.xwork2.config.entities.ActionConfig;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,41,import com.opensymphony.xwork2.inject.Container;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,42,import com.opensymphony.xwork2.inject.Inject;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,55,String defaultExtension;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,136,throws IOException {
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,137,String resultCode = null;
plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java,169,String extCode = resultCode+"-"+handler.getExtension();
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,729,response.setContentType("text/html");
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,749,template.process(data, response.getWriter());
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,753,response.sendError(code, "Unable to show problem report: " + exp);
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,24,import java.util.Map;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,26,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,27,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,29,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,30,import org.apache.struts2.util.InvocationSessionStore;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,31,import org.apache.struts2.util.TokenHelper;
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,138,synchronized (context) {
core/src/main/java/org/apache/struts2/interceptor/TokenSessionStoreInterceptor.java,139,result.execute(savedInvocation);
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,261,return (url.indexOf(':') == -1);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,494,if(devMode) {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,501,else {
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,502,LOG.warn("Could not find action or result", e);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,506,sendError(request, response, context, HttpServletResponse.SC_INTERNAL_SERVER_ERROR, e);
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,726,public void sendError(HttpServletRequest request, HttpServletResponse response,
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,727,ServletContext ctx, int code, Exception e) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,52,static final Logger LOG = LoggerFactory.getLogger(MultiPartRequest.class);
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,24,import java.io.IOException;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,26,import javax.servlet.http.HttpServletRequest;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,27,import javax.servlet.http.HttpServletResponse;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,29,import org.apache.struts2.ServletActionContext;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,30,import org.apache.struts2.views.freemarker.FreemarkerResult;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,31,import org.apache.tiles.context.TilesRequestContext;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,32,import org.apache.tiles.context.TilesRequestContextWrapper;
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,77,public StrutsTilesRequestContext(TilesRequestContext context,
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,78,String mask) {
plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java,84,if (include.endsWith(mask)) {
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,24,import java.util.LinkedHashMap;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,25,import java.util.Map;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,27,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,28,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,30,import org.apache.struts2.views.annotations.StrutsTag;
core/src/main/java/org/apache/struts2/components/OptionTransferSelect.java,31,import org.apache.struts2.views.annotations.StrutsTagAttribute;
core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java,709,request = new MultiPartRequestWrapper(mpr, request, getSaveDir(servletContext));
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,55,protected Map<String,List<FileItem>> files = new HashMap<String,List<FileItem>>();
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,58,protected Map<String,List<String>> params = new HashMap<String,List<String>>();
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,83,errors.add(e.getMessage());
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,271,public List getErrors() {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequest.java,117,public List getErrors();
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,60,Collection<String> errors;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,61,MultiPartRequest multi;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,70,public MultiPartRequestWrapper(MultiPartRequest multiPartRequest, HttpServletRequest request, String saveDir) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,76,for (Object o : multi.getErrors()) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,77,String error = (String) o;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,81,addError("Cannot parse request: "+e.toString());
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,203,return !((errors == null) || errors.isEmpty());
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,221,if (errors == null) {
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,222,errors = new ArrayList<String>();
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,225,errors.add(anErrorMessage);
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,115,public Enumeration getParameterNames() {
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,126,List values = new ArrayList();
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,129,values.add(enumeration.nextElement());
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,132,return (String[]) values.toArray(new String[values.size()]);
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,135,public List getErrors() {
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,136,return Collections.EMPTY_LIST;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,132,boolean ordered = false;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,133,Set<Pattern> excludeParams = Collections.emptySet();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,134,Set<Pattern> acceptParams = Collections.emptySet();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,135,static boolean devMode = false;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,149,public static void setDevMode(String mode) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,252,&& (parameterNameAware == null
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java,253,|| parameterNameAware.acceptableParameterName(name));
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,45,private ObjectFactory objectFactory;
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,50,this.objectFactory = fac;
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,57,this.objectFactory = fac;
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,175,this.add(objectFactory.buildBean(clazz, null)); //ActionContext.getContext().getContextMap()));
core/src/main/java/org/apache/struts2/util/TextProviderHelper.java,101,if (msg.equals(defaultMessage)) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,131,clazz = (Class) xworkConverter
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,132,.getConverter(parentClass, DEPRECATED_ELEMENT_PREFIX + property);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,178,public boolean shouldCreateIfNew(Class parentClass,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,179,String property,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,180,Object target,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,181,String keyProperty,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,182,boolean isIndexAccessed) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,192,if (configValue!=null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,204,if ((target instanceof Map) || isIndexAccessed) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,205,return true;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,207,return false;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,246,private <T extends Annotation>T getAnnotationFromGetter(Class parentClass, String property, Class<T> annotationClass) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,254,catch (ReflectionException ognle) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,255,; // ignore
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,257,catch (IntrospectionException ie) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,258,; // ignore
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,271,private <T extends Annotation>T getAnnotationFromSetter(Class parentClass, String property, Class<T> annotationClass) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,279,catch (ReflectionException ognle) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,280,; // ignore
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,282,catch (IntrospectionException ie) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,283,; // ignore
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,314,genericType = setter.getGenericParameterTypes()[0];
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,316,catch (ReflectionException ognle) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,317,; // ignore
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,319,catch (IntrospectionException ie) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,320,; // ignore
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,330,catch (ReflectionException ognle) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,331,; // ignore
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,333,catch (IntrospectionException ie) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,334,; // ignore
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,347,if ( resultType instanceof ParameterizedType) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultObjectTypeDeterminer.java,354,if ( LOG.isDebugEnabled()) {
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,24,import java.io.IOException;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,25,import java.net.URL;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,26,import java.util.*;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,28,import org.osgi.framework.Bundle;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,29,import org.osgi.framework.BundleContext;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,32,import com.opensymphony.xwork2.ActionContext;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,33,import com.opensymphony.xwork2.inject.Inject;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,36,import com.opensymphony.xwork2.config.PackageProvider;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,40,import com.opensymphony.xwork2.util.location.Location;
plugins/osgi/src/main/java/org/apache/struts2/osgi/BundlePackageLoader.java,50,public List<PackageConfig> loadPackages(Bundle bundle, BundleContext bundleContext, ObjectFactory objectFactory, Map<String, PackageConfig> pkgConfigs) throws ConfigurationException {
plugins/osgi/src/main/java/org/apache/struts2/osgi/OsgiConfigurationProvider.java,135,for (PackageConfig pkg : loader.loadPackages(bundle, bundleContext, objectFactory, configuration.getPackageConfigs())) {
plugins/osgi/src/main/java/org/apache/struts2/osgi/PackageLoader.java,24,import java.util.List;
plugins/osgi/src/main/java/org/apache/struts2/osgi/PackageLoader.java,25,import java.util.Map;
plugins/osgi/src/main/java/org/apache/struts2/osgi/PackageLoader.java,27,import org.osgi.framework.Bundle;
plugins/osgi/src/main/java/org/apache/struts2/osgi/PackageLoader.java,28,import org.osgi.framework.BundleContext;
plugins/osgi/src/main/java/org/apache/struts2/osgi/PackageLoader.java,32,import com.opensymphony.xwork2.config.PackageProvider;
plugins/osgi/src/main/java/org/apache/struts2/osgi/PackageLoader.java,39,List<PackageConfig> loadPackages(Bundle bundle, BundleContext bundleContext, ObjectFactory objectFactory, Map<String, PackageConfig> map) throws ConfigurationException;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,30,import com.opensymphony.xwork2.util.LocalizedTextUtil;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,40,import java.util.*;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,182,private static final String DEFAULT_MESSAGE = "no.message.found";
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,184,protected boolean useActionMessageBundle;
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,197,public void setUseActionMessageBundle(String value) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,198,this.useActionMessageBundle = Boolean.valueOf(value);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,240,LOG.debug(getTextMessage("struts.messages.bypass.request", new Object[]{proxy.getNamespace(), proxy.getActionName()}, ac.getLocale()));
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,290,if (acceptFile(action, files[index], fileName[index], contentType[index], inputName, validation, ac.getLocale())) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,350,protected boolean acceptFile(Object action, File file, String filename, String contentType, String inputName, ValidationAware validation, Locale locale) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,355,String errMsg = getTextMessage(action, "struts.messages.error.uploading", new Object[]{inputName}, locale);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,362,String errMsg = getTextMessage(action, "struts.messages.error.file.too.large", new Object[]{inputName, filename, file.getName(), "" + file.length()}, locale);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,369,String errMsg = getTextMessage(action, "struts.messages.error.content.type.not.allowed", new Object[]{inputName, filename, file.getName(), contentType}, locale);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,376,String errMsg = getTextMessage(action, "struts.messages.error.file.extension.not.allowed", new Object[]{inputName, filename, file.getName(), contentType}, locale);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,436,private String getTextMessage(String messageKey, Object[] args, Locale locale) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,437,return getTextMessage(null, messageKey, args, locale);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,440,private String getTextMessage(Object action, String messageKey, Object[] args, Locale locale) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,441,if (args == null || args.length == 0) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,442,if (action != null && useActionMessageBundle) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,443,return LocalizedTextUtil.findText(action.getClass(), messageKey, locale);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,445,return LocalizedTextUtil.findText(this.getClass(), messageKey, locale);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,447,if (action != null && useActionMessageBundle) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,448,return LocalizedTextUtil.findText(action.getClass(), messageKey, locale, DEFAULT_MESSAGE, args);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,450,return LocalizedTextUtil.findText(this.getClass(), messageKey, locale, DEFAULT_MESSAGE, args);
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,33,import com.opensymphony.xwork2.util.LocalizedTextUtil;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,157,String errorMessage = LocalizedTextUtil.findText(this.getClass(), "struts.messages.invalid.token",
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,158,invocation.getInvocationContext().getLocale(),
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderFactory.java,37,protected TextProvider getTextProvider() {
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderFactory.java,38,if (this.textProvider == null) {
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderFactory.java,39,return new TextProviderSupport();
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderFactory.java,41,return textProvider;
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderFactory.java,46,TextProvider instance = getTextProvider();
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderFactory.java,55,TextProvider instance = getTextProvider();
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderSupport.java,21,import java.util.*;
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,226,props.setProperty("devMode", "true");
core/src/main/java/org/apache/struts2/config/BeanSelectionProvider.java,228,props.setProperty("devMode", "false");
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,250,builder.constant("devMode", "false");
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,251,builder.constant("logMissingProperties", "false");
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/MockConfiguration.java,59,builder.constant("devMode", "false");
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java,115,props.setProperty("devMode", Boolean.FALSE.toString());
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java,116,props.setProperty("logMissingProperties", Boolean.FALSE.toString());
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java,117,props.setProperty("enableOGNLExpressionCache", Boolean.TRUE.toString());
plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java,74,public void setValidateJPAAnnotations(boolean validateJPAAnnotations) {
plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java,75,this.validateJPAAnnotations = validateJPAAnnotations;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequest.java,29,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,33,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,35,import org.apache.struts2.dispatcher.StrutsRequestWrapper;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,37,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java,38,import com.opensymphony.xwork2.util.logging.LoggerFactory;
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,34,import javax.servlet.http.HttpServletRequest;
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,36,import org.apache.struts2.StrutsConstants;
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,38,import com.opensymphony.xwork2.inject.Inject;
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,39,import com.opensymphony.xwork2.util.logging.Logger;
plugins/pell-multipart/src/main/java/org/apache/struts2/dispatcher/multipart/PellMultiPartRequest.java,40,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,23,import org.apache.struts2.dispatcher.Dispatcher;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,24,import org.apache.struts2.dispatcher.mapper.ActionMapping;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,25,import org.apache.struts2.dispatcher.mapper.ActionMapper;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,26,import org.apache.struts2.StrutsException;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,27,import org.apache.struts2.RequestUtils;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,29,import javax.servlet.ServletException;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,30,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,31,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,32,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,103,ActionContext.setContext(null);
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,104,Dispatcher.setInstance(null);
core/src/main/java/org/apache/struts2/dispatcher/ng/PrepareOperations.java,176,throw new StrutsException("something is seriously wrong, Dispatcher is not initialized (null) ");
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,747,int index = pkg.lastIndexOf(packageLocator);
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,751,(pkg.charAt(index - 1) == '.' && pkg.charAt(index + packageLocator.length()) == '.'))) {
plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java,752,pkgPart = actionClass.getName().substring(index + packageLocator.length() + 1);
plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java,174,addValidationErrors(violations.toArray(new ConstraintViolation[0]), action, valueStack, null);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,117,Charset charset = null;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,118,if (charSet != null) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,119,if (Charset.isSupported(charSet)) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,120,charset = Charset.forName(charSet);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,122,else {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,124,charset = null;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,129,ServletContext servletContext = (ServletContext) invocation.getInvocationContext().get(SERVLET_CONTEXT);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,132,if (charset != null) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,133,response.setContentType("text/plain; charset="+charSet);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,135,else {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,136,response.setContentType("text/plain");
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,138,response.setHeader("Content-Disposition", "inline");
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,154,char[] buffer = new char[BUFFER_SIZE];
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,156,while((charRead = reader.read(buffer)) != -1) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,157,writer.write(buffer, 0, charRead);
core/src/main/java/org/apache/struts2/interceptor/CreateSessionInterceptor.java,24,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/interceptor/CreateSessionInterceptor.java,92,ServletActionContext.getRequest().getSession(true);
xwork-core/src/main/java/com/opensymphony/xwork2/util/FileManager.java,142,if (URLUtil.isJBoss5Url(fileUrl)) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,18,import java.util.regex.Pattern;
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,19,import java.util.regex.Matcher;
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,20,import java.net.URL;
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,46,if (isJBoss5Url(url)){
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,47,return new URL("file", null, fileName.substring(fileName.indexOf(":") + 1));
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,100,public static boolean isJBoss5Url(URL fileUrl) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/finder/ClassFinder.java,472,classNames.add(packageName + name);
xwork-core/src/main/java/com/opensymphony/xwork2/util/finder/UrlSet.java,193,newUrls.put(finalUrl.toExternalForm(), finalUrl);
xwork-core/src/main/java/com/opensymphony/xwork2/util/finder/UrlSet.java,262,list.addAll(Collections.list(classLoader.getResources("")));
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,22,import com.opensymphony.xwork2.config.*;
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,23,import com.opensymphony.xwork2.config.entities.*;
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,29,import com.opensymphony.xwork2.inject.*;
xwork-core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java,44,import java.util.*;
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java,114,.factory(XWorkBasicConverter.class, Scope.SINGLETON);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,18,import com.opensymphony.xwork2.ActionContext;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,21,import com.opensymphony.xwork2.conversion.ObjectTypeDeterminer;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,24,import com.opensymphony.xwork2.util.XWorkList;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,26,import java.lang.reflect.Array;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,27,import java.lang.reflect.Constructor;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,29,import java.math.BigDecimal;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,30,import java.math.BigInteger;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,66,private static String MILLISECOND_FORMAT = ".SSS";
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,68,private ObjectTypeDeterminer objectTypeDeterminer;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,73,public void setObjectTypeDeterminer(ObjectTypeDeterminer det) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,74,this.objectTypeDeterminer = det;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,88,public Object convertValue(Map<String, Object> context, Object o, Member member, String s, Object value, Class toType) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,113,result = doConvertToArray(context, o, member, s, value, toType);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,117,Date dateResult = (Date) doConvertToDate(context, value, Date.class);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,118,if (dateResult != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,119,Calendar calendar = Calendar.getInstance();
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,120,calendar.setTime(dateResult);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,121,result = calendar;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,124,result = doConvertToCollection(context, o, member, s, value, toType);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,146,result = convertValue(context, o, member, s, value, toType);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,159,private Locale getLocale(Map<String, Object> context) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,160,if (context == null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,161,return Locale.getDefault();
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,164,Locale locale = (Locale) context.get(ActionContext.LOCALE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,166,if (locale == null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,167,locale = Locale.getDefault();
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,170,return locale;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,183,private Collection createCollection(Object fromObject, String propertyName, Class toType, Class memberType, int size) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,195,Collection result;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,197,if (toType == Set.class) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,198,if (size > 0) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,199,result = new HashSet(size);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,201,result = new HashSet();
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,204,result = new TreeSet();
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,206,if (size > 0) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,216,private Object doConvertToArray(Map<String, Object> context, Object o, Member member, String s, Object value, Class toType) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,217,Object result = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,218,Class componentType = toType.getComponentType();
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,220,if (componentType != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,221,TypeConverter converter = getTypeConverter(context);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,223,if (value.getClass().isArray()) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,224,int length = Array.getLength(value);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,225,result = Array.newInstance(componentType, length);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,227,for (int i = 0; i < length; i++) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,228,Object valueItem = Array.get(value, i);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,229,Array.set(result, i, converter.convertValue(context, o, member, s, valueItem, componentType));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,232,result = Array.newInstance(componentType, 1);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,233,Array.set(result, 0, converter.convertValue(context, o, member, s, value, componentType));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,237,return result;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,274,private Collection doConvertToCollection(Map<String, Object> context, Object o, Member member, String prop, Object value, Class toType) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,275,Collection result;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,276,Class memberType = String.class;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,278,if (o != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,280,memberType = objectTypeDeterminer.getElementClass(o.getClass(), prop, null);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,282,if (memberType == null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,283,memberType = String.class;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,287,if (toType.isAssignableFrom(value.getClass())) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,289,result = (Collection) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,291,Object[] objArray = (Object[]) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,292,TypeConverter converter = getTypeConverter(context);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,293,result = createCollection(o, prop, toType, memberType, objArray.length);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,295,for (Object anObjArray : objArray) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,296,result.add(converter.convertValue(context, o, member, prop, anObjArray, memberType));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,299,Collection col = (Collection) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,300,TypeConverter converter = getTypeConverter(context);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,301,result = createCollection(o, prop, toType, memberType, col.size());
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,303,for (Object aCol : col) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,304,result.add(converter.convertValue(context, o, member, prop, aCol, memberType));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,307,result = createCollection(o, prop, toType, memberType, -1);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,308,result.add(value);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,311,return result;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,315,Date result = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,317,if (value instanceof String && value != null && ((String) value).length() > 0) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,318,String sa = (String) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,319,Locale locale = getLocale(context);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,321,DateFormat df = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,322,if (java.sql.Time.class == toType) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,323,df = DateFormat.getTimeInstance(DateFormat.MEDIUM, locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,325,Date check = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,326,SimpleDateFormat dtfmt = (SimpleDateFormat) DateFormat.getDateTimeInstance(DateFormat.SHORT,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,327,DateFormat.MEDIUM,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,328,locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,329,SimpleDateFormat fullfmt = new SimpleDateFormat(dtfmt.toPattern() + MILLISECOND_FORMAT,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,330,locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,332,SimpleDateFormat dfmt = (SimpleDateFormat) DateFormat.getDateInstance(DateFormat.SHORT,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,333,locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,335,SimpleDateFormat[] fmts = {fullfmt, dtfmt, dfmt};
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,336,for (SimpleDateFormat fmt : fmts) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,337,try {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,338,check = fmt.parse(sa);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,339,df = fmt;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,340,if (check != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,341,break;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,347,Date check = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,348,DateFormat[] dfs = getDateFormats(locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,349,for (DateFormat df1 : dfs) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,350,try {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,351,check = df1.parse(sa);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,352,df = df1;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,353,if (check != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,354,break;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,357,catch (ParseException ignore) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,362,if (df == null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,363,df = DateFormat.getDateInstance(DateFormat.SHORT, locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,365,try {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,367,result = df.parse(sa);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,368,if (!(Date.class == toType)) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,369,try {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,370,Constructor constructor = toType.getConstructor(new Class[]{long.class});
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,371,return constructor.newInstance(new Object[]{Long.valueOf(result.getTime())});
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,373,throw new XWorkException("Couldn't create class " + toType + " using default (long) constructor", e);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,377,throw new XWorkException("Could not parse date", e);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,380,result = (Date) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,382,return result;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,385,private DateFormat[] getDateFormats(Locale locale) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,386,DateFormat dt1 = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.LONG, locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,387,DateFormat dt2 = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.MEDIUM, locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,388,DateFormat dt3 = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,390,DateFormat d1 = DateFormat.getDateInstance(DateFormat.SHORT, locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,391,DateFormat d2 = DateFormat.getDateInstance(DateFormat.MEDIUM, locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,392,DateFormat d3 = DateFormat.getDateInstance(DateFormat.LONG, locale);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,394,DateFormat rfc3399 = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,397,return dfs;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,401,if (value instanceof String) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,402,if (toType == BigDecimal.class) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,403,return new BigDecimal((String) value);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,405,return new BigInteger((String) value);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,407,Object convertedValue = super.convertValue(context, value, toType);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,408,String stringValue = (String) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,410,throw new XWorkException("Overflow or underflow casting: \"" + stringValue + "\" into class " + convertedValue.getClass().getName());
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,412,return convertedValue;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,414,String stringValue = (String) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,415,if (!toType.isPrimitive() && (stringValue == null || stringValue.length() == 0)) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,416,return null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,418,NumberFormat numFormat = NumberFormat.getInstance(getLocale(context));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,419,ParsePosition parsePos = new ParsePosition(0);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,420,if (isIntegerType(toType)) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,421,numFormat.setParseIntegerOnly(true);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,423,numFormat.setGroupingUsed(true);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,424,Number number = numFormat.parse(stringValue, parsePos);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,426,if (parsePos.getIndex() != stringValue.length()) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,427,throw new XWorkException("Unparseable number: \"" + stringValue + "\" at position "
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,428,+ parsePos.getIndex());
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,431,throw new XWorkException("Overflow or underflow casting: \"" + stringValue + "\" into class " + number.getClass().getName());
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,433,value = super.convertValue(context, number, toType);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,437,Object[] objArray = (Object[]) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,439,if (objArray.length == 1) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,440,return doConvertToNumber(context, objArray[0], toType);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,445,return super.convertValue(context, value, toType);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,448,protected boolean isInRange(Number value, String stringValue, Class toType) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,449,Number bigValue = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,450,Number lowerBound = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,451,Number upperBound = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,453,try {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,454,if (double.class == toType || Double.class == toType) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,455,bigValue = new BigDecimal(stringValue);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,457,lowerBound = BigDecimal.valueOf(Double.MAX_VALUE).negate();
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,458,upperBound = BigDecimal.valueOf(Double.MAX_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,460,bigValue = new BigDecimal(stringValue);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,462,lowerBound = BigDecimal.valueOf(Float.MAX_VALUE).negate();
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,463,upperBound = BigDecimal.valueOf(Float.MAX_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,465,bigValue = new BigInteger(stringValue);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,466,lowerBound = BigInteger.valueOf(Byte.MIN_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,467,upperBound = BigInteger.valueOf(Byte.MAX_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,469,bigValue = new BigInteger(stringValue);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,470,lowerBound = BigInteger.valueOf(Character.MIN_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,471,upperBound = BigInteger.valueOf(Character.MAX_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,473,bigValue = new BigInteger(stringValue);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,474,lowerBound = BigInteger.valueOf(Short.MIN_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,475,upperBound = BigInteger.valueOf(Short.MAX_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,477,bigValue = new BigInteger(stringValue);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,478,lowerBound = BigInteger.valueOf(Integer.MIN_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,479,upperBound = BigInteger.valueOf(Integer.MAX_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,481,bigValue = new BigInteger(stringValue);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,482,lowerBound = BigInteger.valueOf(Long.MIN_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,483,upperBound = BigInteger.valueOf(Long.MAX_VALUE);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,487,return true;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,490,return ((Comparable)bigValue).compareTo(lowerBound) >= 0 && ((Comparable)bigValue).compareTo(upperBound) <= 0;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,493,protected boolean isIntegerType(Class type) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,494,if (double.class == type || float.class == type || Double.class == type || Float.class == type
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,495,|| char.class == type || Character.class == type) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,496,return false;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,499,return true;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,505,private String doConvertFromNumberToString(Map<String, Object> context, Object value, Class toType) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,507,if (Number.class.isAssignableFrom(toType)) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,508,NumberFormat numFormat = NumberFormat.getInstance(getLocale(context));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,509,if (isIntegerType(toType)) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,510,numFormat.setParseIntegerOnly(true);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,512,numFormat.setGroupingUsed(true);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,513,numFormat.setMaximumFractionDigits(99); // to be sure we include all digits after decimal seperator, otherwise some of the fractions can be chopped
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,515,String number = numFormat.format(value);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,516,if (number != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,517,return number;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,521,return null; // no number
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,525,private String doConvertToString(Map<String, Object> context, Object value) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,526,String result = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,528,if (value instanceof int[]) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,529,int[] x = (int[]) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,530,List<Integer> intArray = new ArrayList<Integer>(x.length);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,532,for (int aX : x) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,533,intArray.add(Integer.valueOf(aX));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,536,result = StringUtils.join(intArray, ", ");
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,538,long[] x = (long[]) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,539,List<Long> longArray = new ArrayList<Long>(x.length);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,541,for (long aX : x) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,542,longArray.add(Long.valueOf(aX));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,545,result = StringUtils.join(longArray, ", ");
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,547,double[] x = (double[]) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,548,List<Double> doubleArray = new ArrayList<Double>(x.length);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,550,for (double aX : x) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,551,doubleArray.add(new Double(aX));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,554,result = StringUtils.join(doubleArray, ", ");
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,556,boolean[] x = (boolean[]) value;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,557,List<Boolean> booleanArray = new ArrayList<Boolean>(x.length);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,559,for (boolean aX : x) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,560,booleanArray.add(new Boolean(aX));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,563,result = StringUtils.join(booleanArray, ", ");
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,565,DateFormat df = null;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,566,if (value instanceof java.sql.Time) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,567,df = DateFormat.getTimeInstance(DateFormat.MEDIUM, getLocale(context));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,569,SimpleDateFormat dfmt = (SimpleDateFormat) DateFormat.getDateTimeInstance(DateFormat.SHORT,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,570,DateFormat.MEDIUM,
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,571,getLocale(context));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,572,df = new SimpleDateFormat(dfmt.toPattern() + MILLISECOND_FORMAT);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,574,df = DateFormat.getDateInstance(DateFormat.SHORT, getLocale(context));
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,576,result = df.format(value);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,578,result = StringUtils.join((String[]) value, ", ");
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,581,return result;
core/src/main/java/org/apache/struts2/components/Bean.java,24,import java.io.Writer;
core/src/main/java/org/apache/struts2/components/Bean.java,26,import org.apache.struts2.views.annotations.StrutsTag;
core/src/main/java/org/apache/struts2/components/Bean.java,27,import org.apache.struts2.views.annotations.StrutsTagAttribute;
core/src/main/java/org/apache/struts2/components/Bean.java,31,import com.opensymphony.xwork2.util.ClassLoaderUtil;
core/src/main/java/org/apache/struts2/components/Bean.java,127,String beanName = findString(name, "name", "Bean name is required. Example: com.acme.FooBean");
core/src/main/java/org/apache/struts2/components/Bean.java,128,bean = objectFactory.buildBean(ClassLoaderUtil.loadClass(beanName, getClass()), stack.getContext());
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java,69,final String validatorKey = buildValidatorKey(clazz);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java,210,protected static String buildValidatorKey(Class clazz) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java,220,sb.append("|");
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java,221,sb.append(proxy.getMethod());
xwork-core/src/main/java/com/opensymphony/xwork2/validator/ValidationInterceptor.java,22,import com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/ValidationInterceptor.java,209,String context = proxy.getActionName();
core/src/main/java/org/apache/struts2/util/RegexPatternMatcher.java,78,String newPattern = data.replaceAll("(\\{.*?:(.*?)\\})", "($2)");
plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java,119,throw new ServletException("Error code [" + response.getStatus() + "], Error: ["
plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java,120,+ response.getErrorMessage() + "]");
plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java,140,ActionContext invocationContext = proxy.getInvocation().getInvocationContext();
plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java,141,invocationContext.setParameters(new HashMap(request.getParameterMap()));
plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java,143,ActionContext.setContext(invocationContext);
plugins/junit/src/main/java/org/apache/struts2/StrutsTestCase.java,188,initDispatcher(dispatcherInitParams);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,31,import java.text.*;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,32,import java.util.*;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,34,import org.apache.commons.lang.StringUtils;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,69,private XWorkConverter xworkConverter;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,78,public void setXWorkConverter(XWorkConverter conv) {
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,79,this.xworkConverter = conv;
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,207,result = new XWorkList(objectFactory, xworkConverter, memberType, size);
xwork-core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkBasicConverter.java,209,result = new XWorkList(objectFactory, xworkConverter, memberType);
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,43,private XWorkConverter conv;
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,47,public XWorkList(ObjectFactory fac, XWorkConverter conv, Class clazz) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,48,this.conv = conv;
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,53,public XWorkList(ObjectFactory fac, XWorkConverter conv, Class clazz, int initialCapacity) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,56,this.conv = conv;
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/ActionConfig.java,22,import java.util.*;
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/ActionConfig.java,24,import org.apache.commons.lang.StringUtils;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,28,import java.util.Iterator;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,34,import org.apache.struts2.dispatcher.Dispatcher;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,35,import org.apache.struts2.util.ClassLoaderUtils;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,37,import com.opensymphony.xwork2.config.Configuration;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,38,import com.opensymphony.xwork2.config.entities.ActionConfig;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,39,import com.opensymphony.xwork2.inject.Inject;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,40,import com.opensymphony.xwork2.util.ClassLoaderUtil;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,41,import com.opensymphony.xwork2.util.ResolverUtil;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,55,public Set getNamespaces() {
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,56,Set namespaces = Collections.EMPTY_SET;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,57,Map allActionConfigs = configuration.getRuntimeConfiguration().getActionConfigs();
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,64,public Set getActionNames(String namespace) {
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,65,Set actionNames = Collections.EMPTY_SET;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,66,Map allActionConfigs = configuration.getRuntimeConfiguration().getActionConfigs();
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,68,Map actionMappings = (Map) allActionConfigs.get(namespace);
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,78,Map allActionConfigs = configuration.getRuntimeConfiguration().getActionConfigs();
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,80,Map actionMappings = (Map) allActionConfigs.get(namespace);
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ConfigurationHelper.java,82,config = (ActionConfig) actionMappings.get(actionName);
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,24,import java.beans.PropertyDescriptor;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,25,import java.util.Set;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,26,import java.util.TreeSet;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,47,private Set actionNames;
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,108,actionNames =
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,109,new TreeSet(configHelper.getActionNames(namespace));
plugins/config-browser/src/main/java/org/apache/struts2/config_browser/ShowConfigAction.java,112,properties = reflectionProvider.getPropertyDescriptors(clazz);
apps/showcase/src/main/java/org/apache/struts2/showcase/UITagExample.java,31,import org.apache.struts2.ServletActionContext;
apps/showcase/src/main/java/org/apache/struts2/showcase/UITagExample.java,33,import com.opensymphony.xwork2.ActionSupport;
apps/showcase/src/main/java/org/apache/struts2/showcase/UITagExample.java,34,import com.opensymphony.xwork2.Validateable;
apps/showcase/src/main/java/org/apache/struts2/showcase/UITagExample.java,35,import com.opensymphony.xwork2.util.ValueStack;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,24,import java.util.Random;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,26,import javax.servlet.http.HttpServletRequest;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,27,import javax.servlet.http.HttpServletResponse;
plugins/dojo/src/main/java/org/apache/struts2/dojo/components/TabbedPanel.java,34,import com.opensymphony.xwork2.util.ValueStack;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java,219,sb.append(proxy.getConfig().getName());
xwork-core/src/main/java/com/opensymphony/xwork2/spring/SpringObjectFactory.java,139,Object o = null;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,24,import java.io.ByteArrayOutputStream;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,25,import java.io.FileWriter;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,26,import java.io.IOException;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,27,import java.io.InputStream;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,28,import java.io.Writer;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,33,import com.opensymphony.xwork2.util.logging.Logger;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,34,import com.opensymphony.xwork2.util.logging.LoggerFactory;
plugins/sitegraph/src/main/java/org/apache/struts2/sitegraph/SiteGraph.java,123,StrutsConfigRetriever.setConfiguration(configDir, views.split("[, ]+"));
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,24,import java.io.File;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,25,import java.io.IOException;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,26,import java.io.InputStream;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,27,import java.util.*;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,28,import java.text.SimpleDateFormat;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,30,import javax.servlet.GenericServlet;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,31,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,32,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,33,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,34,import javax.servlet.http.HttpSession;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,36,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,37,import org.apache.struts2.views.JspSupportServlet;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,38,import org.apache.struts2.views.TagLibrary;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,39,import org.apache.struts2.views.util.ContextUtil;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,48,import freemarker.cache.ClassTemplateLoader;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,49,import freemarker.cache.FileTemplateLoader;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,50,import freemarker.cache.MultiTemplateLoader;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,51,import freemarker.cache.TemplateLoader;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,52,import freemarker.cache.WebappTemplateLoader;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,271,templatePath = "class://";
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,392,if (templatePath.startsWith("class://")) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,394,templatePathLoader = new ClassTemplateLoader(getClass(), templatePath.substring(7));
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,396,templatePathLoader = new FileTemplateLoader(new File(templatePath));
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,432,Iterator i = p.keySet().iterator();
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,433,while (i.hasNext()) {
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java,434,String name = (String) i.next();
core/src/main/java/org/apache/struts2/interceptor/StrutsConversionErrorInterceptor.java,83,return "'" + stack.findValue("top", String.class) + "'";
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ConversionErrorInterceptor.java,87,return "'" + value + "'";
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,136,private static final Logger LOG = LoggerFactory.getLogger(RepopulateConversionErrorFieldValidatorSupport.class);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,138,private String repopulateFieldAsString = "false";
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,139,private boolean repopulateFieldAsBoolean = false;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,141,public String getRepopulateField() {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,142,return repopulateFieldAsString;
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,145,public void setRepopulateField(String repopulateField) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,146,this.repopulateFieldAsString = repopulateField == null ? repopulateField : repopulateField.trim();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,147,this.repopulateFieldAsBoolean = "true".equalsIgnoreCase(this.repopulateFieldAsString) ? (true) : (false);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,150,public void validate(Object object) throws ValidationException {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,151,doValidate(object);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,152,if (repopulateFieldAsBoolean) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,153,repopulateField(object);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,157,public void repopulateField(Object object) throws ValidationException {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,159,ActionInvocation invocation = ActionContext.getContext().getActionInvocation();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,160,Map<String, Object> conversionErrors = ActionContext.getContext().getConversionErrors();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,162,String fieldName = getFieldName();
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,163,String fullFieldName = getValidatorContext().getFullFieldName(fieldName);
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,173,if (tmpValue != null && (tmpValue.length > 0)) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,175,fakeParams.put(fullFieldName, "'" + tmpValue[0] + "'");
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,182,fakeParams.put(fullFieldName, "'" + tmpValue + "'");
xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java,199,protected abstract void doValidate(Object object) throws ValidationException;
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,109,response.getWriter().print("/* {} */");
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,160,sb.append("/* { ");
core/src/main/java/org/apache/struts2/interceptor/validation/JSONValidationInterceptor.java,193,sb.append("} */");
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java,163,this.method = "execute";
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/ActionConfig.java,66,allowedMethods.add(WILDCARD);
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/ActionConfig.java,134,return allowedMethods.contains(method);
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/ActionConfig.java,319,target.allowedMethods.addAll(methods);
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/PackageConfig.java,207,if((defaultClassRef == null) && !parents.isEmpty()) {
xwork-core/src/main/java/com/opensymphony/xwork2/config/entities/PackageConfig.java,215,return defaultClassRef;
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/XmlConfigurationProvider.java,566,boolean isAbstract = Boolean.valueOf(abstractVal).booleanValue();
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,660,reloadBundles();
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,723,reloadBundles();
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,837,clearMap(ResourceBundle.class, null, "cacheList");
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,841,clearTomcatCache();
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,329,if (!excludeNullProperties || (value != null)) {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,330,if (hasData) {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,331,this.add(',');
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,333,this.add('"');
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,334,this.add(name);
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,335,this.add("\":");
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,336,this.value(value, method);
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,337,return true;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,340,return false;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,168,this.wrapWithComments, json, true, writeGzip, noCache, -1, -1, prefix, contentType));
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,220,response.setContentType("application/json-rpc;charset=" + serializationParams.getEncoding());
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,221,else
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,222,response.setContentType(serializationParams.getContentType() + ";charset="
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,223,+ serializationParams.getEncoding());
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,34,private static final Pattern JAR_PATTERN = Pattern.compile("^(jar:|wsjar:|zip:|vfsfile:|code-source:)?(file:)?(.*?)(\\!/|.jar/)(.*)");
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,66,public final static boolean verifyUrl(String url) {
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,34,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,35,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,37,import org.apache.struts2.StrutsConstants;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,38,import org.apache.struts2.dispatcher.ng.HostConfig;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,39,import org.apache.struts2.util.ClassLoaderUtils;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,41,import com.opensymphony.xwork2.inject.Inject;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,42,import com.opensymphony.xwork2.util.ClassLoaderUtil;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,43,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,44,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,345,return serveStatic && (resourcePath.startsWith("/struts") || resourcePath.startsWith("/static"));
core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java,80,result = urlComponent.determineActionURL(action, namespace, urlComponent.getMethod(),urlComponent.getHttpServletRequest(), urlComponent.getHttpServletResponse(), urlComponent.getParameters(), scheme, urlComponent.isIncludeContext(), urlComponent.isEncode(), urlComponent.isForceAddSchemeHostAndPort(), urlComponent.isEscapeAmp());
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,24,import java.util.HashMap;
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,25,import java.util.LinkedHashMap;
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,26,import java.util.Map;
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,41,import com.opensymphony.xwork2.config.entities.ActionConfig;
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,42,import com.opensymphony.xwork2.config.entities.PackageConfig;
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,43,import com.opensymphony.xwork2.config.entities.ResultConfig;
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,44,import com.opensymphony.xwork2.config.entities.ResultTypeConfig;
plugins/convention/src/main/java/org/apache/struts2/convention/ConventionUnknownHandler.java,231,addResultConfigs(results).build();
plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java,36,import java.util.Iterator;
plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java,296,for (Iterator i = config.getPackageConfigs().values().iterator(); i
plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java,297,.hasNext();) {
plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java,298,String ns = ((PackageConfig) i.next()).getNamespace();
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,24,import java.io.InputStreamReader;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,25,import java.io.PrintWriter;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,26,import java.nio.charset.Charset;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,28,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,29,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,145,reader = new InputStreamReader(servletContext.getResourceAsStream(finalLocation), charset);
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,147,else {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,148,reader = new InputStreamReader(servletContext.getResourceAsStream(finalLocation));
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,150,if (reader == null) {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,151,LOG.warn("resource at location ["+finalLocation+"] cannot be obtained (return null) from ServletContext !!! ");
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,153,else {
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,155,int charRead = 0;
core/src/main/java/org/apache/struts2/dispatcher/PlainTextResult.java,161,finally {
plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java,24,import net.sf.json.JSONArray;
plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java,25,import net.sf.json.JSONObject;
plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java,26,import net.sf.json.JsonConfig;
plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java,79,return "text/javascript";
apps/showcase/src/main/java/org/apache/struts2/showcase/person/EditPersonAction.java,27,import org.apache.struts2.config.Result;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/EditPersonAction.java,28,import org.apache.struts2.config.Results;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/EditPersonAction.java,29,import org.apache.struts2.dispatcher.ServletRedirectResult;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/ListPeopleAction.java,26,import org.apache.struts2.config.Result;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/ListPeopleAction.java,27,import org.apache.struts2.views.freemarker.FreemarkerResult;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/NewPersonAction.java,23,import org.apache.struts2.config.ParentPackage;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/NewPersonAction.java,24,import org.apache.struts2.config.Result;
apps/showcase/src/main/java/org/apache/struts2/showcase/person/NewPersonAction.java,25,import org.apache.struts2.config.Results;
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,28,import org.apache.struts2.dispatcher.mapper.ActionMapper;
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,29,import org.apache.struts2.dispatcher.mapper.ActionMapping;
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,31,import java.util.Arrays;
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,32,import java.util.List;
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,156,public void execute(ActionInvocation invocation) throws Exception {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,158,if (namespace == null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,163,if (method == null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,166,else {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,182,public void setActionName(String actionName) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,191,public void setNamespace(String namespace) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,200,public void setMethod(String method) {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,204,protected List<String> getProhibitedResultParams() {
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,205,return Arrays.asList(new String[]{
core/src/main/java/org/apache/struts2/dispatcher/ServletActionRedirectResult.java,206,DEFAULT_PARAM, "namespace", "method", "encode", "parse", "location",
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,24,import com.opensymphony.xwork2.ActionContext;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,25,import com.opensymphony.xwork2.ActionInvocation;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,26,import com.opensymphony.xwork2.config.entities.ResultConfig;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,27,import com.opensymphony.xwork2.inject.Inject;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,28,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,29,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,30,import com.opensymphony.xwork2.util.reflection.ReflectionException;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,31,import com.opensymphony.xwork2.util.reflection.ReflectionExceptionHandler;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,32,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,33,import org.apache.struts2.dispatcher.mapper.ActionMapper;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,34,import org.apache.struts2.dispatcher.mapper.ActionMapping;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,35,import org.apache.struts2.views.util.UrlHelper;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,37,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,38,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,46,import static javax.servlet.http.HttpServletResponse.SC_FOUND;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,107,protected boolean supressEmptyParameters = false;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,127,public void setActionMapper(ActionMapper mapper) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,131,public void setStatusCode(int code) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,139,public void setAnchor(String anchor) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,149,public void setPrependServletContext(boolean prependServletContext) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,153,public void execute(ActionInvocation invocation) throws Exception {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,154,if (anchor != null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,168,protected void doExecute(String finalLocation, ActionInvocation invocation) throws Exception {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,173,if (isPathUrl(finalLocation)) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,174,if (!finalLocation.startsWith("/")) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,175,ActionMapping mapping = actionMapper.getMapping(
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,176,request, Dispatcher.getInstance().getConfigurationManager());
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,178,if (mapping != null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,182,if ((namespace != null) && (namespace.length() > 0) && (!"/".equals(namespace))) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,190,if (prependServletContext && (request.getContextPath() != null) && (request.getContextPath().length() > 0)) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,195,if (resultConfig != null ) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,197,for (Iterator i = resultConfigParams.entrySet().iterator(); i.hasNext();) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,200,if (!getProhibitedResultParams().contains(e.getKey())) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,205,if (!supressEmptyParameters || ((potentialValue != null) && (potentialValue.length() > 0))) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,216,if (anchor != null) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,223,if (LOG.isDebugEnabled()) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,230,protected List<String> getProhibitedResultParams() {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,231,return Arrays.asList(new String[]{
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,232,DEFAULT_PARAM, "namespace", "method", "encode", "parse", "location",
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,245,protected void sendRedirect(HttpServletResponse response, String finalLocation) throws IOException {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,246,if (SC_FOUND == statusCode) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,257,private static boolean isPathUrl(String url) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,269,public void setSupressEmptyParameters(boolean supressEmptyParameters) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,270,this.supressEmptyParameters = supressEmptyParameters;
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,279,public ServletRedirectResult addParameter(String key, Object value) {
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,284,public void handle(ReflectionException ex) {
core/src/main/java/org/apache/struts2/components/Include.java,106,private static String encoding;
core/src/main/java/org/apache/struts2/components/Include.java,107,private static boolean encodingDefined = true;
core/src/main/java/org/apache/struts2/components/Include.java,166,include(result, writer, req, res);
core/src/main/java/org/apache/struts2/components/Include.java,243,public static void include(String aResult, Writer writer, ServletRequest request, HttpServletResponse response) throws ServletException, IOException {
core/src/main/java/org/apache/struts2/components/Include.java,244,String resourcePath = getContextRelativePath(request, aResult);
core/src/main/java/org/apache/struts2/components/Include.java,254,rd.include((HttpServletRequest) request, pageResponse);
core/src/main/java/org/apache/struts2/components/Include.java,257,String encoding = getEncoding();
core/src/main/java/org/apache/struts2/components/Include.java,264,pageResponse.getContent().writeTo(writer, null);
core/src/main/java/org/apache/struts2/components/Include.java,284,private static String getEncoding() {
core/src/main/java/org/apache/struts2/components/Include.java,285,if (encodingDefined) {
core/src/main/java/org/apache/struts2/components/Include.java,286,try {
core/src/main/java/org/apache/struts2/components/Include.java,287,encoding = defaultEncoding;
core/src/main/java/org/apache/struts2/components/Include.java,289,encoding = System.getProperty("file.encoding");
core/src/main/java/org/apache/struts2/components/Include.java,290,encodingDefined = false;
core/src/main/java/org/apache/struts2/components/Include.java,294,return encoding;
core/src/main/java/org/apache/struts2/components/template/JspTemplateEngine.java,59,pageContext.getRequest(), (HttpServletResponse) pageContext.getResponse());
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,36,import java.util.Calendar;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,37,import java.util.Collection;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,38,import java.util.Date;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,39,import java.util.Iterator;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,40,import java.util.Locale;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,41,import java.util.Map;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,42,import java.util.Stack;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,89,Collection<Pattern> includeProperties, boolean excludeNullProperties) throws JSONException {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,142,this.bool(((Boolean) object).booleanValue());
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,187,for (int i = 0; i < props.length; ++i) {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,188,PropertyDescriptor prop = props[i];
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,191,Method baseAccessor = null;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,192,if (clazz.getName().indexOf("$$EnhancerByCGLIB$$") > -1) {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,193,try {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,194,baseAccessor = Class.forName(
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,195,clazz.getName().substring(0, clazz.getName().indexOf("$$"))).getMethod(
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,196,accessor.getName(), accessor.getParameterTypes());
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,198,LOG.debug(ex.getMessage(), ex);
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,201,try {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,202,baseAccessor = Class.forName(
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,204,.getMethod(accessor.getName(), accessor.getParameterTypes());
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,206,LOG.debug(ex.getMessage(), ex);
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,209,baseAccessor = accessor;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,213,JSON json = baseAccessor.getAnnotation(JSON.class);
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,214,if (json != null) {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,216,continue;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,218,name = json.name();
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,222,if (this.shouldExcludeProperty(clazz, prop)) {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,234,Object value = accessor.invoke(object, new Object[0]);
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,271,private boolean shouldExcludeProperty(Class clazz, PropertyDescriptor prop) throws SecurityException,
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,276,|| name.equals("metaClass")) {
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,277,return true;
plugins/json/src/main/java/org/apache/struts2/json/JSONWriter.java,280,return false;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,24,import java.io.CharArrayWriter;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,25,import java.io.IOException;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,26,import java.io.Writer;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,27,import java.util.Locale;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,29,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,30,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,31,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,33,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,34,import org.apache.struts2.dispatcher.StrutsResultSupport;
core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerResult.java,35,import org.apache.struts2.views.util.ResourceUtil;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerPageFilter.java,24,import com.opensymphony.sitemesh.webapp.SiteMeshWebAppContext;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerPageFilter.java,25,import com.opensymphony.sitemesh.webapp.SiteMeshFilter;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerPageFilter.java,26,import com.opensymphony.sitemesh.DecoratorSelector;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerPageFilter.java,27,import com.opensymphony.module.sitemesh.Factory;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerPageFilter.java,31,import javax.servlet.*;
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerPageFilter.java,48,public void init(FilterConfig filterConfig) {
plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/FreemarkerPageFilter.java,49,this.filterConfig = filterConfig;
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,31,import java.util.*;
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,88,private static final Map<MessageFormatKey, MessageFormat> messageFormats = new HashMap<MessageFormatKey, MessageFormat>();
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,245,bundle = ResourceBundle.getBundle(
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,246,aBundleName,
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,247,locale,
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,248,Thread.currentThread().getContextClassLoader());
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,254,if ( delegatedClassLoader != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,257,bundle = ResourceBundle.getBundle(
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,258,aBundleName,
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,259,locale,
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,260,delegatedClassLoader);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,295,synchronized (bundlesMap) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,296,bundlesMap.remove(bundleName);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,308,private static String createMissesKey
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,309,(String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,310,aBundleName, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,311,locale) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,321,public static String findText
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,322,(Class
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,323,aClass, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,324,aTextName, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,325,locale) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,367,public static String findText
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,368,(Class
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,369,aClass, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,370,aTextName, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,371,locale, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,372,defaultMessage, Object[] args) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,420,public static String findText
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,421,(Class
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,422,aClass, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,423,aTextName, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,424,locale, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,425,defaultMessage, Object[] args, ValueStack
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,426,valueStack) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,541,catch (Exception e) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,578,private static boolean unableToFindTextForKey
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,579,(GetDefaultMessageReturnArg
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,580,result) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,603,public static String findText
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,604,(ResourceBundle
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,605,bundle, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,606,aTextName, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,607,locale) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,626,public static String findText
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,627,(ResourceBundle
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,628,bundle, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,629,aTextName, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,630,locale, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,631,defaultMessage, Object[] args) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,652,public static String findText
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,653,(ResourceBundle
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,654,bundle, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,655,aTextName, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,656,locale, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,657,defaultMessage, Object[] args, ValueStack
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,658,valueStack) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,680,private static GetDefaultMessageReturnArg getDefaultMessage
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,681,(String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,682,key, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,683,locale, ValueStack
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,684,valueStack, Object[] args, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,685,defaultMessage) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,712,private static String getMessage
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,713,(String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,714,bundleName, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,715,locale, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,716,key, ValueStack
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,717,valueStack, Object[] args) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,743,private static MessageFormat buildMessageFormat
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,744,(String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,745,pattern, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,746,locale) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,748,MessageFormat format = null;
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,749,synchronized (messageFormats) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,750,format = (MessageFormat) messageFormats.get(key);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,751,if (format == null) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,752,format = new MessageFormat(pattern);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,753,format.setLocale(locale);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,754,format.applyPattern(pattern);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,755,messageFormats.put(key, format);
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,766,private static String findMessage
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,767,(Class
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,768,clazz, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,769,key, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,770,indexedKey, Locale
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,771,locale, Object[] args, Set<String>
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,772,checked, ValueStack
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,773,valueStack) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,843,catch (Exception e) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,864,catch (Exception e) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,870,private static void clearMap
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,871,(Class
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,872,cl, Object
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,873,obj, String
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,875,throws NoSuchFieldException, IllegalAccessException, NoSuchMethodException,
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,876,InvocationTargetException {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,893,public static void reset
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,894,() {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,899,synchronized (messageFormats) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/LocalizedTextUtil.java,900,messageFormats.clear();
xwork-core/src/main/java/com/opensymphony/xwork2/ActionSupport.java,111,public String getText(String aTextName, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/ActionSupport.java,119,public String getText(String aTextName, String defaultValue, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/ActionSupport.java,127,public String getText(String key, String defaultValue, List<Object> args, ValueStack stack) {
xwork-core/src/main/java/com/opensymphony/xwork2/CompositeTextProvider.java,114,public String getText(String key, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/CompositeTextProvider.java,142,public String getText(String key, String defaultValue, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/CompositeTextProvider.java,191,public String getText(String key, String defaultValue, List<Object> args, ValueStack stack) {
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultTextProvider.java,59,public String getText(String key, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultTextProvider.java,81,public String getText(String key, String defaultValue, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultTextProvider.java,127,public String getText(String key, String defaultValue, List<Object> args, ValueStack stack) {
xwork-core/src/main/java/com/opensymphony/xwork2/TextProvider.java,101,String getText(String key, List<Object> args);
xwork-core/src/main/java/com/opensymphony/xwork2/TextProvider.java,123,String getText(String key, String defaultValue, List<Object> args);
xwork-core/src/main/java/com/opensymphony/xwork2/TextProvider.java,149,String getText(String key, String defaultValue, List<Object> args, ValueStack stack);
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderSupport.java,166,public String getText(String key, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderSupport.java,199,public String getText(String key, String defaultValue, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/TextProviderSupport.java,241,public String getText(String key, String defaultValue, List<Object> args, ValueStack stack) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DelegatingValidatorContext.java,121,public String getText(String aTextName, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DelegatingValidatorContext.java,129,public String getText(String aTextName, String defaultValue, List<Object> args) {
xwork-core/src/main/java/com/opensymphony/xwork2/validator/DelegatingValidatorContext.java,141,public String getText(String key, String defaultValue, List<Object> args, ValueStack stack) {
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java,30,import org.apache.commons.lang.StringUtils;
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java,77,this.actionName = actionName;
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java,78,this.namespace = namespace;
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java,79,this.executeResult = executeResult;
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionProxy.java,80,this.method = methodName;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,24,import java.util.Map;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,26,import org.apache.struts2.util.TokenHelper;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,27,import org.apache.struts2.ServletActionContext;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,29,import com.opensymphony.xwork2.ActionContext;
core/src/main/java/org/apache/struts2/interceptor/TokenInterceptor.java,144,return handleValidToken(invocation);
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,24,import java.io.OutputStreamWriter;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,25,import java.io.Writer;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,27,import javax.portlet.ActionResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,28,import javax.servlet.Servlet;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,29,import javax.servlet.ServletContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,30,import javax.servlet.http.HttpServletRequest;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,31,import javax.servlet.http.HttpServletResponse;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,32,import javax.servlet.jsp.JspFactory;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,33,import javax.servlet.jsp.PageContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,46,import com.opensymphony.xwork2.ActionContext;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,47,import com.opensymphony.xwork2.ActionInvocation;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,48,import com.opensymphony.xwork2.inject.Inject;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,49,import com.opensymphony.xwork2.util.ValueStack;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,50,import com.opensymphony.xwork2.util.logging.Logger;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,51,import com.opensymphony.xwork2.util.logging.LoggerFactory;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,167,JspFactory jspFactory = null;
plugins/portlet/src/main/java/org/apache/struts2/portlet/result/PortletVelocityResult.java,179,jspFactory = JspFactory.getDefaultFactory();
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,24,import java.io.OutputStreamWriter;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,25,import java.io.Writer;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,27,import javax.servlet.Servlet;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,28,import javax.servlet.ServletContext;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,29,import javax.servlet.http.HttpServletRequest;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,30,import javax.servlet.http.HttpServletResponse;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,31,import javax.servlet.jsp.JspFactory;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,32,import javax.servlet.jsp.PageContext;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,42,import com.opensymphony.xwork2.ActionContext;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,43,import com.opensymphony.xwork2.ActionInvocation;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,44,import com.opensymphony.xwork2.inject.Inject;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,45,import com.opensymphony.xwork2.util.ValueStack;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,46,import com.opensymphony.xwork2.util.logging.Logger;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,47,import com.opensymphony.xwork2.util.logging.LoggerFactory;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,127,JspFactory jspFactory = null;
core/src/main/java/org/apache/struts2/dispatcher/VelocityResult.java,137,jspFactory = JspFactory.getDefaultFactory();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,230,rootObject = invocation.getAction();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,314,String result = invocation.invoke();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,317,fileParameterNames = multiWrapper.getFileParameterNames();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,318,while (fileParameterNames != null && fileParameterNames.hasMoreElements()) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,319,String inputValue = (String) fileParameterNames.nextElement();
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,320,File[] files = multiWrapper.getFiles(inputValue);
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,322,for (File currentFile : files) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,323,if (LOG.isInfoEnabled()) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,324,LOG.info(getTextMessage(action, "struts.messages.removing.file", new Object[]{inputValue, currentFile}, ac.getLocale()));
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,327,if ((currentFile != null) && currentFile.isFile()) {
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,329,LOG.warn("Resource Leaking:  Could not remove uploaded file '" + currentFile.getCanonicalPath() + "'.");
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,335,return result;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,91,Object rootObject;
plugins/json/src/main/java/org/apache/struts2/json/JSONInterceptor.java,100,rootObject = invocation.getAction();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,108,protected Collection<String> includes;
core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaMultiPartRequest.java,195,fileList.add(((DiskFileItem) fileItem).getStoreLocation());
core/src/main/java/org/apache/struts2/interceptor/FileUploadInterceptor.java,328,if (currentFile.delete() == false) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/URLUtil.java,102,return JBOSS5_VFSZIP.equals(protocol) || JBOSS5_VFSMEMORY.equals(fileUrl.getProtocol());
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/PrepareInterceptor.java,102,private static final Logger LOG = LoggerFactory.getLogger(PrepareInterceptor.class);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/PrepareInterceptor.java,149,LOG.warn("an exception occured while trying to execute prefixed method", e);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/PrepareInterceptor.java,151,catch (IllegalAccessException e) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/PrepareInterceptor.java,154,LOG.warn("an exception occured while trying to execute prefixed method", e);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/PrepareInterceptor.java,158,LOG.warn("an exception occured while trying to execute prefixed method", e);
core/src/main/java/org/apache/struts2/components/DoubleSelect.java,64,onchangeParam.append(getParameters().get("id")).append("Redirect(this.options.selectedIndex)");
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,174,String line = null;
plugins/json/src/main/java/org/apache/struts2/json/JSONUtil.java,237,in = new ByteArrayInputStream(json.getBytes());
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,201,requestParameters.put(e.getKey().toString(),
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,202,e.getValue() == null ? "" :
core/src/main/java/org/apache/struts2/dispatcher/ServletRedirectResult.java,203,conditionalParse(e.getValue().toString(), invocation));
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,23,import java.io.IOException;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,24,import java.lang.annotation.Annotation;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,25,import java.lang.reflect.Method;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,26,import java.util.ArrayList;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,27,import java.util.HashMap;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,28,import java.util.List;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,29,import java.util.regex.Pattern;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,31,import javax.servlet.http.HttpServletRequest;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,32,import javax.servlet.http.HttpServletResponse;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,34,import org.apache.struts2.StrutsConstants;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,35,import org.apache.struts2.StrutsStatics;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,36,import org.apache.struts2.json.annotations.SMD;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,37,import org.apache.struts2.json.annotations.SMDMethod;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,38,import org.apache.struts2.json.annotations.SMDMethodParameter;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,137,this.includeProperties = new ArrayList<Pattern>(includePatterns.size());
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,139,HashMap existingPatterns = new HashMap();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,141,for (String pattern : includePatterns) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,144,String[] patternPieces = pattern.split("\\\\\\.");
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,146,String patternExpr = "";
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,147,for (String patternPiece : patternPieces) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,148,if (patternExpr.length() > 0) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,149,patternExpr += "\\.";
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,151,patternExpr += patternPiece;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,154,if (!existingPatterns.containsKey(patternExpr)) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,155,existingPatterns.put(patternExpr, patternExpr);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,159,if (patternPiece.endsWith("\\]")) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,160,this.includeProperties.add(Pattern.compile(patternExpr.substring(0, patternPiece
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,161,.lastIndexOf("\\["))));
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,164,LOG.debug("Adding include property expression:  "
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,165,+ patternExpr.substring(0, patternPiece.lastIndexOf("\\[")));
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,168,this.includeProperties.add(Pattern.compile(patternExpr));
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,171,LOG.debug("Adding include property expression:  " + patternExpr);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,184,String json;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,186,if (this.enableSMD) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,188,rootObject = this.writeSMD(invocation);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,191,if (this.root != null) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,192,ValueStack stack = invocation.getStack();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,193,rootObject = stack.findValue(this.root);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,195,rootObject = invocation.getAction();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,198,json = JSONUtil.serialize(rootObject, excludeProperties, includeProperties, ignoreHierarchy,
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,199,enumAsBean, excludeNullProperties);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,200,json = addCallbackIfApplicable(request, json);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,202,boolean writeGzip = enableGZIP && JSONUtil.isGzipInRequest(request);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,204,writeToResponse(response, json, writeGzip);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,213,throws IOException {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,214,JSONUtil.writeJSONToResponse(new SerializationParams(response, getEncoding(), isWrapWithComments(),
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,215,json, false, gzip, noCache, statusCode, errorCode, prefix, contentType, wrapPrefix,
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,216,wrapSuffix));
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,220,protected org.apache.struts2.json.smd.SMD writeSMD(ActionInvocation invocation) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,221,ActionContext actionContext = invocation.getInvocationContext();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,222,HttpServletRequest request = (HttpServletRequest) actionContext.get(StrutsStatics.HTTP_REQUEST);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,225,Object rootObject = null;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,228,rootObject = stack.findValue(this.root);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,233,Class clazz = rootObject.getClass();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,234,org.apache.struts2.json.smd.SMD smd = new org.apache.struts2.json.smd.SMD();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,236,smd.setServiceUrl(request.getRequestURI());
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,239,SMD smdAnnotation = (SMD) clazz.getAnnotation(SMD.class);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,240,if (smdAnnotation != null) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,241,smd.setObjectName(smdAnnotation.objectName());
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,242,smd.setServiceType(smdAnnotation.serviceType());
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,243,smd.setVersion(smdAnnotation.version());
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,247,Method[] methods = JSONUtil.listSMDMethods(clazz, ignoreInterfaces);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,249,for (Method method : methods) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,250,SMDMethod smdMethodAnnotation = method.getAnnotation(SMDMethod.class);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,253,if (((smdMethodAnnotation != null) && !this.shouldExcludeProperty(method.getName()))) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,255,: smdMethodAnnotation.name();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,257,org.apache.struts2.json.smd.SMDMethod smdMethod = new org.apache.struts2.json.smd.SMDMethod(
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,258,methodName);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,259,smd.addSMDMethod(smdMethod);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,262,int parametersCount = method.getParameterTypes().length;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,263,if (parametersCount > 0) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,264,Annotation[][] parameterAnnotations = method.getParameterAnnotations();
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,266,for (int i = 0; i < parametersCount; i++) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,268,SMDMethodParameter smdMethodParameterAnnotation = this
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,269,.getSMDMethodParameterAnnotation(parameterAnnotations[i]);
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,271,String paramName = smdMethodParameterAnnotation != null ? smdMethodParameterAnnotation
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,273,: "p" + i;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,277,smdMethod.addSMDMethodParameter(new org.apache.struts2.json.smd.SMDMethodParameter(
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,278,paramName));
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,284,LOG.debug("Ignoring property " + method.getName());
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,287,return smd;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,293,private org.apache.struts2.json.annotations.SMDMethodParameter getSMDMethodParameterAnnotation(
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,294,Annotation[] annotations) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,295,for (Annotation annotation : annotations) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,297,return (org.apache.struts2.json.annotations.SMDMethodParameter) annotation;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,300,return null;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,303,private boolean shouldExcludeProperty(String expr) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,304,if (this.excludeProperties != null) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,305,for (Pattern pattern : this.excludeProperties) {
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,307,return true;
plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java,310,return false;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,29,import java.util.ArrayList;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,30,import java.util.Collection;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,31,import java.util.Collections;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,32,import java.util.Iterator;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,33,import java.util.List;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,34,import java.util.Map;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,122,if (root.size() > 1 && isChainResult(invocation)) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,123,List<CompoundRoot> list = new ArrayList<CompoundRoot>(root);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,124,list.remove(0);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,125,Collections.reverse(list);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,127,Map<String, Object> ctxMap = invocation.getInvocationContext().getContextMap();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,128,Iterator<CompoundRoot> iterator = list.iterator();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,129,int index = 1; // starts with 1, 0 has been removed
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,130,while (iterator.hasNext()) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,131,index = index + 1;
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,132,Object o = iterator.next();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,133,if (o != null) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,134,if (!(o instanceof Unchainable)) {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,135,reflectionProvider.copy(o, invocation.getAction(), ctxMap, excludes, includes);
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,138,LOG.warn("compound root element at index " + index + " is null");
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,142,return invocation.invoke();
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,145,private boolean isChainResult(ActionInvocation invocation) throws Exception {
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,147,return result != null && ActionChainResult.class.isAssignableFrom(result.getClass());
xwork-core/src/main/java/com/opensymphony/xwork2/interceptor/ChainingInterceptor.java,183,this.includes = includes;
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,37,put("text", new FactoryList(TextFieldHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,38,put("textfield", new FactoryList(TextFieldHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,39,put("select", new FactoryList(SelectHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,40,put("form", new FactoryList(FormHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,42,put("a", new FactoryList(AnchorHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,44,put("checkbox", new FactoryList(CheckboxHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,45,put("file", new FactoryList(FileHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,46,put("password", new FactoryList(PasswordHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,47,put("label", new FactoryList(LabelHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,48,put("reset", new FactoryList(ResetHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,49,put("submit", new FactoryList(SubmitHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,51,put("textarea", new FactoryList(TextAreaHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
plugins/javatemplates/src/main/java/org/apache/struts2/views/java/simple/SimpleTheme.java,58,put("div", new FactoryList(DivHandler.class, ScriptingEventsHandler.class, CommonAttributesHandler.class));
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/InterceptorBuilder.java,184,if (result != null && result.contains(mapping)) {
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/InterceptorBuilder.java,188,int index = result.indexOf(mapping);
xwork-core/src/main/java/com/opensymphony/xwork2/config/providers/InterceptorBuilder.java,189,result.set(index, mapping);
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,85,public void setServeStaticContent(String val) {
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,86,serveStatic = "true".equals(val);
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,97,public void setServeStaticBrowserCache(String val) {
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,98,serveStaticBrowserCache = "true".equals(val);
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,106,public void setEncoding(String val) {
core/src/main/java/org/apache/struts2/dispatcher/DefaultStaticContentLoader.java,107,encoding = val;
plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java,255,mapping.setParams(new HashMap());
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,205,after(invocation, result);
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,266,protected void after(ActionInvocation invocation, String result) throws Exception {
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,268,String reqOperationMode = getRequestOperationMode(invocation);
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,269,boolean isRedirect = invocation.getResult() instanceof ServletRedirectResult;
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,270,if (STORE_MODE.equalsIgnoreCase(reqOperationMode) ||
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,271,STORE_MODE.equalsIgnoreCase(operationMode) ||
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,272,(AUTOMATIC_MODE.equalsIgnoreCase(operationMode) && isRedirect)) {
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,274,Object action = invocation.getAction();
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,281,ValidationAware validationAwareAction = (ValidationAware) action;
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,282,session.put(actionErrorsSessionKey, validationAwareAction.getActionErrors());
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,283,session.put(actionMessagesSessionKey, validationAwareAction.getActionMessages());
core/src/main/java/org/apache/struts2/interceptor/MessageStoreInterceptor.java,284,session.put(fieldErrorsSessionKey, validationAwareAction.getFieldErrors());
xwork-core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java,367,result = createResult();
xwork-core/src/main/java/com/opensymphony/xwork2/util/CompoundRoot.java,28,public class CompoundRoot extends ArrayList {
xwork-core/src/main/java/com/opensymphony/xwork2/util/CompoundRoot.java,33,public CompoundRoot(List list) {
xwork-core/src/main/java/com/opensymphony/xwork2/spring/SpringObjectFactory.java,170,bean = autoWiringFactory.applyBeanPostProcessorsBeforeInitialization(bean, bean.getClass().getName());
xwork-core/src/main/java/com/opensymphony/xwork2/spring/SpringObjectFactory.java,172,bean = autoWiringFactory.applyBeanPostProcessorsAfterInitialization(bean, bean.getClass().getName());
xwork-core/src/main/java/com/opensymphony/xwork2/validator/AnnotationActionValidatorManager.java,27,import com.opensymphony.xwork2.validator.validators.VisitorFieldValidator;
core/src/main/java/org/apache/struts2/StrutsConstants.java,48,public static final String STRUTS_ACTION_EXCLUDE_PATTERN = "struts.action.excludePattern";
core/src/main/java/org/apache/struts2/StrutsConstants.java,62,public static final String STRUTS_URL_RENDERER = "struts.urlRenderer";
core/src/main/java/org/apache/struts2/StrutsConstants.java,188,public static final String STRUTS_ID_PARAMETER_NAME = "struts.mapper.idParameterName";
core/src/main/java/org/apache/struts2/StrutsConstants.java,191,public static final String STRUTS_ALLOW_STATIC_METHOD_ACCESS = "struts.ognl.allowStaticMethodAccess";
core/src/main/java/org/apache/struts2/components/Include.java,112,private static String defaultEncoding;
core/src/main/java/org/apache/struts2/util/FastByteArrayOutputStream.java,176,if (result.isOverflow() && !result.isError() && !result.isMalformed()) {
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,16,package com.opensymphony.xwork2.util;
xwork-core/src/main/java/com/opensymphony/xwork2/util/XWorkList.java,21,import com.opensymphony.xwork2.conversion.impl.XWorkConverter;
