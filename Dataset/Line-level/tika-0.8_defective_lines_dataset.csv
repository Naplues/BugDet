File,Line_number,SRC
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,90,PDF2XHTML.process(pdfDocument, handler, metadata);
tika-core/src/main/java/org/apache/tika/metadata/Metadata.java,47,createDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", "UTF");
tika-core/src/main/java/org/apache/tika/metadata/Metadata.java,63,createDateFormat("yyyy-MM-dd' 'HH:mm:ss'Z'", "UTF"), // UTC/Zulu
tika-parsers/src/main/java/org/apache/tika/parser/video/FLVParser.java,107,input.skip(2); // time zone
tika-parsers/src/main/java/org/apache/tika/parser/video/FLVParser.java,208,stream.skip(4); // timestamp
tika-parsers/src/main/java/org/apache/tika/parser/video/FLVParser.java,209,stream.skip(3); // streamid
tika-parsers/src/main/java/org/apache/tika/parser/video/FLVParser.java,245,for (int skiplen = 0; skiplen < datalen;) {
tika-parsers/src/main/java/org/apache/tika/parser/video/FLVParser.java,246,long currentSkipLen = datainput.skip(datalen - skiplen);
tika-parsers/src/main/java/org/apache/tika/parser/video/FLVParser.java,247,skiplen += currentSkipLen;
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,76,if(skipToPropertyInfoSection(stream, header)){
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,81,skipToPropertyInfoSection(stream, header);
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,82,get2007and2010Props(stream,metadata,xhtml);
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,19,import java.io.IOException;
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,26,import org.xml.sax.helpers.DefaultHandler;
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,32,public class WriteOutContentHandler extends DefaultHandler {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,37,private final Writer writer;
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,50,private WriteOutContentHandler(Writer writer, int writeLimit) {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,51,this.writer = writer;
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,113,try {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,114,if (writeLimit == -1 || writeCount + length <= writeLimit) {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,115,writer.write(ch, start, length);
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,116,writeCount += length;
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,118,writer.write(ch, start, writeLimit - writeCount);
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,119,writeCount = writeLimit;
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,123,throw new SAXException("Error writing out character content", e);
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,133,throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,134,characters(ch, start, length);
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,145,public void endDocument() throws SAXException {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,146,try {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,147,writer.flush();
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,149,throw new SAXException("Error flushing character output", e);
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,161,public String toString() {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,162,return writer.toString();
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,176,return this == ((WriteLimitReachedException) t).getSource();
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,185,private class WriteLimitReachedException extends SAXException {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,187,public WriteOutContentHandler getSource() {
tika-core/src/main/java/org/apache/tika/sax/WriteOutContentHandler.java,188,return WriteOutContentHandler.this;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,184,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,185,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,186,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,187,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,188,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x00,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,189,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,190,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,191,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,192,(byte) 0x20, (byte) 0x61, (byte) 0x62, (byte) 0x63, (byte) 0x64, (byte) 0x65, (byte) 0x66, (byte) 0x67,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,193,(byte) 0x68, (byte) 0x69, (byte) 0x6A, (byte) 0x6B, (byte) 0x6C, (byte) 0x6D, (byte) 0x6E, (byte) 0x6F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,194,(byte) 0x70, (byte) 0x71, (byte) 0x72, (byte) 0x73, (byte) 0x74, (byte) 0x75, (byte) 0x76, (byte) 0x77,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,195,(byte) 0x78, (byte) 0x79, (byte) 0x7A, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,196,(byte) 0x20, (byte) 0x61, (byte) 0x62, (byte) 0x63, (byte) 0x64, (byte) 0x65, (byte) 0x66, (byte) 0x67,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,197,(byte) 0x68, (byte) 0x69, (byte) 0x6A, (byte) 0x6B, (byte) 0x6C, (byte) 0x6D, (byte) 0x6E, (byte) 0x6F,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,198,(byte) 0x70, (byte) 0x71, (byte) 0x72, (byte) 0x73, (byte) 0x74, (byte) 0x75, (byte) 0x76, (byte) 0x77,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,199,(byte) 0x78, (byte) 0x79, (byte) 0x7A, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,200,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,201,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,202,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,203,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,204,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,205,(byte) 0x20, (byte) 0x20, (byte) 0xAA, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,206,(byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0xB5, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,207,(byte) 0x20, (byte) 0x20, (byte) 0xBA, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,208,(byte) 0xE0, (byte) 0xE1, (byte) 0xE2, (byte) 0xE3, (byte) 0xE4, (byte) 0xE5, (byte) 0xE6, (byte) 0xE7,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,209,(byte) 0xE8, (byte) 0xE9, (byte) 0xEA, (byte) 0xEB, (byte) 0xEC, (byte) 0xED, (byte) 0xEE, (byte) 0xEF,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,210,(byte) 0xF0, (byte) 0xF1, (byte) 0xF2, (byte) 0xF3, (byte) 0xF4, (byte) 0xF5, (byte) 0xF6, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,211,(byte) 0xF8, (byte) 0xF9, (byte) 0xFA, (byte) 0xFB, (byte) 0xFC, (byte) 0xFD, (byte) 0xFE, (byte) 0xDF,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,212,(byte) 0xE0, (byte) 0xE1, (byte) 0xE2, (byte) 0xE3, (byte) 0xE4, (byte) 0xE5, (byte) 0xE6, (byte) 0xE7,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,213,(byte) 0xE8, (byte) 0xE9, (byte) 0xEA, (byte) 0xEB, (byte) 0xEC, (byte) 0xED, (byte) 0xEE, (byte) 0xEF,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,214,(byte) 0xF0, (byte) 0xF1, (byte) 0xF2, (byte) 0xF3, (byte) 0xF4, (byte) 0xF5, (byte) 0xF6, (byte) 0x20,
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,215,(byte) 0xF8, (byte) 0xF9, (byte) 0xFA, (byte) 0xFB, (byte) 0xFC, (byte) 0xFD, (byte) 0xFE, (byte) 0xFF,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,59,if(stream instanceof TikaInputStream &&
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,60,((TikaInputStream)stream).getOpenContainer() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,61,poiExtractor = ExtractorFactory.createExtractor(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,63,);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,65,poiExtractor = (POIXMLTextExtractor) ExtractorFactory.createExtractor(stream);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,74,PDDocument pdfDocument = PDDocument.load(stream, true);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,247,out.println("    -?  or --help        Print this usage message");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,248,out.println("    -v  or --verbose     Print debug level messages");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,249,out.println("    -g  or --gui         Start the Apache Tika GUI");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,251,out.println("    -x  or --xml         Output XHTML content (default)");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,252,out.println("    -h  or --html        Output HTML content");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,253,out.println("    -t  or --text        Output plain text content");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,254,out.println("    -T  or --text-main   Output plain text content (main content only)");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,255,out.println("    -m  or --metadata    Output only metadata");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,256,out.println("    -l  or --language    Output only language");
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,257,out.println("    -eX or --encoding=X  Use output encoding X");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,135,List<String> tags = new ArrayList<String>();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,141,tags.add("a");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,144,if(run.isBold()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,145,xhtml.startElement("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,146,tags.add("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,148,if(run.isItalic()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,149,xhtml.startElement("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,150,tags.add("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,155,for(int i=tags.size()-1; i>=0; i--) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,156,xhtml.endElement(tags.get(i));
tika-core/src/main/java/org/apache/tika/utils/CharsetUtils.java,106,Charset cs = Charset.forName(result);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,66,throw new TikaException("Error parsing an RTF document", e);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,86,private static class CustomStyledDocument extends DefaultStyledDocument {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,88,public CustomStyledDocument() {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,89,super(new NoReclaimStyleContext());
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,97,super.insertString(offs, " ", a);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,98,super.insertString(getLength(), str, a);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,100,super.insertString(offs, str, a);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,113,private static class NoReclaimStyleContext extends StyleContext {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,116,public void reclaim(AttributeSet a) {
tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java,44,private static final char[] REPLACEMENT = new char[] { ' ' };
tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java,97,for (int i = start; i < end; i++) {
tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java,98,if (isInvalid(ch[i])) {
tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java,108,start = i + 1;
tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java,126,protected boolean isInvalid(char ch) {
tika-core/src/main/java/org/apache/tika/sax/SafeContentHandler.java,131,return ch >= 0xFFFE;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,36,import com.drew.imaging.jpeg.JpegMetadataReader;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,149,metadata.add(parents, map.item(0).getNodeValue());
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,151,StringBuffer value = new StringBuffer();
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,157,value.append(attr.getNodeName()).append("=").append(attr.getNodeValue());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,26,import org.apache.poi.openxml4j.opc.PackagePartName;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,28,import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,89,xhtml.endDocument();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,92,List<PackagePart> mainParts = getMainDocumentParts();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,93,for(PackagePart part : mainParts) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,94,PackageRelationshipCollection rels;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,95,try {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,96,rels = part.getRelationships();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,98,throw new TikaException("Corrupt OOXML file", e);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,101,for(PackageRelationship rel : rels) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,103,if( rel.getRelationshipType().equals(RELATION_AUDIO) ||
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,104,rel.getRelationshipType().equals(RELATION_IMAGE) ||
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,105,rel.getRelationshipType().equals(RELATION_OLE_OBJECT) ||
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,106,rel.getRelationshipType().equals(RELATION_PACKAGE) ) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,107,if(rel.getTargetMode() == TargetMode.INTERNAL) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,108,PackagePartName relName;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,109,try {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,110,relName = PackagingURIHelper.createPartName(rel.getTargetURI());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,112,throw new TikaException("Broken OOXML file", e);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,114,PackagePart relPart = rel.getPackage().getPart(relName);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,115,handleEmbedded(rel, relPart, handler, context);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,125,protected void handleEmbedded(PackageRelationship rel, PackagePart part,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,127,throws SAXException, XmlException, IOException, TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,129,String name = rel.getTargetURI().toString();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,130,if(name.indexOf('/') > -1) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,131,name = name.substring(name.lastIndexOf('/')+1);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,135,String type = part.getContentType();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,138,Metadata metadata = new Metadata();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,139,metadata.set(Metadata.RESOURCE_NAME_KEY, name);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,140,metadata.set(Metadata.CONTENT_TYPE, type);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,297,if(picture == null) {
tika-parsers/src/main/java/org/apache/tika/parser/font/TrueTypeParser.java,58,TikaInputStream tis = TikaInputStream.get(stream);
tika-parsers/src/main/java/org/apache/tika/parser/font/TrueTypeParser.java,60,if (tis.hasFile()) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,199,null, length);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,406,if (in == null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,407,throw new IOException("Stream has already been read");
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,418,in.close();
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,420,in = new BufferedInputStream(new FileInputStream(file));
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,448,public int available() throws IOException {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,450,return 0;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,452,return super.available();
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,459,return 0;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,461,long n = super.skip(ln);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,462,position += n;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,463,return n;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,468,public int read() throws IOException {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,470,return -1;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,472,return super.read();
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,477,public int read(byte[] bts, int off, int len) throws IOException {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,479,return -1;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,481,return super.read(bts, off, len);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,486,public int read(byte[] bts) throws IOException {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,487,return read(bts, 0, bts.length);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,514,if (in != null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,515,in.close();
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,516,in = null;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,527,protected void beforeRead(int n) throws IOException {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,528,if (in == null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,538,protected void afterRead(int n) throws IOException {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,542,close();
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,37,import org.apache.tika.parser.Parser;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,196,List<String> tags = new ArrayList<String>();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,198,if(cr.isBold()) tags.add("b");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,199,if(cr.isItalic()) tags.add("i");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,200,if(cr.isStrikeThrough()) tags.add("s");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,201,for(String tag : tags) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,202,xhtml.startElement(tag);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,216,for(int tn=tags.size()-1; tn>=0; tn--) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,217,xhtml.endElement(tags.get(tn));
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,439,handler.getTransformer().setOutputProperty(OutputKeys.INDENT, "yes");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,393,addCell(record, new LinkedCell(cell, link.getAddress()));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java,151,Metadata entrydata = new Metadata();
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java,153,if (name != null && name.length() > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java,154,entrydata.set(Metadata.RESOURCE_NAME_KEY, name);
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java,157,if (extractor.shouldParseEmbedded(entrydata)) {
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java,158,extractor.parseEmbedded(archive, xhtml, entrydata, true);
tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java,145,throw new SecureSAXException();
tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java,170,public SecureSAXException() {
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,19,import java.io.BufferedInputStream;
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,28,import org.apache.tika.io.CountingInputStream;
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,120,if(stream instanceof TikaInputStream || stream instanceof BufferedInputStream) {
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,124,stream = new BufferedInputStream(stream);
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,128,MediaType type = detector.detect(stream, metadata);
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,129,metadata.set(Metadata.CONTENT_TYPE, type.toString());
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,132,CountingInputStream count = new CountingInputStream(stream);
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,133,SecureContentHandler secure = new SecureContentHandler(handler, count);
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,137,super.parse(count, secure, metadata, context);
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,140,secure.throwIfCauseOf(e);
tika-core/src/main/java/org/apache/tika/parser/AutoDetectParser.java,141,throw e;
tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java,20,import org.apache.tika.io.CountingInputStream;
tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java,41,private final CountingInputStream stream;
tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java,69,ContentHandler handler, CountingInputStream stream) {
tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java,144,&& characterCount > stream.getByteCount() * ratio) {
tika-core/src/main/java/org/apache/tika/sax/SecureContentHandler.java,172,+ stream.getByteCount() + " input bytes produced "
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,59,public class TikaInputStream extends ProxyInputStream {
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,30,import org.apache.tika.io.TaggedInputStream;
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,195,TaggedContentHandler taggedHandler = new TaggedContentHandler(handler);
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,197,parser.parse(taggedStream, taggedHandler, metadata, context);
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,199,throw new TikaException(
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,202,taggedStream.throwIfCauseOf(e);
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,203,throw new TikaException(
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,206,taggedHandler.throwIfCauseOf(e);
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,207,throw new TikaException(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,317,xhtml.startElement("img", "src", "embedded:" + filename);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,50,InputStream stream, ContentHandler handler,
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,104,InputStream stream, ContentHandler handler,
tika-parsers/src/main/java/org/apache/tika/parser/mbox/MboxParser.java,240,private Date parseDate(String headerContent) throws ParseException {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,75,metadata.set(Metadata.EDIT_TIME, msg.getMessageDate().getTime().toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,76,metadata.set(Metadata.LAST_SAVED, msg.getMessageDate().getTime().toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,85,metadata.set(Metadata.EDIT_TIME, date);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,86,metadata.set(Metadata.LAST_SAVED, date);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java,139,metadata.set(property, value.toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java,143,private void set(String name, Date value) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java,144,if (value != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/SummaryExtractor.java,145,metadata.set(name, value.toString());
tika-core/src/main/java/org/apache/tika/metadata/MSOffice.java,34,String LAST_PRINTED = "Last-Printed";
tika-core/src/main/java/org/apache/tika/metadata/MSOffice.java,36,String LAST_SAVED = "Last-Save-Date";
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java,82,.getLastPrintedPropertyString());
tika-parsers/src/main/java/org/apache/tika/parser/mbox/MboxParser.java,221,metadata.set(Metadata.DATE, parseDate(headerContent));
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,28,import org.apache.commons.compress.archivers.ArchiveEntry;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,29,import org.apache.commons.compress.archivers.ArchiveInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,35,import org.apache.tika.parser.EmptyParser;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,37,import org.apache.tika.parser.Parser;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,47,private final static Set<MediaType> supportedTypes =
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,48,Collections.singleton(MediaType.application("vnd.apple.iwork"));
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,50,private final static Set<String> relevantFileNames = Collections.unmodifiableSet(
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,60,ArchiveInputStream zip = new ZipArchiveInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,61,ArchiveEntry entry = zip.getNextEntry();
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,62,Parser parser = context.get(Parser.class, EmptyParser.INSTANCE);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,64,if (!relevantFileNames.contains(entry.getName())) {
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,65,entry = zip.getNextEntry();
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,69,parser.parse(new CloseShieldInputStream(zip), handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,70,entry = zip.getNextEntry();
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,17,package org.apache.tika.parser.iwork;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,19,import org.apache.tika.exception.TikaException;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,20,import org.apache.tika.io.CloseShieldInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,21,import org.apache.tika.metadata.Metadata;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,22,import org.apache.tika.mime.MediaType;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,23,import org.apache.tika.parser.ParseContext;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,24,import org.apache.tika.parser.Parser;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,25,import org.apache.tika.sax.OfflineContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,26,import org.apache.tika.sax.XHTMLContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,27,import org.xml.sax.ContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,28,import org.xml.sax.SAXException;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,30,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,31,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,32,import java.util.Arrays;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,33,import java.util.Collections;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,34,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,35,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,49,private final static Set<MediaType> supportedTypes =
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,50,Collections.unmodifiableSet(new HashSet<MediaType>(Arrays.asList(
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,51,MediaType.application("vnd.apple.keynote"),
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,52,MediaType.application("vnd.apple.pages"),
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,54,)));
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,56,public Set<MediaType> getSupportedTypes(ParseContext context) {
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,57,return supportedTypes;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,60,public void parse(
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,61,InputStream stream, ContentHandler handler,
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,63,throws IOException, SAXException, TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,64,ContentHandler contentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,65,String contentType = metadata.get(Metadata.CONTENT_TYPE);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,66,XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,67,if ("application/vnd.apple.keynote".equals(contentType)) {
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,68,contentHandler = new KeynoteContentHandler(xhtml, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,70,contentHandler = new PagesContentHandler(xhtml, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,72,contentHandler = new NumbersContentHandler(xhtml, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,74,return;
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,77,xhtml.startDocument();
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,78,context.getSAXParser().parse(
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,79,new CloseShieldInputStream(stream),
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,81,);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkParser.java,82,xhtml.endDocument();
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,91,throw new TikaException(type + " parse error", e);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,301,if (modelClass.getSimpleName().contains("Tika")) {
tika-core/src/main/java/org/apache/tika/io/TaggedInputStream.java,66,public TaggedInputStream(InputStream proxy) {
tika-core/src/main/java/org/apache/tika/parser/CompositeParser.java,194,TaggedInputStream taggedStream = new TaggedInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/detect/POIFSContainerDetector.java,19,import java.io.FileInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,379,tag = "h"+num;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,70,extractHeaders(xhtml, hfPolicy);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,76,extractFooters(xhtml, hfPolicy);
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,49,MediaType.image("bmp"),
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,74,if (version.equals("AC1018")) {
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,98,int stringLen = LittleEndian.readUShort(stream);
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,100,byte[] stringData = new byte[stringLen];
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,101,IOUtils.readFully(stream, stringData);
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,104,if (stringData[stringLen-1] == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,105,stringLen--;
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,107,String headerValue =
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,108,StringUtil.getFromCompressedUnicode(stringData, 0, stringLen);
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,121,int stringLen = LittleEndian.readUShort(stream);
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,123,byte[] stringData = new byte[stringLen * 2];
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,124,IOUtils.readFully(stream, stringData);
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,125,String headerValue = StringUtil.getFromUnicodeLE(stringData);
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,139,if(value.charAt(value.length()-1) == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/dwg/DWGParser.java,140,value = value.substring(0, value.length()-1);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,31,import org.apache.poi.xssf.extractor.XSSFExcelExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,32,import org.apache.poi.xssf.usermodel.XSSFWorkbook;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,69,if (document instanceof XSLFSlideShow) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,73,extractor = new XSSFExcelExtractorDecorator(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,82,extractor.getMetadataExtractor().extract(metadata);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,21,import java.util.Iterator;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,32,import org.apache.poi.ss.usermodel.Cell;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,33,import org.apache.poi.ss.usermodel.CellStyle;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,34,import org.apache.poi.ss.usermodel.Comment;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,37,import org.apache.poi.ss.usermodel.Row;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,38,import org.apache.poi.xssf.extractor.XSSFExcelExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,39,import org.apache.poi.xssf.usermodel.XSSFCell;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,41,import org.apache.poi.xssf.usermodel.XSSFSheet;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,42,import org.apache.poi.xssf.usermodel.XSSFWorkbook;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,57,private final XSSFExcelExtractor extractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,65,formatter = new DataFormatter(locale);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,74,XSSFWorkbook document = (XSSFWorkbook) extractor.getDocument();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,76,for (int i = 0; i < document.getNumberOfSheets(); i++) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,77,xhtml.startElement("div");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,78,XSSFSheet sheet = (XSSFSheet) document.getSheetAt(i);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,79,xhtml.element("h1", document.getSheetName(i));
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,82,extractHeaderFooter(sheet.getFirstHeader(), xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,83,extractHeaderFooter(sheet.getOddHeader(), xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,84,extractHeaderFooter(sheet.getEvenHeader(), xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,86,xhtml.startElement("table");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,87,xhtml.startElement("tbody");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,90,for (Object rawR : sheet) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,91,xhtml.startElement("tr");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,92,Row row = (Row) rawR;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,93,for (Iterator<Cell> ri = row.cellIterator(); ri.hasNext();) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,94,xhtml.startElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,95,Cell cell = ri.next();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,97,int type = cell.getCellType();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,98,if (type == Cell.CELL_TYPE_FORMULA) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,99,type = cell.getCachedFormulaResultType();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,101,if (type == Cell.CELL_TYPE_STRING) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,103,.getString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,105,CellStyle style = cell.getCellStyle();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,106,xhtml.characters(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,107,formatter.formatRawCellContents(cell.getNumericCellValue(),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,108,style.getDataFormat(),
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,109,style.getDataFormatString()));
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,111,XSSFCell xc = (XSSFCell) cell;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,112,String rawValue = xc.getRawValue();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,113,if (rawValue != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,114,xhtml.characters(rawValue);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,120,Comment comment = cell.getCellComment();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,121,if (comment != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,122,xhtml.characters(comment.getString().getString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,125,xhtml.endElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,127,xhtml.endElement("tr");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,130,xhtml.endElement("tbody");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,131,xhtml.endElement("table");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,134,extractHeaderFooter(sheet.getFirstFooter(), xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,135,extractHeaderFooter(sheet.getOddFooter(), xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,136,extractHeaderFooter(sheet.getEvenFooter(), xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,138,xhtml.endElement("div");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,144,String content = ExcelExtractor._extractHeaderFooter(hf);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,157,XSSFWorkbook document = (XSSFWorkbook) extractor.getDocument();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,158,for(XSSFSheet sheet : document) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,159,PackagePart part = sheet.getPackagePart();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,195,XSSFWorkbook document = (XSSFWorkbook) extractor.getDocument();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,197,for (int i = 0; i < document.getNumberOfSheets(); i++) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,198,XSSFSheet sheet = document.getSheetAt(i);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,200,if (sheet.getProtect()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,201,metadata.set(TikaMetadataKeys.PROTECTED, "true");
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,24,import java.nio.charset.IllegalCharsetNameException;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,194,parser.setProperty(org.ccil.cowan.tagsoup.Parser.schemaProperty, HTML_SCHEMA);
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,24,import java.io.InputStream;
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,36,import org.apache.tika.metadata.MetadataHelper;
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,80,List<File> files = null;
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,82,files = (List<File>) transferable.getTransferData(
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,83,DataFlavor.javaFileListFlavor);
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,87,InputStream stream = MetadataHelper.getInputStream(
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,88,new URL(data.toString()), metadata);
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,91,files = uriToFileList(
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,92,transferable.getTransferData(uriListFlavor).toString());
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,95,for (File file : files) {
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,96,Metadata metadata = new Metadata();
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,97,InputStream stream = MetadataHelper.getInputStream(
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,98,file.toURI().toURL(), metadata);
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,99,tika.importStream(stream, metadata);
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,124,private static List<File> uriToFileList(String data) {
tika-app/src/main/java/org/apache/tika/gui/ParsingTransferHandler.java,126,StringTokenizer st = new StringTokenizer(data, "\r\n");
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,20,import java.io.BufferedInputStream;
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,22,import java.io.FileInputStream;
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,33,import org.apache.tika.sax.BodyContentHandler;
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,34,import org.xml.sax.ContentHandler;
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,35,import org.xml.sax.SAXException;
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,109,try {
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,110,Parser parser = config.getParser(MediaType.parse(mimeType));
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,111,ContentHandler handler = new BodyContentHandler();
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,112,parser.parse(stream, handler, new Metadata());
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,113,return handler.toString();
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,115,throw new TikaException("Unexpected SAX error", e);
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,130,.getName();
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,131,return getStringContent(documentUrl, config, mime);
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,147,InputStream stream = documentUrl.openStream();
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,148,try {
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,149,return getStringContent(stream, config, mimeType);
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,151,stream.close();
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,168,InputStream stream = new BufferedInputStream(new FileInputStream(
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,169,documentFile));
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,170,try {
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,171,return getStringContent(stream, config, mimeType);
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,173,stream.close();
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,187,String mime =
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,188,config.getMimeRepository().getMimeType(documentFile).getName();
tika-core/src/main/java/org/apache/tika/utils/ParseUtils.java,189,return getStringContent(documentFile, config, mime);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,69,setSortByPosition(true);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/LyricsHandler.java,90,while(pos < lyrics.length()-9) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/LyricsHandler.java,97,lyricsText = lyrics.substring(pos+9, pos+9+tagLen);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/LyricsHandler.java,100,pos += tagLen;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,120,return new DefaultHandler() {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,121,public void endDocument() {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,122,String[] names = metadata.names();
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,123,Arrays.sort(names);
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,124,for (String name : names) {
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,125,writer.println(name + ": " + metadata.get(name));
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,127,writer.flush();
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,135,xhtml.startElement(uri, local, "base", atts);
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,181,if (bodyLevel == 0 && discardLevel == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,182,if ("LINK".equals(name)) {
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,183,xhtml.endElement("link");
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,185,xhtml.endElement("base");
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,19,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,20,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,21,import java.util.Collections;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,22,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,24,import javax.swing.text.AttributeSet;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,25,import javax.swing.text.BadLocationException;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,26,import javax.swing.text.DefaultStyledDocument;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,27,import javax.swing.text.Document;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,28,import javax.swing.text.StyleContext;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,29,import javax.swing.text.rtf.RTFEditorKit;
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,45,private static final Set<MediaType> SUPPORTED_TYPES =
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,46,Collections.singleton(MediaType.application("rtf"));
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,52,public void parse(
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,53,InputStream stream, ContentHandler handler,
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,55,throws IOException, SAXException, TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,58,new RTFEditorKit().read(stream, sd, 0);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,60,XHTMLContentHandler xhtml =
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,61,new XHTMLContentHandler(handler, metadata);
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,73,public void parse(
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,75,throws IOException, SAXException, TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,93,public void insertString(
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,95,throws BadLocationException {
tika-parsers/src/main/java/org/apache/tika/parser/rtf/RTFParser.java,96,if (offs > 0 && offs == getLength()) {
tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java,67,new OfflineContentHandler(
tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java,68,getContentHandler(handler, metadata)));
tika-core/src/main/java/org/apache/tika/sax/xpath/MatchingContentHandler.java,75,matcher = matchers.removeFirst();
tika-parsers/src/main/java/org/apache/tika/parser/audio/AudioParser.java,111,for (Entry<String, Object> entry : fileFormat.properties().entrySet()) {
tika-parsers/src/main/java/org/apache/tika/parser/audio/AudioParser.java,112,metadata.set(entry.getKey(), entry.getValue().toString());
tika-parsers/src/main/java/org/apache/tika/parser/audio/AudioParser.java,114,for (Entry<String, Object> entry : audioFormat.properties().entrySet()) {
tika-parsers/src/main/java/org/apache/tika/parser/audio/AudioParser.java,115,metadata.set(entry.getKey(), entry.getValue().toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,150,if (value.length() > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,77,try {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,78,Entry ooxml = dir.getEntry("Package");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,81,TikaInputStream ooxmlStream = TikaInputStream.get(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,83,);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,84,ZipContainerDetector detector = new ZipContainerDetector();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,85,MediaType type = detector.detect(ooxmlStream, new Metadata());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,86,handleEmbeddedResource(ooxmlStream, null, type.toString(), xhtml, true);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,87,return;
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,74,TikaInputStream stream, final ContainerExtractor recurseExtractor,
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,78,context.set(Parser.class, new Parser() {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,79,public Set<MediaType> getSupportedTypes(ParseContext context) {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,80,return parser.getSupportedTypes(context);
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,82,public void parse(InputStream stream, ContentHandler ignored,
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,84,throws IOException, SAXException, TikaException {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,87,MediaType type;
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,88,if(metadata.get(Metadata.CONTENT_TYPE) != null) {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,89,type = MediaType.parse( metadata.get(Metadata.CONTENT_TYPE) );
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,91,if(! stream.markSupported()) {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,92,stream = TikaInputStream.get(stream);
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,94,type = detector.detect(stream, metadata);
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,98,handler.handle(filename, type, stream);
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,101,if(recurseExtractor != null) {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,102,if(recurseExtractor == ParserContainerExtractor.this) {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,103,parser.parse(stream, new DefaultHandler(), metadata, context);
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,105,recurseExtractor.extract(
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,106,TikaInputStream.get(stream), recurseExtractor, handler
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,107,);
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,111,public void parse(InputStream stream, ContentHandler handler,
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,112,Metadata metadata) throws IOException, SAXException,
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,113,TikaException {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,114,parse(stream, handler, metadata, new ParseContext());
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,117,try {
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,118,parser.parse(stream, new DefaultHandler(), new Metadata(), context);
tika-core/src/main/java/org/apache/tika/extractor/ParserContainerExtractor.java,120,throw new TikaException("Unexpected SAX exception", e);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,77,&& !pdfDocument.getCurrentAccessPermission().canExtractContent()) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,82,public static TikaInputStream get(InputStream stream) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,86,return new TikaInputStream(
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,87,new BufferedInputStream(stream), null, -1);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,115,new ByteArrayInputStream(data), null, data.length);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,143,return new TikaInputStream(
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,144,new BufferedInputStream(new FileInputStream(file)),
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,145,file, file.length());
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,295,null, length);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,311,private boolean temporary;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,343,private TikaInputStream(InputStream stream, File file, long length) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,344,super(stream);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,345,this.file = file;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,346,this.temporary = (file == null);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,411,file = File.createTempFile("apache-tika-", ".tmp");
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,449,if (in == null && file == null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,458,if (in == null && file == null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,469,if (in == null && file == null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,478,if (in == null && file == null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,498,return true;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,511,if (openContainer != null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,512,openContainer = null;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,518,if (file != null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,519,if (temporary) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,520,file.delete();
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,522,file = null;
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,529,if (file != null) {
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,530,in = new FileInputStream(file);
tika-core/src/main/java/org/apache/tika/io/TikaInputStream.java,532,throw new IOException("End of the stream reached");
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,53,new PDF2XHTML(handler, metadata).getText(document);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java,52,extractMetadata(extractor.getCoreProperties(), metadata);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/MetadataExtractor.java,53,extractMetadata(extractor.getExtendedProperties(), metadata);
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,19,import java.util.Map;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,20,import java.util.Collections;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,23,import org.xml.sax.SAXException;
tika-core/src/main/java/org/apache/tika/sax/ElementMappingContentHandler.java,24,import org.xml.sax.ContentHandler;
tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java,55,unmodifiableSet("title", "link", "base", "meta");
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,103,int hash = name.indexOf('#');
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,104,if (hash != -1) {
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,105,name = name.substring(0, hash);
tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java,95,if (XHTML.equals(uri)) {
tika-core/src/main/java/org/apache/tika/sax/LinkContentHandler.java,96,if ("a".equals(local) || "img".equals(local)) {
tika-core/src/main/java/org/apache/tika/config/TikaConfig.java,75,this(getBuilder().parse(file));
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,145,metadata.add(name, value);
tika-core/src/main/java/org/apache/tika/sax/xpath/NodeMatcher.java,33,public boolean matchesAttribute(String namespace, String name) {
tika-core/src/main/java/org/apache/tika/sax/xpath/NodeMatcher.java,34,return true;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,37,private final Map<String, String> prefixes = new HashMap<String, String>();
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,39,public XPathParser() {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,42,public XPathParser(String prefix, String namespace) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,43,addPrefix(prefix, namespace);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,46,public void addPrefix(String prefix, String namespace) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,47,prefixes.put(prefix, namespace);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,58,public Matcher parse(String xpath) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,59,if (xpath.equals("/text()")) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,60,return TextMatcher.INSTANCE;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,62,return NodeMatcher.INSTANCE;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,64,return new CompositeMatcher(
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,65,TextMatcher.INSTANCE,
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,66,new ChildMatcher(new SubtreeMatcher(NodeMatcher.INSTANCE)));
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,68,return AttributeMatcher.INSTANCE;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,70,return ElementMatcher.INSTANCE;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,72,String name = xpath.substring(2);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,73,String prefix = null;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,74,int colon = name.indexOf(':');
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,75,if (colon != -1) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,76,prefix = name.substring(0, colon);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,77,name = name.substring(colon + 1);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,79,if (prefixes.containsKey(prefix)) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,80,return new NamedAttributeMatcher(prefixes.get(prefix), name);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,82,return Matcher.FAIL;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,85,return new ChildMatcher(parse(xpath.substring(2)));
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,87,return Matcher.FAIL;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,89,return new SubtreeMatcher(parse(xpath.substring(1)));
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,91,int slash = xpath.indexOf('/', 1);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,92,if (slash == -1) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,93,slash = xpath.length();
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,95,String name = xpath.substring(1, slash);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,96,String prefix = null;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,97,int colon = name.indexOf(':');
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,98,if (colon != -1) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,99,prefix = name.substring(0, colon);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,100,name = name.substring(colon + 1);
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,102,if (prefixes.containsKey(prefix)) {
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,103,return new NamedElementMatcher(
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,104,prefixes.get(prefix), name,
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,105,parse(xpath.substring(slash)));
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,107,return Matcher.FAIL;
tika-core/src/main/java/org/apache/tika/sax/xpath/XPathParser.java,110,return Matcher.FAIL;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,85,if (e.getMessage().startsWith("No supported documents found")) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,19,import static org.apache.tika.sax.XHTMLContentHandler.XHTML;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,29,import javax.xml.XMLConstants;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,30,import javax.xml.namespace.QName;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,31,import javax.xml.parsers.ParserConfigurationException;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,32,import javax.xml.parsers.SAXParser;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,33,import javax.xml.parsers.SAXParserFactory;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,76,protected static final char[] TAB = new char[] { '\t' };
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,84,new HashMap<QName, TargetElement>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,126,final HashMap<QName,QName> aAttsMapping =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,127,new HashMap<QName,QName>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,147,final HashMap<QName,QName> tableCellAttsMapping =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,148,new HashMap<QName,QName>();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentMetaParser.java,57,matcher);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,44,Collections.unmodifiableSet(new HashSet<MediaType>(Arrays.asList(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,45,MediaType.application("vnd.sun.xml.writer"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,46,MediaType.application("vnd.oasis.opendocument.text"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,47,MediaType.application("vnd.oasis.opendocument.graphics"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,48,MediaType.application("vnd.oasis.opendocument.presentation"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,49,MediaType.application("vnd.oasis.opendocument.spreadsheet"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,50,MediaType.application("vnd.oasis.opendocument.chart"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,51,MediaType.application("vnd.oasis.opendocument.image"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,52,MediaType.application("vnd.oasis.opendocument.formula"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,53,MediaType.application("vnd.oasis.opendocument.text-master"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,54,MediaType.application("vnd.oasis.opendocument.text-web"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,55,MediaType.application("vnd.oasis.opendocument.text-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,56,MediaType.application("vnd.oasis.opendocument.graphics-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,57,MediaType.application("vnd.oasis.opendocument.presentation-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,58,MediaType.application("vnd.oasis.opendocument.spreadsheet-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,59,MediaType.application("vnd.oasis.opendocument.chart-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,60,MediaType.application("vnd.oasis.opendocument.image-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,61,MediaType.application("vnd.oasis.opendocument.formula-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,62,MediaType.application("x-vnd.oasis.opendocument.text"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,63,MediaType.application("x-vnd.oasis.opendocument.graphics"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,64,MediaType.application("x-vnd.oasis.opendocument.presentation"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,65,MediaType.application("x-vnd.oasis.opendocument.spreadsheet"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,66,MediaType.application("x-vnd.oasis.opendocument.chart"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,67,MediaType.application("x-vnd.oasis.opendocument.image"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,68,MediaType.application("x-vnd.oasis.opendocument.formula"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,69,MediaType.application("x-vnd.oasis.opendocument.text-master"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,70,MediaType.application("x-vnd.oasis.opendocument.text-web"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,71,MediaType.application("x-vnd.oasis.opendocument.text-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,72,MediaType.application("x-vnd.oasis.opendocument.graphics-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,73,MediaType.application("x-vnd.oasis.opendocument.presentation-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,74,MediaType.application("x-vnd.oasis.opendocument.spreadsheet-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,75,MediaType.application("x-vnd.oasis.opendocument.chart-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,76,MediaType.application("x-vnd.oasis.opendocument.image-template"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,77,MediaType.application("x-vnd.oasis.opendocument.formula-template"))));
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,57,MediaType.application("xhtml+xml"),
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,58,MediaType.application("vnd.wap.xhtml+xml"),
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,59,MediaType.application("x-asp"))));
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlParser.java,252,return DefaultHtmlMapper.INSTANCE.mapSafeAttribute(elementName,attributeName) ;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,263,String url = text.substring(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,264,text.indexOf('"') + 1,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,266,);
tika-parsers/src/main/java/org/apache/tika/parser/iwork/IWorkPackageParser.java,72,zip.close();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,95,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,96,new QName(TEXT_NS, "list"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,97,new TargetElement(XHTML, "ul"));
tika-core/src/main/java/org/apache/tika/detect/XmlRootExtractor.java,46,factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,78,try {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,83,pdfDocument.decrypt(password);
tika-core/src/main/java/org/apache/tika/detect/NameDetector.java,122,name = URLDecoder.decode(name, "UTF-8");
tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java,47,private static final String PROFILE_ENCODING = "UTF-8";
tika-core/src/main/java/org/apache/tika/language/LanguageIdentifier.java,78,new BufferedReader(new InputStreamReader(stream, PROFILE_ENCODING));
tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubParser.java,77,String type = IOUtils.toString(zip, "UTF-8");
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,306,size = Math.min(size, frameData.length-copyFrom);
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,19,import java.net.MalformedURLException;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,20,import java.net.URL;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,21,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,22,import java.util.Locale;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,23,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,24,import java.util.regex.Matcher;
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,25,import java.util.regex.Pattern;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDFParser.java,123,Calendar modified = info.getModificationDate();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,197,for(XWPFTableCell cell : row.getTableCells()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,198,xhtml.startElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,199,extractIBodyText(cell, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,200,xhtml.endElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,107,ZipInputStream zip = new ZipInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,108,ZipEntry entry = zip.getNextEntry();
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,109,while (entry != null) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,110,if (entry.getName().equals("mimetype")) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,111,String type = IOUtils.toString(zip, "UTF-8");
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,112,metadata.set(Metadata.CONTENT_TYPE, type);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,114,meta.parse(zip, new DefaultHandler(), metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,118,entry = zip.getNextEntry();
tika-parsers/src/main/java/org/apache/tika/parser/html/HtmlHandler.java,203,if (titleLevel == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java,70,xhtml.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java,71,xhtml.endDocument();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,217,return rootMimeType;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,221,MimeType result = null;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,223,if (magic.eval(data)) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,224,result = magic.getType();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,229,if (result != null) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,233,|| "text/html".equals(result.getName())) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,234,XmlRootExtractor extractor = new XmlRootExtractor();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,236,QName rootElement = extractor.extractRootElement(data);
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,237,if (rootElement != null) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,238,for (MimeType type : xmls) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,239,if (type.matchesXML(
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,240,rootElement.getNamespaceURI(),
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,241,rootElement.getLocalPart())) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,242,result = type;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,243,break;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,249,result = textMimeType;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,529,MediaType type = MediaType.OCTET_STREAM;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,536,type = getMimeType(prefix).getType();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,562,MediaType hint = getMimeType(name).getType();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,563,if (registry.isSpecializationOf(hint, type)) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,564,type = hint;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,573,MediaType hint = forName(typeName).getType();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,574,if (registry.isSpecializationOf(hint, type)) {
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,575,type = hint;
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,582,return type;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,224,private int handleSpecialCharacterRuns(Paragraph p, int index, boolean skipStyling,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,420,private PicturesTable picturesTable;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,69,addTextIfAny(xhtml, "header", wordExtractor.getHeaderText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,81,i += handleParagraph(p, 0, r, document, pictures, pictureTable, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,97,addTextIfAny(xhtml, "footer", wordExtractor.getFooterText());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,121,private int handleParagraph(Paragraph p, int parentTableLevel, Range r, HWPFDocument document,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,139,handleParagraph(cellP, p.getTableLevel(), cell, document, pictures, pictureTable, xhtml);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,262,if(text.startsWith("HYPERLINK") && text.indexOf('"') > -1) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,134,for(XWPFRun run : paragraph.getRuns()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,136,if(run instanceof XWPFHyperlinkRun) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,137,XWPFHyperlinkRun linkRun = (XWPFHyperlinkRun)run;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,138,XWPFHyperlink link = linkRun.getHyperlink(document);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,139,if(link != null && link.getURL() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,140,xhtml.startElement("a", "href", link.getURL());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,153,xhtml.characters(run.toString());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,160,for(XWPFPicture picture : run.getEmbeddedPictures()) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,161,if(paragraph.getDocument() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,162,XWPFPictureData data = picture.getPictureData();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,163,if(data != null) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,165,xhtml.endElement("img");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,187,public MetadataExtractor getMetadataExtractor() {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,190,public void extract(Metadata metadata) throws TikaException {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,191,super.extract(metadata);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XSSFExcelExtractorDecorator.java,193,metadata.set(TikaMetadataKeys.PROTECTED, "false");
tika-parsers/src/main/java/org/apache/tika/parser/xml/XMLParser.java,85,return new TextContentHandler(handler);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/AudioFrame.java,125,int chans = h4 & 0x03;
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,23,import org.apache.pdfbox.util.PDFTextStripper;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,565,stream, null, mimeType,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/OutlookExtractor.java,129,filename,
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/WordExtractor.java,324,handleEmbeddedResource(stream, filename, mimeType, xhtml, false);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,116,TagAndStyle tas = WordExtractor.buildParagraphTagAndStyle(
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,117,style.getName(), paragraph.getPartType() == BodyType.TABLECELL
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,118,);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,119,tag = tas.getTag();
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/XWPFWordExtractorDecorator.java,120,styleClass = tas.getStyleClass();
tika-parsers/src/main/java/org/apache/tika/parser/html/IdentityHtmlMapper.java,40,return name;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,20,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,21,import java.text.DecimalFormat;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,22,import java.text.DecimalFormatSymbols;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,26,import java.util.Locale;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,31,import org.apache.tika.metadata.Geographic;
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageMetadataExtractor.java,39,import com.drew.imaging.tiff.TiffProcessingException;
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,137,if (type.hasParameters()) {
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,118,MediaType x = getSupertype(a);
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,119,return x != null && (x.equals(b) || isSpecializationOf(x, b));
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,490,return 8 * 1024;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,152,private Metadata metadata;
tika-app/src/main/java/org/apache/tika/cli/TikaCLI.java,216,metadata = new Metadata();
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,72,reader.setInput(ImageIO.createImageInputStream(
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,73,new CloseShieldInputStream(stream)));
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,75,metadata.set(Metadata.IMAGE_WIDTH, Integer.toString(reader.getWidth(0)));
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,76,metadata.set(Metadata.IMAGE_LENGTH, Integer.toString(reader.getHeight(0)));
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,77,metadata.set("height", Integer.toString(reader.getHeight(0)));
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,78,metadata.set("width", Integer.toString(reader.getWidth(0)));
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,80,loadMetadata(reader.getImageMetadata(0), metadata);
tika-parsers/src/main/java/org/apache/tika/parser/image/ImageParser.java,82,reader.dispose();
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,24,import org.apache.tika.config.TikaConfig;
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,38,return TikaConfig.getDefaultConfig().getMediaTypeRegistry();
tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java,287,characters(characters.toCharArray(), 0, characters.length());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/CompositeTagHandler.java,85,public String getComment() {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/CompositeTagHandler.java,87,if (tag.getComment() != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/CompositeTagHandler.java,88,return tag.getComment();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/CompositeTagHandler.java,91,return null;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3Tags.java,179,String getComment();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v1Handler.java,38,private String comment;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v1Handler.java,63,comment = getString(tagData, 97, 127);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v1Handler.java,99,public String getComment() {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v1Handler.java,100,return comment;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v22Handler.java,38,private String comment;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v22Handler.java,104,public String getComment() {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v22Handler.java,105,return comment;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v23Handler.java,38,private String comment;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v23Handler.java,104,public String getComment() {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v23Handler.java,105,return comment;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v24Handler.java,39,private String comment;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v24Handler.java,111,public String getComment() {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v24Handler.java,112,return comment;
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,76,metadata.set(XMPDM.LOG_COMMENT, tag.getComment());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,89,xhtml.element("p", tag.getComment());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v22Handler.java,58,comment = getTagString(tag.data, 0, tag.data.length);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v23Handler.java,58,comment = getTagString(tag.data, 0, tag.data.length);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v24Handler.java,63,comment = getTagString(tag.data, 0, tag.data.length);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,196,if (maybeEncodingFlag == 0 || maybeEncodingFlag == 1 ||
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,197,maybeEncodingFlag == 2 || maybeEncodingFlag == 3) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,200,if (maybeEncodingFlag == 1) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,202,encoding = "UTF-16";
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,205,encoding = "UTF-16BE";
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,207,encoding = "UTF8";
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,212,return new String(data, offset, actualLength, encoding);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,194,String encoding = "ISO-8859-1";
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,185,while (actualLength > 0 && data[actualLength-1] == 0) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/ID3v2Frame.java,186,actualLength--;
tika-core/src/main/java/org/apache/tika/io/TaggedInputStream.java,80,return this == tagged.getTag();
tika-core/src/main/java/org/apache/tika/io/TaggedInputStream.java,99,if (this == tagged.getTag()) {
tika-core/src/main/java/org/apache/tika/io/TaggedInputStream.java,113,throw new TaggedIOException(e, this);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,362,addCell(record, new NumberCell(formula.getValue(), format));
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/AbstractOOXMLExtractor.java,29,import org.apache.poi.openxml4j.opc.PackagingURIHelper;
tika-app/src/main/java/org/apache/tika/gui/TikaGUI.java,372,String suffix = embeddedName.substring(embeddedName.lastIndexOf('.'));
tika-parsers/src/main/java/org/apache/tika/parser/pkg/PackageExtractor.java,146,throws IOException, SAXException {
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,94,handler.startElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/pdf/PDF2XHTML.java,103,handler.endElement("p");
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,97,private static final int kBufSize = 8000;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1221,byte shapedLamAlef[] = {(byte)0xb2,(byte)0xb3,(byte)0xb4,(byte)0xb5,(byte)0xb7,(byte)0xb8 };
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1224,return true;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1225,return false;
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,177,final XHTMLContentHandler xhtml =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,178,new XHTMLContentHandler(handler,metadata);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,179,DefaultHandler dh = new ElementMappingContentHandler(xhtml, MAPPINGS) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,234,if (TEXT_NS.equals(namespaceURI)) {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,268,xhtml.startElement(headingStack.push(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,269,getXHTMLHeaderTagName(atts)));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,286,xhtml.endElement(headingStack.pop());
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentParser.java,116,content.parse(zip, handler, metadata, context);
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,59,public static final String TABLE_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,62,public static final String OFFICE_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,65,public static final String SVG_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,68,public static final String PRESENTATION_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,71,public static final String DRAW_NS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,74,public static final String XLINK_NS = "http://www.w3.org/1999/xlink";
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,83,private static final HashMap<QName, TargetElement> MAPPINGS =
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,86,static {
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,88,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,89,new QName(TEXT_NS, "p"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,90,new TargetElement(XHTML, "p"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,92,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,93,new QName(TEXT_NS, "line-break"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,94,new TargetElement(XHTML, "br"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,98,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,99,new QName(TEXT_NS, "list-item"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,100,new TargetElement(XHTML, "li"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,101,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,102,new QName(TEXT_NS, "note"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,104,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,105,new QName(OFFICE_NS, "annotation"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,107,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,108,new QName(PRESENTATION_NS, "notes"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,110,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,111,new QName(DRAW_NS, "object"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,112,new TargetElement(XHTML, "object"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,113,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,114,new QName(DRAW_NS, "text-box"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,115,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,116,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,117,new QName(SVG_NS, "title"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,118,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,119,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,120,new QName(SVG_NS, "desc"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,121,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,122,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,123,new QName(TEXT_NS, "span"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,124,new TargetElement(XHTML, "span"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,128,aAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,129,new QName(XLINK_NS, "href"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,130,new QName("href"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,131,aAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,132,new QName(XLINK_NS, "title"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,133,new QName("title"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,134,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,135,new QName(TEXT_NS, "a"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,136,new TargetElement(XHTML, "a", aAttsMapping));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,139,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,140,new QName(TABLE_NS, "table"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,141,new TargetElement(XHTML, "table"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,143,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,144,new QName(TABLE_NS, "table-row"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,145,new TargetElement(XHTML, "tr"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,149,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,150,new QName(TABLE_NS, "number-columns-spanned"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,151,new QName("colspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,152,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,153,new QName(TABLE_NS, "number-rows-spanned"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,154,new QName("rowspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,161,tableCellAttsMapping.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,162,new QName(TABLE_NS, "number-columns-repeated"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,163,new QName("colspan"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,164,MAPPINGS.put(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,165,new QName(TABLE_NS, "table-cell"),
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,166,new TargetElement(XHTML, "td", tableCellAttsMapping));
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,96,while ((bytesRead = reader.read(buffer, 0, Math.min(max, 1024))) >= 0) {
tika-core/src/main/java/org/apache/tika/parser/ParsingReader.java,268,if (throwable instanceof IOException) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,61,xhtml.startDocument();
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,67,CompositeTagHandler tag = new CompositeTagHandler(audioAndTags.tags);
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,71,metadata.set(XMPDM.ARTIST, tag.getArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,72,metadata.set(XMPDM.COMPOSER, tag.getComposer());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,73,metadata.set(XMPDM.ALBUM, tag.getAlbum());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,74,metadata.set(XMPDM.RELEASE_DATE, tag.getYear());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,75,metadata.set(XMPDM.GENRE, tag.getGenre());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,78,xhtml.element("h1", tag.getTitle());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,79,xhtml.element("p", tag.getArtist());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,92,if (audioAndTags.audio != null) {
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,93,metadata.set("samplerate", String.valueOf(audioAndTags.audio.getSampleRate()));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,94,metadata.set("channels", String.valueOf(audioAndTags.audio.getChannels()));
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,95,metadata.set("version", audioAndTags.audio.getVersion());
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,96,metadata.set(
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,97,XMPDM.AUDIO_SAMPLE_RATE,
tika-parsers/src/main/java/org/apache/tika/parser/mp3/Mp3Parser.java,98,Integer.toString(audioAndTags.audio.getSampleRate()));
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,47,new HashMap<MediaType, MediaType>();
tika-core/src/main/java/org/apache/tika/mime/MediaTypeRegistry.java,75,SortedSet<MediaType> aliases = new TreeSet<MediaType>();
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,135,private final Map<MediaType, MimeType> types =
tika-core/src/main/java/org/apache/tika/mime/MimeTypes.java,136,new HashMap<MediaType, MimeType>();
tika-core/src/main/java/org/apache/tika/sax/XHTMLContentHandler.java,130,super.startElement(XHTML, "html", "html", EMPTY_ATTRIBUTES);
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,497,while (currentRow < entry.getKey().y) {
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,498,handler.endElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,499,handler.endElement("tr");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,500,handler.startElement("tr");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,501,handler.startElement("td");
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,502,currentRow++;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,90,fRawLength = in.length;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,124,int remainingLength = kBufSize;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,128,if (bytesRead <= 0) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,132,remainingLength -= bytesRead;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,134,fInputStream.reset();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,120,fRawInput = new byte[kBufSize];   // Always make a new buffer because the
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,123,fRawLength = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,131,fRawLength += bytesRead;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,136,MungeInput();                     // Strip html markup, collect byte stats.
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,137,return this;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,53,Locale locale = context.get(Locale.class, Locale.getDefault());
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ooxml/OOXMLExtractorFactory.java,76,extractor = new XWPFWordExtractorDecorator(
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,103,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,106,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/odf/OpenDocumentContentParser.java,109,new TargetElement(XHTML, "div"));
tika-parsers/src/main/java/org/apache/tika/parser/feed/FeedParser.java,117,StringBuffer buf = new StringBuffer();
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,19,import java.io.BufferedInputStream;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,20,import java.io.IOException;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,21,import java.io.InputStream;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,22,import java.util.Arrays;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,23,import java.util.Collections;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,24,import java.util.HashSet;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,25,import java.util.Set;
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,65,InputStream buffered = new BufferedInputStream(stream);
tika-parsers/src/main/java/org/apache/tika/parser/audio/MidiParser.java,67,Sequence sequence = MidiSystem.getSequence(buffered);
tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java,36,import org.apache.tika.sax.XHTMLContentHandler;
tika-parsers/src/main/java/org/apache/tika/parser/epub/EpubContentParser.java,56,final XHTMLContentHandler xhtml =
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,32,import org.apache.tika.extractor.EmbeddedDocumentExtractor;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/AbstractPOIFSExtractor.java,43,private final EmbeddedDocumentExtractor extractor;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,12,import java.nio.charset.Charset;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,75,setCanonicalDeclaredEncoding(encoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,92,MungeInput();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,190,CharsetRecognizer csr;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,194,ArrayList<CharsetMatch> matches = new ArrayList<CharsetMatch>();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,199,csr = fCSRecognizers.get(i);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,200,detectResults = csr.match(this);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,201,confidence = detectResults & 0x000000ff;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,202,if (confidence > 0) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,204,confidence = Math.min(confidence, MAX_CONFIDENCE);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,207,if ((fDeclaredEncoding != null) && (fDeclaredEncoding.equalsIgnoreCase(csr.getName()))) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,213,matches.add(m);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,248,setCanonicalDeclaredEncoding(declaredEncoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,282,setCanonicalDeclaredEncoding(declaredEncoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,351,private void setCanonicalDeclaredEncoding(String encoding) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,352,Charset cs = Charset.forName(encoding);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,353,if (cs != null) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetDetector.java,354,fDeclaredEncoding = cs.name();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,90,StringBuffer sb = new StringBuffer();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,173,public int getMatchType() {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,175,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,194,return fRecognizer.getName();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetMatch.java,205,return fRecognizer.getLanguage();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,121,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,135,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_2022.java,161,return match(det.fInputBytes, det.fInputLen, escapeSequences);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,23,int match(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,53,if (numInvalid > 5) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,54,break;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,56,trailBytes = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_UTF8.java,96,return confidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,26,abstract int match(CharsetDetector det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,40,return 100;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,44,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,70,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,90,return 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_Unicode.java,122,return confidence;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,8,package org.apache.tika.parser.txt;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,10,import java.nio.ByteBuffer;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,28,abstract int match(CharsetDetector det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,35,private int byteIndex = 0;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,39,private byte[] byteMap;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,44,private byte spaceChar;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,131,this.spaceChar = spaceCh;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,183,protected static byte[] byteMap = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,226,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,235,return "da";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,240,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,246,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,255,return "de";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,260,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,266,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,275,return "en";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,280,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,286,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,295,return "es";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,300,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,306,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,315,return "fr";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,320,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,326,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,335,return "it";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,340,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,346,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,355,return "nl";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,360,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,366,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,375,return "no";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,380,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,386,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,395,return "pt";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,400,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,406,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,415,return "sv";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,420,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,469,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,478,return "cs";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,483,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,489,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,498,return "hu";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,503,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,509,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,518,return "pl";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,523,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,529,private static int[] ngrams = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,538,return "ro";
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,543,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,606,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,669,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,732,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,800,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,820,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,883,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1003,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1063,return match(det, ngrams, byteMap);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1156,protected static byte[] unshapeMap = {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1183,byte bb[] = unshape(det.fInputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1184,det.setText(bb);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1194,private byte[] unshape(byte[] inputBytes) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1195,byte resultByteArr[] = unshapeLamAlef(inputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1200,return resultByteArr;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1203,private byte[] unshapeLamAlef(byte[] inputBytes) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1205,ByteBuffer resultBuffer;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1211,resultBigBuffer.put(unshapedLamAlef);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1212,else
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1215,resultBuffer = ByteBuffer.allocate(resultBigBuffer.position());
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1217,return resultBuffer.array();
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1220,private boolean isLamAlef(byte b) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1228,protected void matchFinish(CharsetDetector det) {
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1230,det.setText(prev_fInputBytes);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1249,matchInit(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1251,matchFinish(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1252,return result;
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1271,matchInit(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1273,matchFinish(det);
tika-parsers/src/main/java/org/apache/tika/parser/txt/CharsetRecog_sbcs.java,1274,return result;
tika-parsers/src/main/java/org/apache/tika/parser/microsoft/ExcelExtractor.java,234,this.formatListener = new FormatTrackingHSSFListener(this, locale);
